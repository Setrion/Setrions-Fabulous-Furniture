package net.setrion.fabulous_furniture.data;

import net.minecraft.client.data.models.BlockModelGenerators;
import net.minecraft.client.data.models.ItemModelGenerators;
import net.minecraft.client.data.models.ItemModelOutput;
import net.minecraft.client.data.models.ModelProvider;
import net.minecraft.client.data.models.blockstates.*;
import net.minecraft.client.data.models.model.*;
import net.minecraft.core.Holder;
import net.minecraft.core.registries.BuiltInRegistries;
import net.minecraft.data.PackOutput;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.world.item.Item;
import net.minecraft.world.level.block.Block;
import net.minecraft.world.level.block.Blocks;
import net.minecraft.world.level.block.SmokerBlock;
import net.minecraft.world.level.block.state.properties.DoorHingeSide;
import net.minecraft.world.level.block.state.properties.DoubleBlockHalf;
import net.neoforged.neoforge.registries.DeferredHolder;
import net.setrion.fabulous_furniture.FabulousFurniture;
import net.setrion.fabulous_furniture.registry.SFFBlocks;
import net.setrion.fabulous_furniture.world.level.block.*;
import net.setrion.fabulous_furniture.world.level.block.state.properties.CurtainShape;
import net.setrion.fabulous_furniture.world.level.block.state.properties.ShelfShape;

import java.util.Collection;
import java.util.Optional;
import java.util.stream.Collectors;
import java.util.stream.Stream;

public class ModelGenerator extends ModelProvider {

    public ModelGenerator(PackOutput output) {
        super(output, FabulousFurniture.MOD_ID);
    }

    @Override
    protected void registerModels(BlockModelGenerators blockModels, ItemModelGenerators itemModels) {
        blockModels.blockStateOutput.accept(createCrate(SFFBlocks.OAK_CRATE.get(), TextureMapping.getBlockTexture(Blocks.OAK_LOG, "_top"), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createCrate(SFFBlocks.SPRUCE_CRATE.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG, "_top"), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createCrate(SFFBlocks.BIRCH_CRATE.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG, "_top"), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), blockModels));
        blockModels.blockStateOutput.accept(createCrate(SFFBlocks.JUNGLE_CRATE.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG, "_top"), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createCrate(SFFBlocks.ACACIA_CRATE.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG, "_top"), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), blockModels));
        blockModels.blockStateOutput.accept(createCrate(SFFBlocks.CHERRY_CRATE.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG, "_top"), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), blockModels));
        blockModels.blockStateOutput.accept(createCrate(SFFBlocks.DARK_OAK_CRATE.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG, "_top"), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createCrate(SFFBlocks.PALE_OAK_CRATE.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG, "_top"), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createCrate(SFFBlocks.BAMBOO_CRATE.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCrate(SFFBlocks.MANGROVE_CRATE.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG, "_top"), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createCrate(SFFBlocks.CRIMSON_CRATE.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM, "_top"), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), blockModels));
        blockModels.blockStateOutput.accept(createCrate(SFFBlocks.WARPED_CRATE.get(), TextureMapping.getBlockTexture(Blocks.WARPED_STEM, "_top"), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.OAK_POLISHED_GRANITE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.OAK_POLISHED_DIORITE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.OAK_POLISHED_ANDESITE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.OAK_POLISHED_DEEPSLATE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.OAK_POLISHED_TUFF_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.OAK_SANDSTONE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.OAK_RED_SANDSTONE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.OAK_POLISHED_BLACKSTONE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.OAK_GILDED_BLACKSTONE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.OAK_SMOOTH_BASALT_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.OAK_QUARTZ_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.OAK_CALCITE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.SPRUCE_POLISHED_GRANITE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.SPRUCE_POLISHED_DIORITE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.SPRUCE_POLISHED_ANDESITE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.SPRUCE_POLISHED_DEEPSLATE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.SPRUCE_POLISHED_TUFF_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.SPRUCE_SANDSTONE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.SPRUCE_RED_SANDSTONE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.SPRUCE_POLISHED_BLACKSTONE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.SPRUCE_GILDED_BLACKSTONE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.SPRUCE_SMOOTH_BASALT_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.SPRUCE_QUARTZ_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.SPRUCE_CALCITE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.BIRCH_POLISHED_GRANITE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.BIRCH_POLISHED_DIORITE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.BIRCH_POLISHED_ANDESITE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.BIRCH_POLISHED_DEEPSLATE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.BIRCH_POLISHED_TUFF_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.BIRCH_SANDSTONE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.BIRCH_RED_SANDSTONE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.BIRCH_POLISHED_BLACKSTONE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.BIRCH_GILDED_BLACKSTONE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.BIRCH_SMOOTH_BASALT_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.BIRCH_QUARTZ_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.BIRCH_CALCITE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.JUNGLE_POLISHED_GRANITE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.JUNGLE_POLISHED_DIORITE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.JUNGLE_POLISHED_ANDESITE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.JUNGLE_POLISHED_DEEPSLATE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.JUNGLE_POLISHED_TUFF_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.JUNGLE_SANDSTONE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.JUNGLE_RED_SANDSTONE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.JUNGLE_POLISHED_BLACKSTONE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.JUNGLE_GILDED_BLACKSTONE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.JUNGLE_SMOOTH_BASALT_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.JUNGLE_QUARTZ_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.JUNGLE_CALCITE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.ACACIA_POLISHED_GRANITE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.ACACIA_POLISHED_DIORITE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.ACACIA_POLISHED_ANDESITE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.ACACIA_POLISHED_DEEPSLATE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.ACACIA_POLISHED_TUFF_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.ACACIA_SANDSTONE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.ACACIA_RED_SANDSTONE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.ACACIA_POLISHED_BLACKSTONE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.ACACIA_GILDED_BLACKSTONE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.ACACIA_SMOOTH_BASALT_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.ACACIA_QUARTZ_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.ACACIA_CALCITE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.CHERRY_POLISHED_GRANITE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.CHERRY_POLISHED_DIORITE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.CHERRY_POLISHED_ANDESITE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.CHERRY_POLISHED_DEEPSLATE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.CHERRY_POLISHED_TUFF_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.CHERRY_SANDSTONE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.CHERRY_RED_SANDSTONE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.CHERRY_POLISHED_BLACKSTONE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.CHERRY_GILDED_BLACKSTONE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.CHERRY_SMOOTH_BASALT_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.CHERRY_QUARTZ_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.CHERRY_CALCITE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.DARK_OAK_POLISHED_GRANITE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.DARK_OAK_POLISHED_DIORITE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.DARK_OAK_POLISHED_ANDESITE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.DARK_OAK_POLISHED_DEEPSLATE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.DARK_OAK_POLISHED_TUFF_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.DARK_OAK_SANDSTONE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.DARK_OAK_RED_SANDSTONE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.DARK_OAK_POLISHED_BLACKSTONE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.DARK_OAK_GILDED_BLACKSTONE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.DARK_OAK_SMOOTH_BASALT_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.DARK_OAK_QUARTZ_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.DARK_OAK_CALCITE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.PALE_OAK_POLISHED_GRANITE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.PALE_OAK_POLISHED_DIORITE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.PALE_OAK_POLISHED_ANDESITE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.PALE_OAK_POLISHED_DEEPSLATE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.PALE_OAK_POLISHED_TUFF_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.PALE_OAK_SANDSTONE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.PALE_OAK_RED_SANDSTONE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.PALE_OAK_POLISHED_BLACKSTONE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.PALE_OAK_GILDED_BLACKSTONE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.PALE_OAK_SMOOTH_BASALT_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.PALE_OAK_QUARTZ_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.PALE_OAK_CALCITE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.BAMBOO_POLISHED_GRANITE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.BAMBOO_POLISHED_DIORITE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.BAMBOO_POLISHED_ANDESITE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.BAMBOO_POLISHED_DEEPSLATE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.BAMBOO_POLISHED_TUFF_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.BAMBOO_SANDSTONE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.BAMBOO_RED_SANDSTONE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.BAMBOO_POLISHED_BLACKSTONE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.BAMBOO_GILDED_BLACKSTONE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.BAMBOO_SMOOTH_BASALT_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.BAMBOO_QUARTZ_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.BAMBOO_CALCITE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.MANGROVE_POLISHED_GRANITE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.MANGROVE_POLISHED_DIORITE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.MANGROVE_POLISHED_ANDESITE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.MANGROVE_POLISHED_DEEPSLATE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.MANGROVE_POLISHED_TUFF_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.MANGROVE_SANDSTONE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.MANGROVE_RED_SANDSTONE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.MANGROVE_POLISHED_BLACKSTONE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.MANGROVE_GILDED_BLACKSTONE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.MANGROVE_SMOOTH_BASALT_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.MANGROVE_QUARTZ_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.MANGROVE_CALCITE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.CRIMSON_POLISHED_GRANITE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.CRIMSON_POLISHED_DIORITE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.CRIMSON_POLISHED_ANDESITE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.CRIMSON_POLISHED_DEEPSLATE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.CRIMSON_POLISHED_TUFF_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.CRIMSON_SANDSTONE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.CRIMSON_RED_SANDSTONE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.CRIMSON_POLISHED_BLACKSTONE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.CRIMSON_GILDED_BLACKSTONE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.CRIMSON_SMOOTH_BASALT_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.CRIMSON_QUARTZ_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.CRIMSON_CALCITE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.WARPED_POLISHED_GRANITE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.WARPED_POLISHED_DIORITE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.WARPED_POLISHED_ANDESITE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.WARPED_POLISHED_DEEPSLATE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.WARPED_POLISHED_TUFF_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.WARPED_SANDSTONE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.WARPED_RED_SANDSTONE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.WARPED_POLISHED_BLACKSTONE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.WARPED_GILDED_BLACKSTONE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.WARPED_SMOOTH_BASALT_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.WARPED_QUARTZ_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounter(SFFBlocks.WARPED_CALCITE_KITCHEN_COUNTER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.OAK_POLISHED_GRANITE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.OAK_POLISHED_DIORITE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.OAK_POLISHED_ANDESITE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.OAK_POLISHED_DEEPSLATE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.OAK_POLISHED_TUFF_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.OAK_SANDSTONE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.OAK_RED_SANDSTONE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.OAK_POLISHED_BLACKSTONE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.OAK_GILDED_BLACKSTONE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.OAK_SMOOTH_BASALT_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.OAK_QUARTZ_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.OAK_CALCITE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.SPRUCE_POLISHED_GRANITE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.SPRUCE_POLISHED_DIORITE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.SPRUCE_POLISHED_ANDESITE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.SPRUCE_POLISHED_DEEPSLATE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.SPRUCE_POLISHED_TUFF_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.SPRUCE_SANDSTONE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.SPRUCE_RED_SANDSTONE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.SPRUCE_POLISHED_BLACKSTONE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.SPRUCE_GILDED_BLACKSTONE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.SPRUCE_SMOOTH_BASALT_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.SPRUCE_QUARTZ_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.SPRUCE_CALCITE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.BIRCH_POLISHED_GRANITE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.BIRCH_POLISHED_DIORITE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.BIRCH_POLISHED_ANDESITE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.BIRCH_POLISHED_DEEPSLATE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.BIRCH_POLISHED_TUFF_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.BIRCH_SANDSTONE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.BIRCH_RED_SANDSTONE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.BIRCH_POLISHED_BLACKSTONE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.BIRCH_GILDED_BLACKSTONE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.BIRCH_SMOOTH_BASALT_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.BIRCH_QUARTZ_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.BIRCH_CALCITE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.JUNGLE_POLISHED_GRANITE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.JUNGLE_POLISHED_DIORITE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.JUNGLE_POLISHED_ANDESITE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.JUNGLE_POLISHED_DEEPSLATE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.JUNGLE_POLISHED_TUFF_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.JUNGLE_SANDSTONE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.JUNGLE_RED_SANDSTONE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.JUNGLE_POLISHED_BLACKSTONE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.JUNGLE_GILDED_BLACKSTONE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.JUNGLE_SMOOTH_BASALT_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.JUNGLE_QUARTZ_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.JUNGLE_CALCITE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.ACACIA_POLISHED_GRANITE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.ACACIA_POLISHED_DIORITE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.ACACIA_POLISHED_ANDESITE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.ACACIA_POLISHED_DEEPSLATE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.ACACIA_POLISHED_TUFF_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.ACACIA_SANDSTONE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.ACACIA_RED_SANDSTONE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.ACACIA_POLISHED_BLACKSTONE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.ACACIA_GILDED_BLACKSTONE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.ACACIA_SMOOTH_BASALT_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.ACACIA_QUARTZ_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.ACACIA_CALCITE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.CHERRY_POLISHED_GRANITE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.CHERRY_POLISHED_DIORITE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.CHERRY_POLISHED_ANDESITE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.CHERRY_POLISHED_DEEPSLATE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.CHERRY_POLISHED_TUFF_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.CHERRY_SANDSTONE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.CHERRY_RED_SANDSTONE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.CHERRY_POLISHED_BLACKSTONE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.CHERRY_GILDED_BLACKSTONE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.CHERRY_SMOOTH_BASALT_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.CHERRY_QUARTZ_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.CHERRY_CALCITE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.DARK_OAK_POLISHED_GRANITE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.DARK_OAK_POLISHED_DIORITE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.DARK_OAK_POLISHED_ANDESITE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.DARK_OAK_POLISHED_DEEPSLATE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.DARK_OAK_POLISHED_TUFF_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.DARK_OAK_SANDSTONE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.DARK_OAK_RED_SANDSTONE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.DARK_OAK_POLISHED_BLACKSTONE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.DARK_OAK_GILDED_BLACKSTONE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.DARK_OAK_SMOOTH_BASALT_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.DARK_OAK_QUARTZ_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.DARK_OAK_CALCITE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.PALE_OAK_POLISHED_GRANITE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.PALE_OAK_POLISHED_DIORITE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.PALE_OAK_POLISHED_ANDESITE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.PALE_OAK_POLISHED_DEEPSLATE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.PALE_OAK_POLISHED_TUFF_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.PALE_OAK_SANDSTONE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.PALE_OAK_RED_SANDSTONE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.PALE_OAK_POLISHED_BLACKSTONE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.PALE_OAK_GILDED_BLACKSTONE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.PALE_OAK_SMOOTH_BASALT_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.PALE_OAK_QUARTZ_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.PALE_OAK_CALCITE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.BAMBOO_POLISHED_GRANITE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.BAMBOO_POLISHED_DIORITE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.BAMBOO_POLISHED_ANDESITE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.BAMBOO_POLISHED_DEEPSLATE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.BAMBOO_POLISHED_TUFF_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.BAMBOO_SANDSTONE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.BAMBOO_RED_SANDSTONE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.BAMBOO_POLISHED_BLACKSTONE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.BAMBOO_GILDED_BLACKSTONE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.BAMBOO_SMOOTH_BASALT_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.BAMBOO_QUARTZ_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.BAMBOO_CALCITE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.MANGROVE_POLISHED_GRANITE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.MANGROVE_POLISHED_DIORITE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.MANGROVE_POLISHED_ANDESITE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.MANGROVE_POLISHED_DEEPSLATE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.MANGROVE_POLISHED_TUFF_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.MANGROVE_SANDSTONE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.MANGROVE_RED_SANDSTONE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.MANGROVE_POLISHED_BLACKSTONE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.MANGROVE_GILDED_BLACKSTONE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.MANGROVE_SMOOTH_BASALT_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.MANGROVE_QUARTZ_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.MANGROVE_CALCITE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.CRIMSON_POLISHED_GRANITE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.CRIMSON_POLISHED_DIORITE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.CRIMSON_POLISHED_ANDESITE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.CRIMSON_POLISHED_DEEPSLATE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.CRIMSON_POLISHED_TUFF_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.CRIMSON_SANDSTONE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.CRIMSON_RED_SANDSTONE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.CRIMSON_POLISHED_BLACKSTONE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.CRIMSON_GILDED_BLACKSTONE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.CRIMSON_SMOOTH_BASALT_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.CRIMSON_QUARTZ_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.CRIMSON_CALCITE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.WARPED_POLISHED_GRANITE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.WARPED_POLISHED_DIORITE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.WARPED_POLISHED_ANDESITE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.WARPED_POLISHED_DEEPSLATE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.WARPED_POLISHED_TUFF_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.WARPED_SANDSTONE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.WARPED_RED_SANDSTONE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.WARPED_POLISHED_BLACKSTONE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.WARPED_GILDED_BLACKSTONE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.WARPED_SMOOTH_BASALT_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.WARPED_QUARTZ_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterInnerCorner(SFFBlocks.WARPED_CALCITE_KITCHEN_COUNTER_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.OAK_POLISHED_GRANITE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.OAK_POLISHED_DIORITE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.OAK_POLISHED_ANDESITE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.OAK_POLISHED_DEEPSLATE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.OAK_POLISHED_TUFF_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.OAK_SANDSTONE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.OAK_RED_SANDSTONE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.OAK_POLISHED_BLACKSTONE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.OAK_GILDED_BLACKSTONE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.OAK_SMOOTH_BASALT_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.OAK_QUARTZ_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.OAK_CALCITE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.SPRUCE_POLISHED_GRANITE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.SPRUCE_POLISHED_DIORITE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.SPRUCE_POLISHED_ANDESITE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.SPRUCE_POLISHED_DEEPSLATE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.SPRUCE_POLISHED_TUFF_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.SPRUCE_SANDSTONE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.SPRUCE_RED_SANDSTONE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.SPRUCE_POLISHED_BLACKSTONE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.SPRUCE_GILDED_BLACKSTONE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.SPRUCE_SMOOTH_BASALT_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.SPRUCE_QUARTZ_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.SPRUCE_CALCITE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.BIRCH_POLISHED_GRANITE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.BIRCH_POLISHED_DIORITE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.BIRCH_POLISHED_ANDESITE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.BIRCH_POLISHED_DEEPSLATE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.BIRCH_POLISHED_TUFF_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.BIRCH_SANDSTONE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.BIRCH_RED_SANDSTONE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.BIRCH_POLISHED_BLACKSTONE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.BIRCH_GILDED_BLACKSTONE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.BIRCH_SMOOTH_BASALT_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.BIRCH_QUARTZ_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.BIRCH_CALCITE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.JUNGLE_POLISHED_GRANITE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.JUNGLE_POLISHED_DIORITE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.JUNGLE_POLISHED_ANDESITE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.JUNGLE_POLISHED_DEEPSLATE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.JUNGLE_POLISHED_TUFF_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.JUNGLE_SANDSTONE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.JUNGLE_RED_SANDSTONE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.JUNGLE_POLISHED_BLACKSTONE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.JUNGLE_GILDED_BLACKSTONE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.JUNGLE_SMOOTH_BASALT_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.JUNGLE_QUARTZ_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.JUNGLE_CALCITE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.ACACIA_POLISHED_GRANITE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.ACACIA_POLISHED_DIORITE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.ACACIA_POLISHED_ANDESITE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.ACACIA_POLISHED_DEEPSLATE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.ACACIA_POLISHED_TUFF_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.ACACIA_SANDSTONE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.ACACIA_RED_SANDSTONE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.ACACIA_POLISHED_BLACKSTONE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.ACACIA_GILDED_BLACKSTONE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.ACACIA_SMOOTH_BASALT_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.ACACIA_QUARTZ_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.ACACIA_CALCITE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.CHERRY_POLISHED_GRANITE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.CHERRY_POLISHED_DIORITE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.CHERRY_POLISHED_ANDESITE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.CHERRY_POLISHED_DEEPSLATE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.CHERRY_POLISHED_TUFF_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.CHERRY_SANDSTONE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.CHERRY_RED_SANDSTONE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.CHERRY_POLISHED_BLACKSTONE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.CHERRY_GILDED_BLACKSTONE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.CHERRY_SMOOTH_BASALT_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.CHERRY_QUARTZ_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.CHERRY_CALCITE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.DARK_OAK_POLISHED_GRANITE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.DARK_OAK_POLISHED_DIORITE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.DARK_OAK_POLISHED_ANDESITE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.DARK_OAK_POLISHED_DEEPSLATE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.DARK_OAK_POLISHED_TUFF_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.DARK_OAK_SANDSTONE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.DARK_OAK_RED_SANDSTONE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.DARK_OAK_POLISHED_BLACKSTONE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.DARK_OAK_GILDED_BLACKSTONE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.DARK_OAK_SMOOTH_BASALT_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.DARK_OAK_QUARTZ_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.DARK_OAK_CALCITE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.PALE_OAK_POLISHED_GRANITE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.PALE_OAK_POLISHED_DIORITE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.PALE_OAK_POLISHED_ANDESITE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.PALE_OAK_POLISHED_DEEPSLATE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.PALE_OAK_POLISHED_TUFF_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.PALE_OAK_SANDSTONE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.PALE_OAK_RED_SANDSTONE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.PALE_OAK_POLISHED_BLACKSTONE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.PALE_OAK_GILDED_BLACKSTONE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.PALE_OAK_SMOOTH_BASALT_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.PALE_OAK_QUARTZ_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.PALE_OAK_CALCITE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.BAMBOO_POLISHED_GRANITE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.BAMBOO_POLISHED_DIORITE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.BAMBOO_POLISHED_ANDESITE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.BAMBOO_POLISHED_DEEPSLATE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.BAMBOO_POLISHED_TUFF_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.BAMBOO_SANDSTONE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.BAMBOO_RED_SANDSTONE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.BAMBOO_POLISHED_BLACKSTONE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.BAMBOO_GILDED_BLACKSTONE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.BAMBOO_SMOOTH_BASALT_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.BAMBOO_QUARTZ_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.BAMBOO_CALCITE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.MANGROVE_POLISHED_GRANITE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.MANGROVE_POLISHED_DIORITE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.MANGROVE_POLISHED_ANDESITE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.MANGROVE_POLISHED_DEEPSLATE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.MANGROVE_POLISHED_TUFF_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.MANGROVE_SANDSTONE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.MANGROVE_RED_SANDSTONE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.MANGROVE_POLISHED_BLACKSTONE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.MANGROVE_GILDED_BLACKSTONE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.MANGROVE_SMOOTH_BASALT_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.MANGROVE_QUARTZ_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.MANGROVE_CALCITE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.CRIMSON_POLISHED_GRANITE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.CRIMSON_POLISHED_DIORITE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.CRIMSON_POLISHED_ANDESITE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.CRIMSON_POLISHED_DEEPSLATE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.CRIMSON_POLISHED_TUFF_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.CRIMSON_SANDSTONE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.CRIMSON_RED_SANDSTONE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.CRIMSON_POLISHED_BLACKSTONE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.CRIMSON_GILDED_BLACKSTONE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.CRIMSON_SMOOTH_BASALT_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.CRIMSON_QUARTZ_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.CRIMSON_CALCITE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.WARPED_POLISHED_GRANITE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.WARPED_POLISHED_DIORITE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.WARPED_POLISHED_ANDESITE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.WARPED_POLISHED_DEEPSLATE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.WARPED_POLISHED_TUFF_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.WARPED_SANDSTONE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.WARPED_RED_SANDSTONE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.WARPED_POLISHED_BLACKSTONE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.WARPED_GILDED_BLACKSTONE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.WARPED_SMOOTH_BASALT_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.WARPED_QUARTZ_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterOuterCorner(SFFBlocks.WARPED_CALCITE_KITCHEN_COUNTER_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.OAK_POLISHED_GRANITE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.OAK_POLISHED_DIORITE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.OAK_POLISHED_ANDESITE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.OAK_POLISHED_DEEPSLATE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.OAK_POLISHED_TUFF_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.OAK_SANDSTONE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.OAK_RED_SANDSTONE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.OAK_POLISHED_BLACKSTONE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.OAK_GILDED_BLACKSTONE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.OAK_SMOOTH_BASALT_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.OAK_QUARTZ_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.OAK_CALCITE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.SPRUCE_POLISHED_GRANITE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.SPRUCE_POLISHED_DIORITE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.SPRUCE_POLISHED_ANDESITE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.SPRUCE_POLISHED_DEEPSLATE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.SPRUCE_POLISHED_TUFF_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.SPRUCE_SANDSTONE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.SPRUCE_RED_SANDSTONE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.SPRUCE_POLISHED_BLACKSTONE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.SPRUCE_GILDED_BLACKSTONE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.SPRUCE_SMOOTH_BASALT_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.SPRUCE_QUARTZ_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.SPRUCE_CALCITE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.BIRCH_POLISHED_GRANITE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.BIRCH_POLISHED_DIORITE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.BIRCH_POLISHED_ANDESITE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.BIRCH_POLISHED_DEEPSLATE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.BIRCH_POLISHED_TUFF_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.BIRCH_SANDSTONE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.BIRCH_RED_SANDSTONE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.BIRCH_POLISHED_BLACKSTONE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.BIRCH_GILDED_BLACKSTONE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.BIRCH_SMOOTH_BASALT_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.BIRCH_QUARTZ_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.BIRCH_CALCITE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.JUNGLE_POLISHED_GRANITE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.JUNGLE_POLISHED_DIORITE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.JUNGLE_POLISHED_ANDESITE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.JUNGLE_POLISHED_DEEPSLATE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.JUNGLE_POLISHED_TUFF_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.JUNGLE_SANDSTONE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.JUNGLE_RED_SANDSTONE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.JUNGLE_POLISHED_BLACKSTONE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.JUNGLE_GILDED_BLACKSTONE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.JUNGLE_SMOOTH_BASALT_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.JUNGLE_QUARTZ_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.JUNGLE_CALCITE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.ACACIA_POLISHED_GRANITE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.ACACIA_POLISHED_DIORITE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.ACACIA_POLISHED_ANDESITE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.ACACIA_POLISHED_DEEPSLATE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.ACACIA_POLISHED_TUFF_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.ACACIA_SANDSTONE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.ACACIA_RED_SANDSTONE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.ACACIA_POLISHED_BLACKSTONE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.ACACIA_GILDED_BLACKSTONE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.ACACIA_SMOOTH_BASALT_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.ACACIA_QUARTZ_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.ACACIA_CALCITE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.CHERRY_POLISHED_GRANITE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.CHERRY_POLISHED_DIORITE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.CHERRY_POLISHED_ANDESITE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.CHERRY_POLISHED_DEEPSLATE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.CHERRY_POLISHED_TUFF_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.CHERRY_SANDSTONE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.CHERRY_RED_SANDSTONE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.CHERRY_POLISHED_BLACKSTONE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.CHERRY_GILDED_BLACKSTONE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.CHERRY_SMOOTH_BASALT_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.CHERRY_QUARTZ_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.CHERRY_CALCITE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.DARK_OAK_POLISHED_GRANITE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.DARK_OAK_POLISHED_DIORITE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.DARK_OAK_POLISHED_ANDESITE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.DARK_OAK_POLISHED_DEEPSLATE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.DARK_OAK_POLISHED_TUFF_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.DARK_OAK_SANDSTONE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.DARK_OAK_RED_SANDSTONE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.DARK_OAK_POLISHED_BLACKSTONE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.DARK_OAK_GILDED_BLACKSTONE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.DARK_OAK_SMOOTH_BASALT_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.DARK_OAK_QUARTZ_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.DARK_OAK_CALCITE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.PALE_OAK_POLISHED_GRANITE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.PALE_OAK_POLISHED_DIORITE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.PALE_OAK_POLISHED_ANDESITE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.PALE_OAK_POLISHED_DEEPSLATE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.PALE_OAK_POLISHED_TUFF_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.PALE_OAK_SANDSTONE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.PALE_OAK_RED_SANDSTONE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.PALE_OAK_POLISHED_BLACKSTONE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.PALE_OAK_GILDED_BLACKSTONE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.PALE_OAK_SMOOTH_BASALT_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.PALE_OAK_QUARTZ_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.PALE_OAK_CALCITE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.BAMBOO_POLISHED_GRANITE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.BAMBOO_POLISHED_DIORITE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.BAMBOO_POLISHED_ANDESITE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.BAMBOO_POLISHED_DEEPSLATE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.BAMBOO_POLISHED_TUFF_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.BAMBOO_SANDSTONE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.BAMBOO_RED_SANDSTONE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.BAMBOO_POLISHED_BLACKSTONE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.BAMBOO_GILDED_BLACKSTONE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.BAMBOO_SMOOTH_BASALT_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.BAMBOO_QUARTZ_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.BAMBOO_CALCITE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.MANGROVE_POLISHED_GRANITE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.MANGROVE_POLISHED_DIORITE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.MANGROVE_POLISHED_ANDESITE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.MANGROVE_POLISHED_DEEPSLATE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.MANGROVE_POLISHED_TUFF_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.MANGROVE_SANDSTONE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.MANGROVE_RED_SANDSTONE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.MANGROVE_POLISHED_BLACKSTONE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.MANGROVE_GILDED_BLACKSTONE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.MANGROVE_SMOOTH_BASALT_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.MANGROVE_QUARTZ_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.MANGROVE_CALCITE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.CRIMSON_POLISHED_GRANITE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.CRIMSON_POLISHED_DIORITE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.CRIMSON_POLISHED_ANDESITE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.CRIMSON_POLISHED_DEEPSLATE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.CRIMSON_POLISHED_TUFF_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.CRIMSON_SANDSTONE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.CRIMSON_RED_SANDSTONE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.CRIMSON_POLISHED_BLACKSTONE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.CRIMSON_GILDED_BLACKSTONE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.CRIMSON_SMOOTH_BASALT_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.CRIMSON_QUARTZ_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.CRIMSON_CALCITE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.WARPED_POLISHED_GRANITE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.WARPED_POLISHED_DIORITE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.WARPED_POLISHED_ANDESITE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.WARPED_POLISHED_DEEPSLATE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.WARPED_POLISHED_TUFF_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.WARPED_SANDSTONE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.WARPED_RED_SANDSTONE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.WARPED_POLISHED_BLACKSTONE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.WARPED_GILDED_BLACKSTONE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.WARPED_SMOOTH_BASALT_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.WARPED_QUARTZ_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCounter(SFFBlocks.WARPED_CALCITE_KITCHEN_COUNTER_OPEN.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.OAK_POLISHED_GRANITE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.OAK_POLISHED_DIORITE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.OAK_POLISHED_ANDESITE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.OAK_POLISHED_DEEPSLATE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.OAK_POLISHED_TUFF_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.OAK_SANDSTONE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.OAK_RED_SANDSTONE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.OAK_POLISHED_BLACKSTONE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.OAK_GILDED_BLACKSTONE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.OAK_SMOOTH_BASALT_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.OAK_QUARTZ_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.OAK_CALCITE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.OAK_LOG), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.SPRUCE_POLISHED_GRANITE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.SPRUCE_POLISHED_DIORITE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.SPRUCE_POLISHED_ANDESITE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.SPRUCE_POLISHED_DEEPSLATE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.SPRUCE_POLISHED_TUFF_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.SPRUCE_SANDSTONE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.SPRUCE_RED_SANDSTONE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.SPRUCE_POLISHED_BLACKSTONE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.SPRUCE_GILDED_BLACKSTONE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.SPRUCE_SMOOTH_BASALT_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.SPRUCE_QUARTZ_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.SPRUCE_CALCITE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.BIRCH_POLISHED_GRANITE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.BIRCH_POLISHED_DIORITE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.BIRCH_POLISHED_ANDESITE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.BIRCH_POLISHED_DEEPSLATE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.BIRCH_POLISHED_TUFF_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.BIRCH_SANDSTONE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.BIRCH_RED_SANDSTONE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.BIRCH_POLISHED_BLACKSTONE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.BIRCH_GILDED_BLACKSTONE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.BIRCH_SMOOTH_BASALT_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.BIRCH_QUARTZ_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.BIRCH_CALCITE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.JUNGLE_POLISHED_GRANITE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.JUNGLE_POLISHED_DIORITE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.JUNGLE_POLISHED_ANDESITE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.JUNGLE_POLISHED_DEEPSLATE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.JUNGLE_POLISHED_TUFF_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.JUNGLE_SANDSTONE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.JUNGLE_RED_SANDSTONE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.JUNGLE_POLISHED_BLACKSTONE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.JUNGLE_GILDED_BLACKSTONE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.JUNGLE_SMOOTH_BASALT_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.JUNGLE_QUARTZ_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.JUNGLE_CALCITE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.ACACIA_POLISHED_GRANITE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.ACACIA_POLISHED_DIORITE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.ACACIA_POLISHED_ANDESITE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.ACACIA_POLISHED_DEEPSLATE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.ACACIA_POLISHED_TUFF_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.ACACIA_SANDSTONE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.ACACIA_RED_SANDSTONE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.ACACIA_POLISHED_BLACKSTONE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.ACACIA_GILDED_BLACKSTONE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.ACACIA_SMOOTH_BASALT_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.ACACIA_QUARTZ_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.ACACIA_CALCITE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.CHERRY_POLISHED_GRANITE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.CHERRY_POLISHED_DIORITE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.CHERRY_POLISHED_ANDESITE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.CHERRY_POLISHED_DEEPSLATE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.CHERRY_POLISHED_TUFF_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.CHERRY_SANDSTONE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.CHERRY_RED_SANDSTONE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.CHERRY_POLISHED_BLACKSTONE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.CHERRY_GILDED_BLACKSTONE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.CHERRY_SMOOTH_BASALT_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.CHERRY_QUARTZ_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.CHERRY_CALCITE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.DARK_OAK_POLISHED_GRANITE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.DARK_OAK_POLISHED_DIORITE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.DARK_OAK_POLISHED_ANDESITE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.DARK_OAK_POLISHED_DEEPSLATE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.DARK_OAK_POLISHED_TUFF_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.DARK_OAK_SANDSTONE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.DARK_OAK_RED_SANDSTONE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.DARK_OAK_POLISHED_BLACKSTONE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.DARK_OAK_GILDED_BLACKSTONE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.DARK_OAK_SMOOTH_BASALT_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.DARK_OAK_QUARTZ_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.DARK_OAK_CALCITE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.PALE_OAK_POLISHED_GRANITE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.PALE_OAK_POLISHED_DIORITE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.PALE_OAK_POLISHED_ANDESITE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.PALE_OAK_POLISHED_DEEPSLATE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.PALE_OAK_POLISHED_TUFF_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.PALE_OAK_SANDSTONE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.PALE_OAK_RED_SANDSTONE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.PALE_OAK_POLISHED_BLACKSTONE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.PALE_OAK_GILDED_BLACKSTONE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.PALE_OAK_SMOOTH_BASALT_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.PALE_OAK_QUARTZ_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.PALE_OAK_CALCITE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.BAMBOO_POLISHED_GRANITE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.BAMBOO_POLISHED_DIORITE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.BAMBOO_POLISHED_ANDESITE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.BAMBOO_POLISHED_DEEPSLATE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.BAMBOO_POLISHED_TUFF_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.BAMBOO_SANDSTONE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.BAMBOO_RED_SANDSTONE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.BAMBOO_POLISHED_BLACKSTONE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.BAMBOO_GILDED_BLACKSTONE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.BAMBOO_SMOOTH_BASALT_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.BAMBOO_QUARTZ_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.BAMBOO_CALCITE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.MANGROVE_POLISHED_GRANITE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.MANGROVE_POLISHED_DIORITE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.MANGROVE_POLISHED_ANDESITE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.MANGROVE_POLISHED_DEEPSLATE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.MANGROVE_POLISHED_TUFF_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.MANGROVE_SANDSTONE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.MANGROVE_RED_SANDSTONE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.MANGROVE_POLISHED_BLACKSTONE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.MANGROVE_GILDED_BLACKSTONE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.MANGROVE_SMOOTH_BASALT_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.MANGROVE_QUARTZ_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.MANGROVE_CALCITE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.CRIMSON_POLISHED_GRANITE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.CRIMSON_POLISHED_DIORITE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.CRIMSON_POLISHED_ANDESITE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.CRIMSON_POLISHED_DEEPSLATE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.CRIMSON_POLISHED_TUFF_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.CRIMSON_SANDSTONE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.CRIMSON_RED_SANDSTONE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.CRIMSON_POLISHED_BLACKSTONE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.CRIMSON_GILDED_BLACKSTONE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.CRIMSON_SMOOTH_BASALT_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.CRIMSON_QUARTZ_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.CRIMSON_CALCITE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.WARPED_POLISHED_GRANITE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.WARPED_POLISHED_DIORITE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.WARPED_POLISHED_ANDESITE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.WARPED_POLISHED_DEEPSLATE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.WARPED_POLISHED_TUFF_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.WARPED_SANDSTONE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.WARPED_RED_SANDSTONE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.WARPED_POLISHED_BLACKSTONE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.WARPED_GILDED_BLACKSTONE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.WARPED_SMOOTH_BASALT_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.WARPED_QUARTZ_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterDoor(SFFBlocks.WARPED_CALCITE_KITCHEN_COUNTER_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.OAK_POLISHED_GRANITE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.OAK_POLISHED_DIORITE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.OAK_POLISHED_ANDESITE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.OAK_POLISHED_DEEPSLATE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.OAK_POLISHED_TUFF_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.OAK_SANDSTONE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.OAK_RED_SANDSTONE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.OAK_POLISHED_BLACKSTONE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.OAK_GILDED_BLACKSTONE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.OAK_SMOOTH_BASALT_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.OAK_QUARTZ_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.OAK_CALCITE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.OAK_LOG), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.SPRUCE_POLISHED_GRANITE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.SPRUCE_POLISHED_DIORITE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.SPRUCE_POLISHED_ANDESITE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.SPRUCE_POLISHED_DEEPSLATE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.SPRUCE_POLISHED_TUFF_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.SPRUCE_SANDSTONE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.SPRUCE_RED_SANDSTONE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.SPRUCE_POLISHED_BLACKSTONE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.SPRUCE_GILDED_BLACKSTONE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.SPRUCE_SMOOTH_BASALT_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.SPRUCE_QUARTZ_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.SPRUCE_CALCITE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.BIRCH_POLISHED_GRANITE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.BIRCH_POLISHED_DIORITE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.BIRCH_POLISHED_ANDESITE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.BIRCH_POLISHED_DEEPSLATE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.BIRCH_POLISHED_TUFF_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.BIRCH_SANDSTONE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.BIRCH_RED_SANDSTONE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.BIRCH_POLISHED_BLACKSTONE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.BIRCH_GILDED_BLACKSTONE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.BIRCH_SMOOTH_BASALT_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.BIRCH_QUARTZ_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.BIRCH_CALCITE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.JUNGLE_POLISHED_GRANITE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.JUNGLE_POLISHED_DIORITE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.JUNGLE_POLISHED_ANDESITE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.JUNGLE_POLISHED_DEEPSLATE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.JUNGLE_POLISHED_TUFF_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.JUNGLE_SANDSTONE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.JUNGLE_RED_SANDSTONE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.JUNGLE_POLISHED_BLACKSTONE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.JUNGLE_GILDED_BLACKSTONE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.JUNGLE_SMOOTH_BASALT_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.JUNGLE_QUARTZ_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.JUNGLE_CALCITE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.ACACIA_POLISHED_GRANITE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.ACACIA_POLISHED_DIORITE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.ACACIA_POLISHED_ANDESITE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.ACACIA_POLISHED_DEEPSLATE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.ACACIA_POLISHED_TUFF_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.ACACIA_SANDSTONE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.ACACIA_RED_SANDSTONE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.ACACIA_POLISHED_BLACKSTONE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.ACACIA_GILDED_BLACKSTONE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.ACACIA_SMOOTH_BASALT_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.ACACIA_QUARTZ_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.ACACIA_CALCITE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.CHERRY_POLISHED_GRANITE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.CHERRY_POLISHED_DIORITE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.CHERRY_POLISHED_ANDESITE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.CHERRY_POLISHED_DEEPSLATE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.CHERRY_POLISHED_TUFF_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.CHERRY_SANDSTONE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.CHERRY_RED_SANDSTONE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.CHERRY_POLISHED_BLACKSTONE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.CHERRY_GILDED_BLACKSTONE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.CHERRY_SMOOTH_BASALT_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.CHERRY_QUARTZ_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.CHERRY_CALCITE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.DARK_OAK_POLISHED_GRANITE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.DARK_OAK_POLISHED_DIORITE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.DARK_OAK_POLISHED_ANDESITE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.DARK_OAK_POLISHED_DEEPSLATE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.DARK_OAK_POLISHED_TUFF_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.DARK_OAK_SANDSTONE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.DARK_OAK_RED_SANDSTONE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.DARK_OAK_POLISHED_BLACKSTONE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.DARK_OAK_GILDED_BLACKSTONE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.DARK_OAK_SMOOTH_BASALT_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.DARK_OAK_QUARTZ_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.DARK_OAK_CALCITE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.PALE_OAK_POLISHED_GRANITE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.PALE_OAK_POLISHED_DIORITE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.PALE_OAK_POLISHED_ANDESITE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.PALE_OAK_POLISHED_DEEPSLATE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.PALE_OAK_POLISHED_TUFF_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.PALE_OAK_SANDSTONE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.PALE_OAK_RED_SANDSTONE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.PALE_OAK_POLISHED_BLACKSTONE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.PALE_OAK_GILDED_BLACKSTONE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.PALE_OAK_SMOOTH_BASALT_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.PALE_OAK_QUARTZ_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.PALE_OAK_CALCITE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.BAMBOO_POLISHED_GRANITE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.BAMBOO_POLISHED_DIORITE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.BAMBOO_POLISHED_ANDESITE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.BAMBOO_POLISHED_DEEPSLATE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.BAMBOO_POLISHED_TUFF_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.BAMBOO_SANDSTONE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.BAMBOO_RED_SANDSTONE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.BAMBOO_POLISHED_BLACKSTONE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.BAMBOO_GILDED_BLACKSTONE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.BAMBOO_SMOOTH_BASALT_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.BAMBOO_QUARTZ_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.BAMBOO_CALCITE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.MANGROVE_POLISHED_GRANITE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.MANGROVE_POLISHED_DIORITE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.MANGROVE_POLISHED_ANDESITE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.MANGROVE_POLISHED_DEEPSLATE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.MANGROVE_POLISHED_TUFF_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.MANGROVE_SANDSTONE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.MANGROVE_RED_SANDSTONE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.MANGROVE_POLISHED_BLACKSTONE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.MANGROVE_GILDED_BLACKSTONE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.MANGROVE_SMOOTH_BASALT_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.MANGROVE_QUARTZ_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.MANGROVE_CALCITE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.CRIMSON_POLISHED_GRANITE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.CRIMSON_POLISHED_DIORITE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.CRIMSON_POLISHED_ANDESITE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.CRIMSON_POLISHED_DEEPSLATE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.CRIMSON_POLISHED_TUFF_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.CRIMSON_SANDSTONE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.CRIMSON_RED_SANDSTONE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.CRIMSON_POLISHED_BLACKSTONE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.CRIMSON_GILDED_BLACKSTONE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.CRIMSON_SMOOTH_BASALT_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.CRIMSON_QUARTZ_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.CRIMSON_CALCITE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.WARPED_POLISHED_GRANITE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.WARPED_POLISHED_DIORITE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.WARPED_POLISHED_ANDESITE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.WARPED_POLISHED_DEEPSLATE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.WARPED_POLISHED_TUFF_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.WARPED_SANDSTONE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.WARPED_RED_SANDSTONE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.WARPED_POLISHED_BLACKSTONE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.WARPED_GILDED_BLACKSTONE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.WARPED_SMOOTH_BASALT_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.WARPED_QUARTZ_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterGlassDoor(SFFBlocks.WARPED_CALCITE_KITCHEN_COUNTER_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.OAK_POLISHED_GRANITE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.OAK_POLISHED_DIORITE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.OAK_POLISHED_ANDESITE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.OAK_POLISHED_DEEPSLATE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.OAK_POLISHED_TUFF_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.OAK_SANDSTONE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.OAK_RED_SANDSTONE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.OAK_POLISHED_BLACKSTONE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.OAK_GILDED_BLACKSTONE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.OAK_SMOOTH_BASALT_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.OAK_QUARTZ_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.OAK_CALCITE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.OAK_LOG), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.SPRUCE_POLISHED_GRANITE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.SPRUCE_POLISHED_DIORITE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.SPRUCE_POLISHED_ANDESITE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.SPRUCE_POLISHED_DEEPSLATE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.SPRUCE_POLISHED_TUFF_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.SPRUCE_SANDSTONE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.SPRUCE_RED_SANDSTONE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.SPRUCE_POLISHED_BLACKSTONE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.SPRUCE_GILDED_BLACKSTONE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.SPRUCE_SMOOTH_BASALT_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.SPRUCE_QUARTZ_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.SPRUCE_CALCITE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.BIRCH_POLISHED_GRANITE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.BIRCH_POLISHED_DIORITE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.BIRCH_POLISHED_ANDESITE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.BIRCH_POLISHED_DEEPSLATE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.BIRCH_POLISHED_TUFF_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.BIRCH_SANDSTONE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.BIRCH_RED_SANDSTONE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.BIRCH_POLISHED_BLACKSTONE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.BIRCH_GILDED_BLACKSTONE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.BIRCH_SMOOTH_BASALT_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.BIRCH_QUARTZ_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.BIRCH_CALCITE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.JUNGLE_POLISHED_GRANITE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.JUNGLE_POLISHED_DIORITE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.JUNGLE_POLISHED_ANDESITE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.JUNGLE_POLISHED_DEEPSLATE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.JUNGLE_POLISHED_TUFF_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.JUNGLE_SANDSTONE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.JUNGLE_RED_SANDSTONE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.JUNGLE_POLISHED_BLACKSTONE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.JUNGLE_GILDED_BLACKSTONE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.JUNGLE_SMOOTH_BASALT_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.JUNGLE_QUARTZ_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.JUNGLE_CALCITE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.ACACIA_POLISHED_GRANITE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.ACACIA_POLISHED_DIORITE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.ACACIA_POLISHED_ANDESITE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.ACACIA_POLISHED_DEEPSLATE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.ACACIA_POLISHED_TUFF_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.ACACIA_SANDSTONE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.ACACIA_RED_SANDSTONE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.ACACIA_POLISHED_BLACKSTONE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.ACACIA_GILDED_BLACKSTONE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.ACACIA_SMOOTH_BASALT_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.ACACIA_QUARTZ_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.ACACIA_CALCITE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.CHERRY_POLISHED_GRANITE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.CHERRY_POLISHED_DIORITE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.CHERRY_POLISHED_ANDESITE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.CHERRY_POLISHED_DEEPSLATE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.CHERRY_POLISHED_TUFF_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.CHERRY_SANDSTONE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.CHERRY_RED_SANDSTONE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.CHERRY_POLISHED_BLACKSTONE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.CHERRY_GILDED_BLACKSTONE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.CHERRY_SMOOTH_BASALT_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.CHERRY_QUARTZ_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.CHERRY_CALCITE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.DARK_OAK_POLISHED_GRANITE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.DARK_OAK_POLISHED_DIORITE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.DARK_OAK_POLISHED_ANDESITE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.DARK_OAK_POLISHED_DEEPSLATE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.DARK_OAK_POLISHED_TUFF_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.DARK_OAK_SANDSTONE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.DARK_OAK_RED_SANDSTONE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.DARK_OAK_POLISHED_BLACKSTONE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.DARK_OAK_GILDED_BLACKSTONE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.DARK_OAK_SMOOTH_BASALT_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.DARK_OAK_QUARTZ_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.DARK_OAK_CALCITE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.PALE_OAK_POLISHED_GRANITE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.PALE_OAK_POLISHED_DIORITE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.PALE_OAK_POLISHED_ANDESITE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.PALE_OAK_POLISHED_DEEPSLATE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.PALE_OAK_POLISHED_TUFF_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.PALE_OAK_SANDSTONE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.PALE_OAK_RED_SANDSTONE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.PALE_OAK_POLISHED_BLACKSTONE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.PALE_OAK_GILDED_BLACKSTONE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.PALE_OAK_SMOOTH_BASALT_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.PALE_OAK_QUARTZ_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.PALE_OAK_CALCITE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.BAMBOO_POLISHED_GRANITE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.BAMBOO_POLISHED_DIORITE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.BAMBOO_POLISHED_ANDESITE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.BAMBOO_POLISHED_DEEPSLATE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.BAMBOO_POLISHED_TUFF_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.BAMBOO_SANDSTONE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.BAMBOO_RED_SANDSTONE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.BAMBOO_POLISHED_BLACKSTONE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.BAMBOO_GILDED_BLACKSTONE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.BAMBOO_SMOOTH_BASALT_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.BAMBOO_QUARTZ_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.BAMBOO_CALCITE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.MANGROVE_POLISHED_GRANITE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.MANGROVE_POLISHED_DIORITE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.MANGROVE_POLISHED_ANDESITE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.MANGROVE_POLISHED_DEEPSLATE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.MANGROVE_POLISHED_TUFF_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.MANGROVE_SANDSTONE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.MANGROVE_RED_SANDSTONE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.MANGROVE_POLISHED_BLACKSTONE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.MANGROVE_GILDED_BLACKSTONE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.MANGROVE_SMOOTH_BASALT_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.MANGROVE_QUARTZ_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.MANGROVE_CALCITE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.CRIMSON_POLISHED_GRANITE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.CRIMSON_POLISHED_DIORITE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.CRIMSON_POLISHED_ANDESITE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.CRIMSON_POLISHED_DEEPSLATE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.CRIMSON_POLISHED_TUFF_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.CRIMSON_SANDSTONE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.CRIMSON_RED_SANDSTONE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.CRIMSON_POLISHED_BLACKSTONE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.CRIMSON_GILDED_BLACKSTONE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.CRIMSON_SMOOTH_BASALT_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.CRIMSON_QUARTZ_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.CRIMSON_CALCITE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.WARPED_POLISHED_GRANITE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.WARPED_POLISHED_DIORITE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.WARPED_POLISHED_ANDESITE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.WARPED_POLISHED_DEEPSLATE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.WARPED_POLISHED_TUFF_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.WARPED_SANDSTONE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.WARPED_RED_SANDSTONE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.WARPED_POLISHED_BLACKSTONE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.WARPED_GILDED_BLACKSTONE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.WARPED_SMOOTH_BASALT_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.WARPED_QUARTZ_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmallDrawer(SFFBlocks.WARPED_CALCITE_KITCHEN_COUNTER_SMALL_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.OAK_POLISHED_GRANITE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.OAK_POLISHED_DIORITE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.OAK_POLISHED_ANDESITE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.OAK_POLISHED_DEEPSLATE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.OAK_POLISHED_TUFF_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.OAK_SANDSTONE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.OAK_RED_SANDSTONE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.OAK_POLISHED_BLACKSTONE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.OAK_GILDED_BLACKSTONE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.OAK_SMOOTH_BASALT_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.OAK_QUARTZ_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.OAK_CALCITE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.OAK_LOG), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.SPRUCE_POLISHED_GRANITE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.SPRUCE_POLISHED_DIORITE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.SPRUCE_POLISHED_ANDESITE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.SPRUCE_POLISHED_DEEPSLATE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.SPRUCE_POLISHED_TUFF_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.SPRUCE_SANDSTONE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.SPRUCE_RED_SANDSTONE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.SPRUCE_POLISHED_BLACKSTONE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.SPRUCE_GILDED_BLACKSTONE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.SPRUCE_SMOOTH_BASALT_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.SPRUCE_QUARTZ_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.SPRUCE_CALCITE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.BIRCH_POLISHED_GRANITE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.BIRCH_POLISHED_DIORITE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.BIRCH_POLISHED_ANDESITE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.BIRCH_POLISHED_DEEPSLATE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.BIRCH_POLISHED_TUFF_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.BIRCH_SANDSTONE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.BIRCH_RED_SANDSTONE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.BIRCH_POLISHED_BLACKSTONE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.BIRCH_GILDED_BLACKSTONE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.BIRCH_SMOOTH_BASALT_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.BIRCH_QUARTZ_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.BIRCH_CALCITE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.JUNGLE_POLISHED_GRANITE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.JUNGLE_POLISHED_DIORITE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.JUNGLE_POLISHED_ANDESITE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.JUNGLE_POLISHED_DEEPSLATE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.JUNGLE_POLISHED_TUFF_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.JUNGLE_SANDSTONE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.JUNGLE_RED_SANDSTONE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.JUNGLE_POLISHED_BLACKSTONE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.JUNGLE_GILDED_BLACKSTONE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.JUNGLE_SMOOTH_BASALT_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.JUNGLE_QUARTZ_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.JUNGLE_CALCITE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.ACACIA_POLISHED_GRANITE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.ACACIA_POLISHED_DIORITE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.ACACIA_POLISHED_ANDESITE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.ACACIA_POLISHED_DEEPSLATE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.ACACIA_POLISHED_TUFF_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.ACACIA_SANDSTONE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.ACACIA_RED_SANDSTONE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.ACACIA_POLISHED_BLACKSTONE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.ACACIA_GILDED_BLACKSTONE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.ACACIA_SMOOTH_BASALT_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.ACACIA_QUARTZ_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.ACACIA_CALCITE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.CHERRY_POLISHED_GRANITE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.CHERRY_POLISHED_DIORITE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.CHERRY_POLISHED_ANDESITE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.CHERRY_POLISHED_DEEPSLATE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.CHERRY_POLISHED_TUFF_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.CHERRY_SANDSTONE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.CHERRY_RED_SANDSTONE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.CHERRY_POLISHED_BLACKSTONE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.CHERRY_GILDED_BLACKSTONE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.CHERRY_SMOOTH_BASALT_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.CHERRY_QUARTZ_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.CHERRY_CALCITE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.DARK_OAK_POLISHED_GRANITE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.DARK_OAK_POLISHED_DIORITE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.DARK_OAK_POLISHED_ANDESITE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.DARK_OAK_POLISHED_DEEPSLATE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.DARK_OAK_POLISHED_TUFF_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.DARK_OAK_SANDSTONE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.DARK_OAK_RED_SANDSTONE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.DARK_OAK_POLISHED_BLACKSTONE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.DARK_OAK_GILDED_BLACKSTONE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.DARK_OAK_SMOOTH_BASALT_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.DARK_OAK_QUARTZ_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.DARK_OAK_CALCITE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.PALE_OAK_POLISHED_GRANITE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.PALE_OAK_POLISHED_DIORITE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.PALE_OAK_POLISHED_ANDESITE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.PALE_OAK_POLISHED_DEEPSLATE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.PALE_OAK_POLISHED_TUFF_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.PALE_OAK_SANDSTONE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.PALE_OAK_RED_SANDSTONE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.PALE_OAK_POLISHED_BLACKSTONE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.PALE_OAK_GILDED_BLACKSTONE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.PALE_OAK_SMOOTH_BASALT_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.PALE_OAK_QUARTZ_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.PALE_OAK_CALCITE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.BAMBOO_POLISHED_GRANITE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.BAMBOO_POLISHED_DIORITE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.BAMBOO_POLISHED_ANDESITE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.BAMBOO_POLISHED_DEEPSLATE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.BAMBOO_POLISHED_TUFF_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.BAMBOO_SANDSTONE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.BAMBOO_RED_SANDSTONE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.BAMBOO_POLISHED_BLACKSTONE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.BAMBOO_GILDED_BLACKSTONE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.BAMBOO_SMOOTH_BASALT_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.BAMBOO_QUARTZ_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.BAMBOO_CALCITE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.MANGROVE_POLISHED_GRANITE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.MANGROVE_POLISHED_DIORITE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.MANGROVE_POLISHED_ANDESITE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.MANGROVE_POLISHED_DEEPSLATE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.MANGROVE_POLISHED_TUFF_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.MANGROVE_SANDSTONE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.MANGROVE_RED_SANDSTONE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.MANGROVE_POLISHED_BLACKSTONE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.MANGROVE_GILDED_BLACKSTONE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.MANGROVE_SMOOTH_BASALT_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.MANGROVE_QUARTZ_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.MANGROVE_CALCITE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.CRIMSON_POLISHED_GRANITE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.CRIMSON_POLISHED_DIORITE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.CRIMSON_POLISHED_ANDESITE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.CRIMSON_POLISHED_DEEPSLATE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.CRIMSON_POLISHED_TUFF_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.CRIMSON_SANDSTONE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.CRIMSON_RED_SANDSTONE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.CRIMSON_POLISHED_BLACKSTONE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.CRIMSON_GILDED_BLACKSTONE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.CRIMSON_SMOOTH_BASALT_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.CRIMSON_QUARTZ_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.CRIMSON_CALCITE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.WARPED_POLISHED_GRANITE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.WARPED_POLISHED_DIORITE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.WARPED_POLISHED_ANDESITE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.WARPED_POLISHED_DEEPSLATE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.WARPED_POLISHED_TUFF_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.WARPED_SANDSTONE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.WARPED_RED_SANDSTONE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.WARPED_POLISHED_BLACKSTONE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.WARPED_GILDED_BLACKSTONE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.WARPED_SMOOTH_BASALT_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.WARPED_QUARTZ_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterBigDrawer(SFFBlocks.WARPED_CALCITE_KITCHEN_COUNTER_BIG_DRAWER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.OAK_POLISHED_GRANITE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.OAK_POLISHED_DIORITE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.OAK_POLISHED_ANDESITE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.OAK_POLISHED_DEEPSLATE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.OAK_POLISHED_TUFF_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.OAK_SANDSTONE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.OAK_RED_SANDSTONE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.OAK_POLISHED_BLACKSTONE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.OAK_GILDED_BLACKSTONE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.OAK_SMOOTH_BASALT_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.OAK_QUARTZ_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.OAK_CALCITE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.SPRUCE_POLISHED_GRANITE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.SPRUCE_POLISHED_DIORITE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.SPRUCE_POLISHED_ANDESITE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.SPRUCE_POLISHED_DEEPSLATE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.SPRUCE_POLISHED_TUFF_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.SPRUCE_SANDSTONE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.SPRUCE_RED_SANDSTONE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.SPRUCE_POLISHED_BLACKSTONE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.SPRUCE_GILDED_BLACKSTONE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.SPRUCE_SMOOTH_BASALT_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.SPRUCE_QUARTZ_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.SPRUCE_CALCITE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.BIRCH_POLISHED_GRANITE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.BIRCH_POLISHED_DIORITE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.BIRCH_POLISHED_ANDESITE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.BIRCH_POLISHED_DEEPSLATE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.BIRCH_POLISHED_TUFF_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.BIRCH_SANDSTONE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.BIRCH_RED_SANDSTONE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.BIRCH_POLISHED_BLACKSTONE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.BIRCH_GILDED_BLACKSTONE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.BIRCH_SMOOTH_BASALT_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.BIRCH_QUARTZ_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.BIRCH_CALCITE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.JUNGLE_POLISHED_GRANITE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.JUNGLE_POLISHED_DIORITE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.JUNGLE_POLISHED_ANDESITE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.JUNGLE_POLISHED_DEEPSLATE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.JUNGLE_POLISHED_TUFF_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.JUNGLE_SANDSTONE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.JUNGLE_RED_SANDSTONE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.JUNGLE_POLISHED_BLACKSTONE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.JUNGLE_GILDED_BLACKSTONE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.JUNGLE_SMOOTH_BASALT_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.JUNGLE_QUARTZ_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.JUNGLE_CALCITE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.ACACIA_POLISHED_GRANITE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.ACACIA_POLISHED_DIORITE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.ACACIA_POLISHED_ANDESITE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.ACACIA_POLISHED_DEEPSLATE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.ACACIA_POLISHED_TUFF_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.ACACIA_SANDSTONE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.ACACIA_RED_SANDSTONE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.ACACIA_POLISHED_BLACKSTONE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.ACACIA_GILDED_BLACKSTONE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.ACACIA_SMOOTH_BASALT_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.ACACIA_QUARTZ_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.ACACIA_CALCITE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.CHERRY_POLISHED_GRANITE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.CHERRY_POLISHED_DIORITE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.CHERRY_POLISHED_ANDESITE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.CHERRY_POLISHED_DEEPSLATE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.CHERRY_POLISHED_TUFF_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.CHERRY_SANDSTONE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.CHERRY_RED_SANDSTONE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.CHERRY_POLISHED_BLACKSTONE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.CHERRY_GILDED_BLACKSTONE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.CHERRY_SMOOTH_BASALT_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.CHERRY_QUARTZ_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.CHERRY_CALCITE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.DARK_OAK_POLISHED_GRANITE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.DARK_OAK_POLISHED_DIORITE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.DARK_OAK_POLISHED_ANDESITE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.DARK_OAK_POLISHED_DEEPSLATE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.DARK_OAK_POLISHED_TUFF_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.DARK_OAK_SANDSTONE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.DARK_OAK_RED_SANDSTONE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.DARK_OAK_POLISHED_BLACKSTONE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.DARK_OAK_GILDED_BLACKSTONE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.DARK_OAK_SMOOTH_BASALT_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.DARK_OAK_QUARTZ_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.DARK_OAK_CALCITE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.PALE_OAK_POLISHED_GRANITE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.PALE_OAK_POLISHED_DIORITE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.PALE_OAK_POLISHED_ANDESITE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.PALE_OAK_POLISHED_DEEPSLATE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.PALE_OAK_POLISHED_TUFF_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.PALE_OAK_SANDSTONE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.PALE_OAK_RED_SANDSTONE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.PALE_OAK_POLISHED_BLACKSTONE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.PALE_OAK_GILDED_BLACKSTONE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.PALE_OAK_SMOOTH_BASALT_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.PALE_OAK_QUARTZ_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.PALE_OAK_CALCITE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.BAMBOO_POLISHED_GRANITE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.BAMBOO_POLISHED_DIORITE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.BAMBOO_POLISHED_ANDESITE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.BAMBOO_POLISHED_DEEPSLATE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.BAMBOO_POLISHED_TUFF_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.BAMBOO_SANDSTONE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.BAMBOO_RED_SANDSTONE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.BAMBOO_POLISHED_BLACKSTONE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.BAMBOO_GILDED_BLACKSTONE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.BAMBOO_SMOOTH_BASALT_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.BAMBOO_QUARTZ_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.BAMBOO_CALCITE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.MANGROVE_POLISHED_GRANITE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.MANGROVE_POLISHED_DIORITE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.MANGROVE_POLISHED_ANDESITE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.MANGROVE_POLISHED_DEEPSLATE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.MANGROVE_POLISHED_TUFF_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.MANGROVE_SANDSTONE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.MANGROVE_RED_SANDSTONE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.MANGROVE_POLISHED_BLACKSTONE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.MANGROVE_GILDED_BLACKSTONE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.MANGROVE_SMOOTH_BASALT_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.MANGROVE_QUARTZ_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.MANGROVE_CALCITE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.CRIMSON_POLISHED_GRANITE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.CRIMSON_POLISHED_DIORITE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.CRIMSON_POLISHED_ANDESITE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.CRIMSON_POLISHED_DEEPSLATE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.CRIMSON_POLISHED_TUFF_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.CRIMSON_SANDSTONE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.CRIMSON_RED_SANDSTONE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.CRIMSON_POLISHED_BLACKSTONE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.CRIMSON_GILDED_BLACKSTONE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.CRIMSON_SMOOTH_BASALT_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.CRIMSON_QUARTZ_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.CRIMSON_CALCITE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.WARPED_POLISHED_GRANITE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.WARPED_POLISHED_DIORITE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.WARPED_POLISHED_ANDESITE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.WARPED_POLISHED_DEEPSLATE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.WARPED_POLISHED_TUFF_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.WARPED_SANDSTONE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.WARPED_RED_SANDSTONE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.WARPED_POLISHED_BLACKSTONE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.WARPED_GILDED_BLACKSTONE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.WARPED_SMOOTH_BASALT_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.WARPED_QUARTZ_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSink(SFFBlocks.WARPED_CALCITE_KITCHEN_COUNTER_SINK.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.OAK_POLISHED_GRANITE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.OAK_POLISHED_DIORITE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.OAK_POLISHED_ANDESITE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.OAK_POLISHED_DEEPSLATE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.OAK_POLISHED_TUFF_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.OAK_SANDSTONE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.OAK_RED_SANDSTONE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.OAK_POLISHED_BLACKSTONE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.OAK_GILDED_BLACKSTONE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.OAK_SMOOTH_BASALT_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.OAK_QUARTZ_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.OAK_CALCITE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.SPRUCE_POLISHED_GRANITE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.SPRUCE_POLISHED_DIORITE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.SPRUCE_POLISHED_ANDESITE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.SPRUCE_POLISHED_DEEPSLATE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.SPRUCE_POLISHED_TUFF_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.SPRUCE_SANDSTONE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.SPRUCE_RED_SANDSTONE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.SPRUCE_POLISHED_BLACKSTONE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.SPRUCE_GILDED_BLACKSTONE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.SPRUCE_SMOOTH_BASALT_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.SPRUCE_QUARTZ_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.SPRUCE_CALCITE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.BIRCH_POLISHED_GRANITE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.BIRCH_POLISHED_DIORITE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.BIRCH_POLISHED_ANDESITE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.BIRCH_POLISHED_DEEPSLATE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.BIRCH_POLISHED_TUFF_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.BIRCH_SANDSTONE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.BIRCH_RED_SANDSTONE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.BIRCH_POLISHED_BLACKSTONE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.BIRCH_GILDED_BLACKSTONE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.BIRCH_SMOOTH_BASALT_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.BIRCH_QUARTZ_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.BIRCH_CALCITE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.JUNGLE_POLISHED_GRANITE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.JUNGLE_POLISHED_DIORITE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.JUNGLE_POLISHED_ANDESITE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.JUNGLE_POLISHED_DEEPSLATE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.JUNGLE_POLISHED_TUFF_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.JUNGLE_SANDSTONE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.JUNGLE_RED_SANDSTONE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.JUNGLE_POLISHED_BLACKSTONE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.JUNGLE_GILDED_BLACKSTONE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.JUNGLE_SMOOTH_BASALT_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.JUNGLE_QUARTZ_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.JUNGLE_CALCITE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.ACACIA_POLISHED_GRANITE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.ACACIA_POLISHED_DIORITE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.ACACIA_POLISHED_ANDESITE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.ACACIA_POLISHED_DEEPSLATE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.ACACIA_POLISHED_TUFF_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.ACACIA_SANDSTONE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.ACACIA_RED_SANDSTONE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.ACACIA_POLISHED_BLACKSTONE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.ACACIA_GILDED_BLACKSTONE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.ACACIA_SMOOTH_BASALT_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.ACACIA_QUARTZ_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.ACACIA_CALCITE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.CHERRY_POLISHED_GRANITE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.CHERRY_POLISHED_DIORITE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.CHERRY_POLISHED_ANDESITE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.CHERRY_POLISHED_DEEPSLATE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.CHERRY_POLISHED_TUFF_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.CHERRY_SANDSTONE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.CHERRY_RED_SANDSTONE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.CHERRY_POLISHED_BLACKSTONE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.CHERRY_GILDED_BLACKSTONE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.CHERRY_SMOOTH_BASALT_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.CHERRY_QUARTZ_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.CHERRY_CALCITE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.DARK_OAK_POLISHED_GRANITE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.DARK_OAK_POLISHED_DIORITE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.DARK_OAK_POLISHED_ANDESITE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.DARK_OAK_POLISHED_DEEPSLATE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.DARK_OAK_POLISHED_TUFF_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.DARK_OAK_SANDSTONE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.DARK_OAK_RED_SANDSTONE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.DARK_OAK_POLISHED_BLACKSTONE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.DARK_OAK_GILDED_BLACKSTONE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.DARK_OAK_SMOOTH_BASALT_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.DARK_OAK_QUARTZ_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.DARK_OAK_CALCITE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.PALE_OAK_POLISHED_GRANITE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.PALE_OAK_POLISHED_DIORITE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.PALE_OAK_POLISHED_ANDESITE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.PALE_OAK_POLISHED_DEEPSLATE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.PALE_OAK_POLISHED_TUFF_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.PALE_OAK_SANDSTONE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.PALE_OAK_RED_SANDSTONE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.PALE_OAK_POLISHED_BLACKSTONE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.PALE_OAK_GILDED_BLACKSTONE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.PALE_OAK_SMOOTH_BASALT_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.PALE_OAK_QUARTZ_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.PALE_OAK_CALCITE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.BAMBOO_POLISHED_GRANITE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.BAMBOO_POLISHED_DIORITE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.BAMBOO_POLISHED_ANDESITE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.BAMBOO_POLISHED_DEEPSLATE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.BAMBOO_POLISHED_TUFF_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.BAMBOO_SANDSTONE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.BAMBOO_RED_SANDSTONE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.BAMBOO_POLISHED_BLACKSTONE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.BAMBOO_GILDED_BLACKSTONE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.BAMBOO_SMOOTH_BASALT_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.BAMBOO_QUARTZ_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.BAMBOO_CALCITE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.MANGROVE_POLISHED_GRANITE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.MANGROVE_POLISHED_DIORITE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.MANGROVE_POLISHED_ANDESITE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.MANGROVE_POLISHED_DEEPSLATE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.MANGROVE_POLISHED_TUFF_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.MANGROVE_SANDSTONE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.MANGROVE_RED_SANDSTONE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.MANGROVE_POLISHED_BLACKSTONE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.MANGROVE_GILDED_BLACKSTONE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.MANGROVE_SMOOTH_BASALT_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.MANGROVE_QUARTZ_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.MANGROVE_CALCITE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.CRIMSON_POLISHED_GRANITE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.CRIMSON_POLISHED_DIORITE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.CRIMSON_POLISHED_ANDESITE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.CRIMSON_POLISHED_DEEPSLATE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.CRIMSON_POLISHED_TUFF_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.CRIMSON_SANDSTONE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.CRIMSON_RED_SANDSTONE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.CRIMSON_POLISHED_BLACKSTONE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.CRIMSON_GILDED_BLACKSTONE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.CRIMSON_SMOOTH_BASALT_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.CRIMSON_QUARTZ_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.CRIMSON_CALCITE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.WARPED_POLISHED_GRANITE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.WARPED_POLISHED_DIORITE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.WARPED_POLISHED_ANDESITE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.WARPED_POLISHED_DEEPSLATE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.WARPED_POLISHED_TUFF_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.WARPED_SANDSTONE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.WARPED_RED_SANDSTONE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.WARPED_POLISHED_BLACKSTONE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.WARPED_GILDED_BLACKSTONE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.WARPED_SMOOTH_BASALT_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.WARPED_QUARTZ_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCounterSmoker(SFFBlocks.WARPED_CALCITE_KITCHEN_COUNTER_SMOKER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front"), TextureMapping.getBlockTexture(Blocks.SMOKER).withSuffix("_front_on"), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinet(SFFBlocks.OAK_KITCHEN_CABINET.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetInnerCorner(SFFBlocks.OAK_KITCHEN_CABINET_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetOuterCorner(SFFBlocks.OAK_KITCHEN_CABINET_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCabinet(SFFBlocks.OAK_KITCHEN_CABINET_OPEN.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetShelf(SFFBlocks.OAK_KITCHEN_CABINET_SHELF.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.CHAIN), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinet(SFFBlocks.SPRUCE_KITCHEN_CABINET.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetInnerCorner(SFFBlocks.SPRUCE_KITCHEN_CABINET_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetOuterCorner(SFFBlocks.SPRUCE_KITCHEN_CABINET_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCabinet(SFFBlocks.SPRUCE_KITCHEN_CABINET_OPEN.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetShelf(SFFBlocks.SPRUCE_KITCHEN_CABINET_SHELF.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.CHAIN), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinet(SFFBlocks.BIRCH_KITCHEN_CABINET.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetInnerCorner(SFFBlocks.BIRCH_KITCHEN_CABINET_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetOuterCorner(SFFBlocks.BIRCH_KITCHEN_CABINET_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCabinet(SFFBlocks.BIRCH_KITCHEN_CABINET_OPEN.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetShelf(SFFBlocks.BIRCH_KITCHEN_CABINET_SHELF.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.CHAIN), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinet(SFFBlocks.JUNGLE_KITCHEN_CABINET.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetInnerCorner(SFFBlocks.JUNGLE_KITCHEN_CABINET_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetOuterCorner(SFFBlocks.JUNGLE_KITCHEN_CABINET_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCabinet(SFFBlocks.JUNGLE_KITCHEN_CABINET_OPEN.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetShelf(SFFBlocks.JUNGLE_KITCHEN_CABINET_SHELF.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.CHAIN), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinet(SFFBlocks.ACACIA_KITCHEN_CABINET.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetInnerCorner(SFFBlocks.ACACIA_KITCHEN_CABINET_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetOuterCorner(SFFBlocks.ACACIA_KITCHEN_CABINET_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCabinet(SFFBlocks.ACACIA_KITCHEN_CABINET_OPEN.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetShelf(SFFBlocks.ACACIA_KITCHEN_CABINET_SHELF.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.CHAIN), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinet(SFFBlocks.CHERRY_KITCHEN_CABINET.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetInnerCorner(SFFBlocks.CHERRY_KITCHEN_CABINET_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetOuterCorner(SFFBlocks.CHERRY_KITCHEN_CABINET_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCabinet(SFFBlocks.CHERRY_KITCHEN_CABINET_OPEN.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetShelf(SFFBlocks.CHERRY_KITCHEN_CABINET_SHELF.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHAIN), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinet(SFFBlocks.DARK_OAK_KITCHEN_CABINET.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetInnerCorner(SFFBlocks.DARK_OAK_KITCHEN_CABINET_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetOuterCorner(SFFBlocks.DARK_OAK_KITCHEN_CABINET_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCabinet(SFFBlocks.DARK_OAK_KITCHEN_CABINET_OPEN.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetShelf(SFFBlocks.DARK_OAK_KITCHEN_CABINET_SHELF.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.CHAIN), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinet(SFFBlocks.PALE_OAK_KITCHEN_CABINET.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetInnerCorner(SFFBlocks.PALE_OAK_KITCHEN_CABINET_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetOuterCorner(SFFBlocks.PALE_OAK_KITCHEN_CABINET_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCabinet(SFFBlocks.PALE_OAK_KITCHEN_CABINET_OPEN.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetShelf(SFFBlocks.PALE_OAK_KITCHEN_CABINET_SHELF.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.CHAIN), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinet(SFFBlocks.BAMBOO_KITCHEN_CABINET.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetInnerCorner(SFFBlocks.BAMBOO_KITCHEN_CABINET_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetOuterCorner(SFFBlocks.BAMBOO_KITCHEN_CABINET_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCabinet(SFFBlocks.BAMBOO_KITCHEN_CABINET_OPEN.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetShelf(SFFBlocks.BAMBOO_KITCHEN_CABINET_SHELF.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.CHAIN), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinet(SFFBlocks.MANGROVE_KITCHEN_CABINET.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetInnerCorner(SFFBlocks.MANGROVE_KITCHEN_CABINET_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetOuterCorner(SFFBlocks.MANGROVE_KITCHEN_CABINET_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCabinet(SFFBlocks.MANGROVE_KITCHEN_CABINET_OPEN.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetShelf(SFFBlocks.MANGROVE_KITCHEN_CABINET_SHELF.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.CHAIN), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinet(SFFBlocks.CRIMSON_KITCHEN_CABINET.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetInnerCorner(SFFBlocks.CRIMSON_KITCHEN_CABINET_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetOuterCorner(SFFBlocks.CRIMSON_KITCHEN_CABINET_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCabinet(SFFBlocks.CRIMSON_KITCHEN_CABINET_OPEN.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetShelf(SFFBlocks.CRIMSON_KITCHEN_CABINET_SHELF.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CHAIN), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinet(SFFBlocks.WARPED_KITCHEN_CABINET.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetInnerCorner(SFFBlocks.WARPED_KITCHEN_CABINET_INNER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetOuterCorner(SFFBlocks.WARPED_KITCHEN_CABINET_OUTER_CORNER.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createOpenKitchenCabinet(SFFBlocks.WARPED_KITCHEN_CABINET_OPEN.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetShelf(SFFBlocks.WARPED_KITCHEN_CABINET_SHELF.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.CHAIN), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.OAK_POLISHED_GRANITE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.OAK_POLISHED_DIORITE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.OAK_POLISHED_ANDESITE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.OAK_POLISHED_DEEPSLATE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.OAK_POLISHED_TUFF_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.OAK_SANDSTONE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_LOG), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.OAK_RED_SANDSTONE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_LOG), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.OAK_POLISHED_BLACKSTONE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.OAK_GILDED_BLACKSTONE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_LOG), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.OAK_SMOOTH_BASALT_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_LOG), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.OAK_QUARTZ_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_LOG), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.OAK_CALCITE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_LOG), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.SPRUCE_POLISHED_GRANITE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.SPRUCE_POLISHED_DIORITE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.SPRUCE_POLISHED_ANDESITE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.SPRUCE_POLISHED_DEEPSLATE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.SPRUCE_POLISHED_TUFF_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.SPRUCE_SANDSTONE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.SPRUCE_RED_SANDSTONE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.SPRUCE_POLISHED_BLACKSTONE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.SPRUCE_GILDED_BLACKSTONE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.SPRUCE_SMOOTH_BASALT_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.SPRUCE_QUARTZ_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.SPRUCE_CALCITE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.BIRCH_POLISHED_GRANITE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.BIRCH_POLISHED_DIORITE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.BIRCH_POLISHED_ANDESITE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.BIRCH_POLISHED_DEEPSLATE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.BIRCH_POLISHED_TUFF_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.BIRCH_SANDSTONE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.BIRCH_RED_SANDSTONE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.BIRCH_POLISHED_BLACKSTONE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.BIRCH_GILDED_BLACKSTONE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.BIRCH_SMOOTH_BASALT_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.BIRCH_QUARTZ_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.BIRCH_CALCITE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.JUNGLE_POLISHED_GRANITE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.JUNGLE_POLISHED_DIORITE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.JUNGLE_POLISHED_ANDESITE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.JUNGLE_POLISHED_DEEPSLATE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.JUNGLE_POLISHED_TUFF_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.JUNGLE_SANDSTONE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.JUNGLE_RED_SANDSTONE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.JUNGLE_POLISHED_BLACKSTONE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.JUNGLE_GILDED_BLACKSTONE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.JUNGLE_SMOOTH_BASALT_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.JUNGLE_QUARTZ_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.JUNGLE_CALCITE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.ACACIA_POLISHED_GRANITE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.ACACIA_POLISHED_DIORITE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.ACACIA_POLISHED_ANDESITE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.ACACIA_POLISHED_DEEPSLATE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.ACACIA_POLISHED_TUFF_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.ACACIA_SANDSTONE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.ACACIA_RED_SANDSTONE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.ACACIA_POLISHED_BLACKSTONE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.ACACIA_GILDED_BLACKSTONE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.ACACIA_SMOOTH_BASALT_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.ACACIA_QUARTZ_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.ACACIA_CALCITE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.CHERRY_POLISHED_GRANITE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.CHERRY_POLISHED_DIORITE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.CHERRY_POLISHED_ANDESITE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.CHERRY_POLISHED_DEEPSLATE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.CHERRY_POLISHED_TUFF_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.CHERRY_SANDSTONE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.CHERRY_RED_SANDSTONE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.CHERRY_POLISHED_BLACKSTONE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.CHERRY_GILDED_BLACKSTONE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.CHERRY_SMOOTH_BASALT_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.CHERRY_QUARTZ_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.CHERRY_CALCITE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.DARK_OAK_POLISHED_GRANITE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.DARK_OAK_POLISHED_DIORITE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.DARK_OAK_POLISHED_ANDESITE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.DARK_OAK_POLISHED_DEEPSLATE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.DARK_OAK_POLISHED_TUFF_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.DARK_OAK_SANDSTONE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.DARK_OAK_RED_SANDSTONE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.DARK_OAK_POLISHED_BLACKSTONE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.DARK_OAK_GILDED_BLACKSTONE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.DARK_OAK_SMOOTH_BASALT_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.DARK_OAK_QUARTZ_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.DARK_OAK_CALCITE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.PALE_OAK_POLISHED_GRANITE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.PALE_OAK_POLISHED_DIORITE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.PALE_OAK_POLISHED_ANDESITE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.PALE_OAK_POLISHED_DEEPSLATE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.PALE_OAK_POLISHED_TUFF_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.PALE_OAK_SANDSTONE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.PALE_OAK_RED_SANDSTONE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.PALE_OAK_POLISHED_BLACKSTONE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.PALE_OAK_GILDED_BLACKSTONE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.PALE_OAK_SMOOTH_BASALT_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.PALE_OAK_QUARTZ_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.PALE_OAK_CALCITE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.BAMBOO_POLISHED_GRANITE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.BAMBOO_POLISHED_DIORITE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.BAMBOO_POLISHED_ANDESITE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.BAMBOO_POLISHED_DEEPSLATE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.BAMBOO_POLISHED_TUFF_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.BAMBOO_SANDSTONE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.BAMBOO_RED_SANDSTONE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.BAMBOO_POLISHED_BLACKSTONE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.BAMBOO_GILDED_BLACKSTONE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.BAMBOO_SMOOTH_BASALT_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.BAMBOO_QUARTZ_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.BAMBOO_CALCITE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.MANGROVE_POLISHED_GRANITE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.MANGROVE_POLISHED_DIORITE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.MANGROVE_POLISHED_ANDESITE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.MANGROVE_POLISHED_DEEPSLATE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.MANGROVE_POLISHED_TUFF_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.MANGROVE_SANDSTONE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.MANGROVE_RED_SANDSTONE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.MANGROVE_POLISHED_BLACKSTONE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.MANGROVE_GILDED_BLACKSTONE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.MANGROVE_SMOOTH_BASALT_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.MANGROVE_QUARTZ_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.MANGROVE_CALCITE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.CRIMSON_POLISHED_GRANITE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.CRIMSON_POLISHED_DIORITE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.CRIMSON_POLISHED_ANDESITE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.CRIMSON_POLISHED_DEEPSLATE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.CRIMSON_POLISHED_TUFF_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.CRIMSON_SANDSTONE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.CRIMSON_RED_SANDSTONE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.CRIMSON_POLISHED_BLACKSTONE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.CRIMSON_GILDED_BLACKSTONE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.CRIMSON_SMOOTH_BASALT_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.CRIMSON_QUARTZ_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.CRIMSON_CALCITE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.WARPED_POLISHED_GRANITE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.WARPED_POLISHED_DIORITE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.WARPED_POLISHED_ANDESITE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.WARPED_POLISHED_DEEPSLATE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.WARPED_POLISHED_TUFF_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.WARPED_SANDSTONE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.WARPED_RED_SANDSTONE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.WARPED_POLISHED_BLACKSTONE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.WARPED_GILDED_BLACKSTONE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.WARPED_SMOOTH_BASALT_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.WARPED_QUARTZ_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetDoor(SFFBlocks.WARPED_CALCITE_KITCHEN_CABINET_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.OAK_POLISHED_GRANITE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.OAK_POLISHED_DIORITE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.OAK_POLISHED_ANDESITE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.OAK_POLISHED_DEEPSLATE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.OAK_POLISHED_TUFF_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.OAK_SANDSTONE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_LOG), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.OAK_RED_SANDSTONE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_LOG), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.OAK_POLISHED_BLACKSTONE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.OAK_GILDED_BLACKSTONE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_LOG), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.OAK_SMOOTH_BASALT_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_LOG), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.OAK_QUARTZ_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_LOG), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.OAK_CALCITE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_LOG), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.SPRUCE_POLISHED_GRANITE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.SPRUCE_POLISHED_DIORITE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.SPRUCE_POLISHED_ANDESITE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.SPRUCE_POLISHED_DEEPSLATE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.SPRUCE_POLISHED_TUFF_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.SPRUCE_SANDSTONE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.SPRUCE_RED_SANDSTONE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.SPRUCE_POLISHED_BLACKSTONE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.SPRUCE_GILDED_BLACKSTONE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.SPRUCE_SMOOTH_BASALT_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.SPRUCE_QUARTZ_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.SPRUCE_CALCITE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.BIRCH_POLISHED_GRANITE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.BIRCH_POLISHED_DIORITE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.BIRCH_POLISHED_ANDESITE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.BIRCH_POLISHED_DEEPSLATE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.BIRCH_POLISHED_TUFF_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.BIRCH_SANDSTONE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.BIRCH_RED_SANDSTONE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.BIRCH_POLISHED_BLACKSTONE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.BIRCH_GILDED_BLACKSTONE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.BIRCH_SMOOTH_BASALT_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.BIRCH_QUARTZ_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.BIRCH_CALCITE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.JUNGLE_POLISHED_GRANITE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.JUNGLE_POLISHED_DIORITE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.JUNGLE_POLISHED_ANDESITE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.JUNGLE_POLISHED_DEEPSLATE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.JUNGLE_POLISHED_TUFF_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.JUNGLE_SANDSTONE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.JUNGLE_RED_SANDSTONE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.JUNGLE_POLISHED_BLACKSTONE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.JUNGLE_GILDED_BLACKSTONE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.JUNGLE_SMOOTH_BASALT_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.JUNGLE_QUARTZ_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.JUNGLE_CALCITE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.ACACIA_POLISHED_GRANITE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.ACACIA_POLISHED_DIORITE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.ACACIA_POLISHED_ANDESITE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.ACACIA_POLISHED_DEEPSLATE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.ACACIA_POLISHED_TUFF_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.ACACIA_SANDSTONE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.ACACIA_RED_SANDSTONE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.ACACIA_POLISHED_BLACKSTONE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.ACACIA_GILDED_BLACKSTONE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.ACACIA_SMOOTH_BASALT_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.ACACIA_QUARTZ_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.ACACIA_CALCITE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.CHERRY_POLISHED_GRANITE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.CHERRY_POLISHED_DIORITE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.CHERRY_POLISHED_ANDESITE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.CHERRY_POLISHED_DEEPSLATE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.CHERRY_POLISHED_TUFF_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.CHERRY_SANDSTONE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.CHERRY_RED_SANDSTONE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.CHERRY_POLISHED_BLACKSTONE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.CHERRY_GILDED_BLACKSTONE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.CHERRY_SMOOTH_BASALT_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.CHERRY_QUARTZ_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.CHERRY_CALCITE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.DARK_OAK_POLISHED_GRANITE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.DARK_OAK_POLISHED_DIORITE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.DARK_OAK_POLISHED_ANDESITE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.DARK_OAK_POLISHED_DEEPSLATE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.DARK_OAK_POLISHED_TUFF_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.DARK_OAK_SANDSTONE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.DARK_OAK_RED_SANDSTONE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.DARK_OAK_POLISHED_BLACKSTONE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.DARK_OAK_GILDED_BLACKSTONE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.DARK_OAK_SMOOTH_BASALT_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.DARK_OAK_QUARTZ_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.DARK_OAK_CALCITE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.PALE_OAK_POLISHED_GRANITE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.PALE_OAK_POLISHED_DIORITE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.PALE_OAK_POLISHED_ANDESITE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.PALE_OAK_POLISHED_DEEPSLATE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.PALE_OAK_POLISHED_TUFF_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.PALE_OAK_SANDSTONE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.PALE_OAK_RED_SANDSTONE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.PALE_OAK_POLISHED_BLACKSTONE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.PALE_OAK_GILDED_BLACKSTONE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.PALE_OAK_SMOOTH_BASALT_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.PALE_OAK_QUARTZ_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.PALE_OAK_CALCITE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.BAMBOO_POLISHED_GRANITE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.BAMBOO_POLISHED_DIORITE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.BAMBOO_POLISHED_ANDESITE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.BAMBOO_POLISHED_DEEPSLATE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.BAMBOO_POLISHED_TUFF_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.BAMBOO_SANDSTONE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.BAMBOO_RED_SANDSTONE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.BAMBOO_POLISHED_BLACKSTONE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.BAMBOO_GILDED_BLACKSTONE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.BAMBOO_SMOOTH_BASALT_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.BAMBOO_QUARTZ_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.BAMBOO_CALCITE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.MANGROVE_POLISHED_GRANITE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.MANGROVE_POLISHED_DIORITE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.MANGROVE_POLISHED_ANDESITE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.MANGROVE_POLISHED_DEEPSLATE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.MANGROVE_POLISHED_TUFF_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.MANGROVE_SANDSTONE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.MANGROVE_RED_SANDSTONE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.MANGROVE_POLISHED_BLACKSTONE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.MANGROVE_GILDED_BLACKSTONE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.MANGROVE_SMOOTH_BASALT_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.MANGROVE_QUARTZ_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.MANGROVE_CALCITE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.CRIMSON_POLISHED_GRANITE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.CRIMSON_POLISHED_DIORITE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.CRIMSON_POLISHED_ANDESITE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.CRIMSON_POLISHED_DEEPSLATE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.CRIMSON_POLISHED_TUFF_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.CRIMSON_SANDSTONE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.CRIMSON_RED_SANDSTONE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.CRIMSON_POLISHED_BLACKSTONE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.CRIMSON_GILDED_BLACKSTONE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.CRIMSON_SMOOTH_BASALT_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.CRIMSON_QUARTZ_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.CRIMSON_CALCITE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.WARPED_POLISHED_GRANITE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.WARPED_POLISHED_DIORITE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.WARPED_POLISHED_ANDESITE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.WARPED_POLISHED_DEEPSLATE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.WARPED_POLISHED_TUFF_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.WARPED_SANDSTONE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.WARPED_RED_SANDSTONE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.WARPED_POLISHED_BLACKSTONE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.WARPED_GILDED_BLACKSTONE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.WARPED_SMOOTH_BASALT_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.WARPED_QUARTZ_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetGlassDoor(SFFBlocks.WARPED_CALCITE_KITCHEN_CABINET_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.OAK_POLISHED_GRANITE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.OAK_POLISHED_DIORITE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.OAK_POLISHED_ANDESITE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.OAK_POLISHED_DEEPSLATE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.OAK_POLISHED_TUFF_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.OAK_SANDSTONE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_LOG), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.OAK_RED_SANDSTONE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_LOG), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.OAK_POLISHED_BLACKSTONE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.OAK_GILDED_BLACKSTONE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_LOG), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.OAK_SMOOTH_BASALT_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_LOG), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.OAK_QUARTZ_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_LOG), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.OAK_CALCITE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_LOG), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.SPRUCE_POLISHED_GRANITE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.SPRUCE_POLISHED_DIORITE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.SPRUCE_POLISHED_ANDESITE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.SPRUCE_POLISHED_DEEPSLATE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.SPRUCE_POLISHED_TUFF_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.SPRUCE_SANDSTONE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.SPRUCE_RED_SANDSTONE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.SPRUCE_POLISHED_BLACKSTONE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.SPRUCE_GILDED_BLACKSTONE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.SPRUCE_SMOOTH_BASALT_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.SPRUCE_QUARTZ_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.SPRUCE_CALCITE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.BIRCH_POLISHED_GRANITE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.BIRCH_POLISHED_DIORITE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.BIRCH_POLISHED_ANDESITE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.BIRCH_POLISHED_DEEPSLATE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.BIRCH_POLISHED_TUFF_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.BIRCH_SANDSTONE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.BIRCH_RED_SANDSTONE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.BIRCH_POLISHED_BLACKSTONE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.BIRCH_GILDED_BLACKSTONE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.BIRCH_SMOOTH_BASALT_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.BIRCH_QUARTZ_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.BIRCH_CALCITE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.JUNGLE_POLISHED_GRANITE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.JUNGLE_POLISHED_DIORITE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.JUNGLE_POLISHED_ANDESITE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.JUNGLE_POLISHED_DEEPSLATE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.JUNGLE_POLISHED_TUFF_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.JUNGLE_SANDSTONE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.JUNGLE_RED_SANDSTONE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.JUNGLE_POLISHED_BLACKSTONE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.JUNGLE_GILDED_BLACKSTONE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.JUNGLE_SMOOTH_BASALT_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.JUNGLE_QUARTZ_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.JUNGLE_CALCITE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.ACACIA_POLISHED_GRANITE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.ACACIA_POLISHED_DIORITE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.ACACIA_POLISHED_ANDESITE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.ACACIA_POLISHED_DEEPSLATE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.ACACIA_POLISHED_TUFF_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.ACACIA_SANDSTONE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.ACACIA_RED_SANDSTONE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.ACACIA_POLISHED_BLACKSTONE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.ACACIA_GILDED_BLACKSTONE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.ACACIA_SMOOTH_BASALT_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.ACACIA_QUARTZ_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.ACACIA_CALCITE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.CHERRY_POLISHED_GRANITE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.CHERRY_POLISHED_DIORITE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.CHERRY_POLISHED_ANDESITE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.CHERRY_POLISHED_DEEPSLATE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.CHERRY_POLISHED_TUFF_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.CHERRY_SANDSTONE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.CHERRY_RED_SANDSTONE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.CHERRY_POLISHED_BLACKSTONE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.CHERRY_GILDED_BLACKSTONE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.CHERRY_SMOOTH_BASALT_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.CHERRY_QUARTZ_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.CHERRY_CALCITE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.DARK_OAK_POLISHED_GRANITE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.DARK_OAK_POLISHED_DIORITE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.DARK_OAK_POLISHED_ANDESITE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.DARK_OAK_POLISHED_DEEPSLATE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.DARK_OAK_POLISHED_TUFF_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.DARK_OAK_SANDSTONE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.DARK_OAK_RED_SANDSTONE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.DARK_OAK_POLISHED_BLACKSTONE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.DARK_OAK_GILDED_BLACKSTONE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.DARK_OAK_SMOOTH_BASALT_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.DARK_OAK_QUARTZ_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.DARK_OAK_CALCITE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.PALE_OAK_POLISHED_GRANITE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.PALE_OAK_POLISHED_DIORITE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.PALE_OAK_POLISHED_ANDESITE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.PALE_OAK_POLISHED_DEEPSLATE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.PALE_OAK_POLISHED_TUFF_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.PALE_OAK_SANDSTONE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.PALE_OAK_RED_SANDSTONE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.PALE_OAK_POLISHED_BLACKSTONE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.PALE_OAK_GILDED_BLACKSTONE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.PALE_OAK_SMOOTH_BASALT_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.PALE_OAK_QUARTZ_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.PALE_OAK_CALCITE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.BAMBOO_POLISHED_GRANITE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.BAMBOO_POLISHED_DIORITE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.BAMBOO_POLISHED_ANDESITE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.BAMBOO_POLISHED_DEEPSLATE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.BAMBOO_POLISHED_TUFF_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.BAMBOO_SANDSTONE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.BAMBOO_RED_SANDSTONE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.BAMBOO_POLISHED_BLACKSTONE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.BAMBOO_GILDED_BLACKSTONE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.BAMBOO_SMOOTH_BASALT_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.BAMBOO_QUARTZ_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.BAMBOO_CALCITE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.MANGROVE_POLISHED_GRANITE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.MANGROVE_POLISHED_DIORITE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.MANGROVE_POLISHED_ANDESITE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.MANGROVE_POLISHED_DEEPSLATE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.MANGROVE_POLISHED_TUFF_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.MANGROVE_SANDSTONE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.MANGROVE_RED_SANDSTONE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.MANGROVE_POLISHED_BLACKSTONE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.MANGROVE_GILDED_BLACKSTONE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.MANGROVE_SMOOTH_BASALT_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.MANGROVE_QUARTZ_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.MANGROVE_CALCITE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.CRIMSON_POLISHED_GRANITE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.CRIMSON_POLISHED_DIORITE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.CRIMSON_POLISHED_ANDESITE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.CRIMSON_POLISHED_DEEPSLATE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.CRIMSON_POLISHED_TUFF_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.CRIMSON_SANDSTONE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.CRIMSON_RED_SANDSTONE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.CRIMSON_POLISHED_BLACKSTONE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.CRIMSON_GILDED_BLACKSTONE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.CRIMSON_SMOOTH_BASALT_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.CRIMSON_QUARTZ_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.CRIMSON_CALCITE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.WARPED_POLISHED_GRANITE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.WARPED_POLISHED_DIORITE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.WARPED_POLISHED_ANDESITE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.WARPED_POLISHED_DEEPSLATE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.WARPED_POLISHED_TUFF_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.WARPED_SANDSTONE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.WARPED_RED_SANDSTONE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.WARPED_POLISHED_BLACKSTONE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.WARPED_GILDED_BLACKSTONE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.WARPED_SMOOTH_BASALT_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.WARPED_QUARTZ_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysDoor(SFFBlocks.WARPED_CALCITE_KITCHEN_CABINET_SIDEWAYS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.OAK_POLISHED_GRANITE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.OAK_POLISHED_DIORITE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.OAK_POLISHED_ANDESITE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.OAK_POLISHED_DEEPSLATE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.OAK_POLISHED_TUFF_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.OAK_SANDSTONE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_LOG), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.OAK_RED_SANDSTONE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_LOG), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.OAK_POLISHED_BLACKSTONE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.OAK_GILDED_BLACKSTONE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_LOG), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.OAK_SMOOTH_BASALT_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_LOG), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.OAK_QUARTZ_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_LOG), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.OAK_CALCITE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_LOG), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.SPRUCE_POLISHED_GRANITE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.SPRUCE_POLISHED_DIORITE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.SPRUCE_POLISHED_ANDESITE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.SPRUCE_POLISHED_DEEPSLATE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.SPRUCE_POLISHED_TUFF_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.SPRUCE_SANDSTONE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.SPRUCE_RED_SANDSTONE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.SPRUCE_POLISHED_BLACKSTONE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.SPRUCE_GILDED_BLACKSTONE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.SPRUCE_SMOOTH_BASALT_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.SPRUCE_QUARTZ_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.SPRUCE_CALCITE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_LOG), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.BIRCH_POLISHED_GRANITE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.BIRCH_POLISHED_DIORITE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.BIRCH_POLISHED_ANDESITE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.BIRCH_POLISHED_DEEPSLATE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.BIRCH_POLISHED_TUFF_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.BIRCH_SANDSTONE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.BIRCH_RED_SANDSTONE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.BIRCH_POLISHED_BLACKSTONE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.BIRCH_GILDED_BLACKSTONE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.BIRCH_SMOOTH_BASALT_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.BIRCH_QUARTZ_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.BIRCH_CALCITE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_LOG), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.JUNGLE_POLISHED_GRANITE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.JUNGLE_POLISHED_DIORITE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.JUNGLE_POLISHED_ANDESITE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.JUNGLE_POLISHED_DEEPSLATE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.JUNGLE_POLISHED_TUFF_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.JUNGLE_SANDSTONE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.JUNGLE_RED_SANDSTONE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.JUNGLE_POLISHED_BLACKSTONE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.JUNGLE_GILDED_BLACKSTONE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.JUNGLE_SMOOTH_BASALT_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.JUNGLE_QUARTZ_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.JUNGLE_CALCITE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_LOG), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.ACACIA_POLISHED_GRANITE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.ACACIA_POLISHED_DIORITE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.ACACIA_POLISHED_ANDESITE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.ACACIA_POLISHED_DEEPSLATE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.ACACIA_POLISHED_TUFF_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.ACACIA_SANDSTONE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.ACACIA_RED_SANDSTONE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.ACACIA_POLISHED_BLACKSTONE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.ACACIA_GILDED_BLACKSTONE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.ACACIA_SMOOTH_BASALT_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.ACACIA_QUARTZ_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.ACACIA_CALCITE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_LOG), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.CHERRY_POLISHED_GRANITE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.CHERRY_POLISHED_DIORITE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.CHERRY_POLISHED_ANDESITE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.CHERRY_POLISHED_DEEPSLATE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.CHERRY_POLISHED_TUFF_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.CHERRY_SANDSTONE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.CHERRY_RED_SANDSTONE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.CHERRY_POLISHED_BLACKSTONE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.CHERRY_GILDED_BLACKSTONE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.CHERRY_SMOOTH_BASALT_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.CHERRY_QUARTZ_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.CHERRY_CALCITE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_LOG), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.DARK_OAK_POLISHED_GRANITE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.DARK_OAK_POLISHED_DIORITE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.DARK_OAK_POLISHED_ANDESITE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.DARK_OAK_POLISHED_DEEPSLATE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.DARK_OAK_POLISHED_TUFF_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.DARK_OAK_SANDSTONE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.DARK_OAK_RED_SANDSTONE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.DARK_OAK_POLISHED_BLACKSTONE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.DARK_OAK_GILDED_BLACKSTONE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.DARK_OAK_SMOOTH_BASALT_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.DARK_OAK_QUARTZ_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.DARK_OAK_CALCITE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_LOG), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.PALE_OAK_POLISHED_GRANITE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.PALE_OAK_POLISHED_DIORITE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.PALE_OAK_POLISHED_ANDESITE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.PALE_OAK_POLISHED_DEEPSLATE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.PALE_OAK_POLISHED_TUFF_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.PALE_OAK_SANDSTONE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.PALE_OAK_RED_SANDSTONE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.PALE_OAK_POLISHED_BLACKSTONE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.PALE_OAK_GILDED_BLACKSTONE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.PALE_OAK_SMOOTH_BASALT_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.PALE_OAK_QUARTZ_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.PALE_OAK_CALCITE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_LOG), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.BAMBOO_POLISHED_GRANITE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.BAMBOO_POLISHED_DIORITE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.BAMBOO_POLISHED_ANDESITE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.BAMBOO_POLISHED_DEEPSLATE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.BAMBOO_POLISHED_TUFF_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.BAMBOO_SANDSTONE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.BAMBOO_RED_SANDSTONE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.BAMBOO_POLISHED_BLACKSTONE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.BAMBOO_GILDED_BLACKSTONE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.BAMBOO_SMOOTH_BASALT_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.BAMBOO_QUARTZ_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.BAMBOO_CALCITE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_BLOCK), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.MANGROVE_POLISHED_GRANITE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.MANGROVE_POLISHED_DIORITE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.MANGROVE_POLISHED_ANDESITE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.MANGROVE_POLISHED_DEEPSLATE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.MANGROVE_POLISHED_TUFF_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.MANGROVE_SANDSTONE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.MANGROVE_RED_SANDSTONE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.MANGROVE_POLISHED_BLACKSTONE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.MANGROVE_GILDED_BLACKSTONE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.MANGROVE_SMOOTH_BASALT_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.MANGROVE_QUARTZ_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.MANGROVE_CALCITE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_LOG), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.CRIMSON_POLISHED_GRANITE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.CRIMSON_POLISHED_DIORITE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.CRIMSON_POLISHED_ANDESITE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.CRIMSON_POLISHED_DEEPSLATE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.CRIMSON_POLISHED_TUFF_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.CRIMSON_SANDSTONE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.CRIMSON_RED_SANDSTONE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.CRIMSON_POLISHED_BLACKSTONE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.CRIMSON_GILDED_BLACKSTONE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.CRIMSON_SMOOTH_BASALT_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.CRIMSON_QUARTZ_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.CRIMSON_CALCITE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_STEM), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.WARPED_POLISHED_GRANITE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.WARPED_POLISHED_DIORITE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.WARPED_POLISHED_ANDESITE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.WARPED_POLISHED_DEEPSLATE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.WARPED_POLISHED_TUFF_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.WARPED_SANDSTONE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.WARPED_RED_SANDSTONE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.WARPED_POLISHED_BLACKSTONE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.WARPED_GILDED_BLACKSTONE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.WARPED_SMOOTH_BASALT_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.WARPED_QUARTZ_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKitchenCabinetSidewaysGlassDoor(SFFBlocks.WARPED_CALCITE_KITCHEN_CABINET_SIDEWAYS_GLASS_DOOR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_STEM), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createFridge(SFFBlocks.IRON_FRIDGE.get(), TextureMapping.getBlockTexture(Blocks.IRON_BLOCK), TextureMapping.getBlockTexture(Blocks.IRON_BARS), TextureMapping.getBlockTexture(Blocks.ANVIL), blockModels));
        blockModels.blockStateOutput.accept(createFridge(SFFBlocks.GOLD_FRIDGE.get(), TextureMapping.getBlockTexture(Blocks.GOLD_BLOCK), TextureMapping.getBlockTexture(Blocks.IRON_BARS), TextureMapping.getBlockTexture(Blocks.ANVIL), blockModels));
        blockModels.blockStateOutput.accept(createFridge(SFFBlocks.NETHERITE_FRIDGE.get(), TextureMapping.getBlockTexture(Blocks.NETHERITE_BLOCK), TextureMapping.getBlockTexture(Blocks.IRON_BARS), TextureMapping.getBlockTexture(Blocks.ANVIL), blockModels));
        blockModels.blockStateOutput.accept(createFridge(SFFBlocks.COPPER_FRIDGE.get(), TextureMapping.getBlockTexture(Blocks.COPPER_BLOCK), TextureMapping.getBlockTexture(Blocks.IRON_BARS), TextureMapping.getBlockTexture(Blocks.ANVIL), blockModels));
        blockModels.blockStateOutput.accept(createFridge(SFFBlocks.EXPOSED_COPPER_FRIDGE.get(), TextureMapping.getBlockTexture(Blocks.EXPOSED_COPPER), TextureMapping.getBlockTexture(Blocks.IRON_BARS), TextureMapping.getBlockTexture(Blocks.ANVIL), blockModels));
        blockModels.blockStateOutput.accept(createFridge(SFFBlocks.WEATHERED_COPPER_FRIDGE.get(), TextureMapping.getBlockTexture(Blocks.WEATHERED_COPPER), TextureMapping.getBlockTexture(Blocks.IRON_BARS), TextureMapping.getBlockTexture(Blocks.ANVIL), blockModels));
        blockModels.blockStateOutput.accept(createFridge(SFFBlocks.OXIDIZED_COPPER_FRIDGE.get(), TextureMapping.getBlockTexture(Blocks.OXIDIZED_COPPER), TextureMapping.getBlockTexture(Blocks.IRON_BARS), TextureMapping.getBlockTexture(Blocks.ANVIL), blockModels));
        blockModels.blockStateOutput.accept(createFridge(SFFBlocks.WAXED_COPPER_FRIDGE.get(), TextureMapping.getBlockTexture(Blocks.COPPER_BLOCK), TextureMapping.getBlockTexture(Blocks.IRON_BARS), TextureMapping.getBlockTexture(Blocks.ANVIL), blockModels));
        blockModels.blockStateOutput.accept(createFridge(SFFBlocks.WAXED_EXPOSED_COPPER_FRIDGE.get(), TextureMapping.getBlockTexture(Blocks.EXPOSED_COPPER), TextureMapping.getBlockTexture(Blocks.IRON_BARS), TextureMapping.getBlockTexture(Blocks.ANVIL), blockModels));
        blockModels.blockStateOutput.accept(createFridge(SFFBlocks.WAXED_WEATHERED_COPPER_FRIDGE.get(), TextureMapping.getBlockTexture(Blocks.WEATHERED_COPPER), TextureMapping.getBlockTexture(Blocks.IRON_BARS), TextureMapping.getBlockTexture(Blocks.ANVIL), blockModels));
        blockModels.blockStateOutput.accept(createFridge(SFFBlocks.WAXED_OXIDIZED_COPPER_FRIDGE.get(), TextureMapping.getBlockTexture(Blocks.OXIDIZED_COPPER), TextureMapping.getBlockTexture(Blocks.IRON_BARS), TextureMapping.getBlockTexture(Blocks.ANVIL), blockModels));

        Collection<Block> blocks = SFFBlocks.BLOCKS.getEntries().stream().map(DeferredHolder::get).collect(Collectors.toList());
        blocks.forEach((block -> {
            if (!(block instanceof TableBlock || block instanceof KitchenCabinetShelfBlock || block instanceof CurtainBlock)) {
                registerBasicBlockModel(blockModels.itemModelOutput, block);
            } else {
                if (block instanceof CurtainBlock) {
                    registerBasicBlockModel(blockModels.itemModelOutput, block, "_small_single_open");
                } else {
                    registerBasicBlockModel(blockModels.itemModelOutput, block, "_single");
                }
            }
        }));
    }

    private void createKnifeBlocks(BlockModelGenerators blockModels) {
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.OAK_POLISHED_GRANITE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.OAK_POLISHED_DIORITE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.OAK_POLISHED_ANDESITE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.OAK_POLISHED_DEEPSLATE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.OAK_POLISHED_TUFF_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.OAK_SANDSTONE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.OAK_RED_SANDSTONE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.OAK_POLISHED_BLACKSTONE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.OAK_GILDED_BLACKSTONE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.OAK_SMOOTH_BASALT_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.OAK_QUARTZ_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.OAK_CALCITE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.SPRUCE_POLISHED_GRANITE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.SPRUCE_POLISHED_DIORITE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.SPRUCE_POLISHED_ANDESITE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.SPRUCE_POLISHED_DEEPSLATE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.SPRUCE_POLISHED_TUFF_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.SPRUCE_SANDSTONE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.SPRUCE_RED_SANDSTONE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.SPRUCE_POLISHED_BLACKSTONE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.SPRUCE_GILDED_BLACKSTONE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.SPRUCE_SMOOTH_BASALT_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.SPRUCE_QUARTZ_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.SPRUCE_CALCITE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.BIRCH_POLISHED_GRANITE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.BIRCH_POLISHED_DIORITE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.BIRCH_POLISHED_ANDESITE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.BIRCH_POLISHED_DEEPSLATE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.BIRCH_POLISHED_TUFF_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.BIRCH_SANDSTONE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.BIRCH_RED_SANDSTONE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.BIRCH_POLISHED_BLACKSTONE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.BIRCH_GILDED_BLACKSTONE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.BIRCH_SMOOTH_BASALT_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.BIRCH_QUARTZ_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.BIRCH_CALCITE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.JUNGLE_POLISHED_GRANITE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.JUNGLE_POLISHED_DIORITE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.JUNGLE_POLISHED_ANDESITE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.JUNGLE_POLISHED_DEEPSLATE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.JUNGLE_POLISHED_TUFF_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.JUNGLE_SANDSTONE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.JUNGLE_RED_SANDSTONE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.JUNGLE_POLISHED_BLACKSTONE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.JUNGLE_GILDED_BLACKSTONE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.JUNGLE_SMOOTH_BASALT_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.JUNGLE_QUARTZ_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.JUNGLE_CALCITE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.ACACIA_POLISHED_GRANITE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.ACACIA_POLISHED_DIORITE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.ACACIA_POLISHED_ANDESITE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.ACACIA_POLISHED_DEEPSLATE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.ACACIA_POLISHED_TUFF_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.ACACIA_SANDSTONE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.ACACIA_RED_SANDSTONE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.ACACIA_POLISHED_BLACKSTONE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.ACACIA_GILDED_BLACKSTONE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.ACACIA_SMOOTH_BASALT_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.ACACIA_QUARTZ_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.ACACIA_CALCITE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.CHERRY_POLISHED_GRANITE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.CHERRY_POLISHED_DIORITE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.CHERRY_POLISHED_ANDESITE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.CHERRY_POLISHED_DEEPSLATE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.CHERRY_POLISHED_TUFF_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.CHERRY_SANDSTONE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.CHERRY_RED_SANDSTONE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.CHERRY_POLISHED_BLACKSTONE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.CHERRY_GILDED_BLACKSTONE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.CHERRY_SMOOTH_BASALT_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.CHERRY_QUARTZ_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.CHERRY_CALCITE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.DARK_OAK_POLISHED_GRANITE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.DARK_OAK_POLISHED_DIORITE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.DARK_OAK_POLISHED_ANDESITE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.DARK_OAK_POLISHED_DEEPSLATE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.DARK_OAK_POLISHED_TUFF_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.DARK_OAK_SANDSTONE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.DARK_OAK_RED_SANDSTONE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.DARK_OAK_POLISHED_BLACKSTONE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.DARK_OAK_GILDED_BLACKSTONE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.DARK_OAK_SMOOTH_BASALT_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.DARK_OAK_QUARTZ_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.DARK_OAK_CALCITE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.PALE_OAK_POLISHED_GRANITE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.PALE_OAK_POLISHED_DIORITE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.PALE_OAK_POLISHED_ANDESITE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.PALE_OAK_POLISHED_DEEPSLATE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.PALE_OAK_POLISHED_TUFF_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.PALE_OAK_SANDSTONE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.PALE_OAK_RED_SANDSTONE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.PALE_OAK_POLISHED_BLACKSTONE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.PALE_OAK_GILDED_BLACKSTONE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.PALE_OAK_SMOOTH_BASALT_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.PALE_OAK_QUARTZ_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.PALE_OAK_CALCITE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.BAMBOO_POLISHED_GRANITE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.BAMBOO_POLISHED_DIORITE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.BAMBOO_POLISHED_ANDESITE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.BAMBOO_POLISHED_DEEPSLATE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.BAMBOO_POLISHED_TUFF_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.BAMBOO_SANDSTONE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.BAMBOO_RED_SANDSTONE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.BAMBOO_POLISHED_BLACKSTONE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.BAMBOO_GILDED_BLACKSTONE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.BAMBOO_SMOOTH_BASALT_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.BAMBOO_QUARTZ_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.BAMBOO_CALCITE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.MANGROVE_POLISHED_GRANITE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.MANGROVE_POLISHED_DIORITE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.MANGROVE_POLISHED_ANDESITE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.MANGROVE_POLISHED_DEEPSLATE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.MANGROVE_POLISHED_TUFF_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.MANGROVE_SANDSTONE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.MANGROVE_RED_SANDSTONE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.MANGROVE_POLISHED_BLACKSTONE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.MANGROVE_GILDED_BLACKSTONE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.MANGROVE_SMOOTH_BASALT_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.MANGROVE_QUARTZ_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.MANGROVE_CALCITE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.CRIMSON_POLISHED_GRANITE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.CRIMSON_POLISHED_DIORITE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.CRIMSON_POLISHED_ANDESITE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.CRIMSON_POLISHED_DEEPSLATE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.CRIMSON_POLISHED_TUFF_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.CRIMSON_SANDSTONE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.CRIMSON_RED_SANDSTONE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.CRIMSON_POLISHED_BLACKSTONE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.CRIMSON_GILDED_BLACKSTONE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.CRIMSON_SMOOTH_BASALT_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.CRIMSON_QUARTZ_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.CRIMSON_CALCITE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));

        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.WARPED_POLISHED_GRANITE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_GRANITE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.WARPED_POLISHED_DIORITE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DIORITE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.WARPED_POLISHED_ANDESITE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_ANDESITE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.WARPED_POLISHED_DEEPSLATE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_DEEPSLATE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.WARPED_POLISHED_TUFF_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_TUFF), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.WARPED_SANDSTONE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.WARPED_RED_SANDSTONE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.RED_SANDSTONE, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.WARPED_POLISHED_BLACKSTONE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.POLISHED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.WARPED_GILDED_BLACKSTONE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.GILDED_BLACKSTONE), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.WARPED_SMOOTH_BASALT_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.SMOOTH_BASALT), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.WARPED_QUARTZ_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.QUARTZ_BLOCK, "_top"), blockModels));
        blockModels.blockStateOutput.accept(createKnifeBlock(SFFBlocks.WARPED_CALCITE_KNIFE_BLOCK.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.CALCITE), blockModels));
    }

    private void createChairs(BlockModelGenerators blockModels) {
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.OAK_WHITE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.WHITE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.OAK_LIGHT_GRAY_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.LIGHT_GRAY_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.OAK_GRAY_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.GRAY_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.OAK_BLACK_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.BLACK_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.OAK_BROWN_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.BROWN_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.OAK_RED_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.RED_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.OAK_ORANGE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.ORANGE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.OAK_YELLOW_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.YELLOW_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.OAK_LIME_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.LIME_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.OAK_GREEN_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.GREEN_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.OAK_CYAN_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.CYAN_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.OAK_LIGHT_BLUE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.LIGHT_BLUE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.OAK_BLUE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.BLUE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.OAK_PURPLE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.PURPLE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.OAK_MAGENTA_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.MAGENTA_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.OAK_PINK_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.OAK_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.PINK_WOOL), blockModels));

        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.SPRUCE_WHITE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.WHITE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.SPRUCE_LIGHT_GRAY_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.LIGHT_GRAY_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.SPRUCE_GRAY_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.GRAY_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.SPRUCE_BLACK_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.BLACK_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.SPRUCE_BROWN_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.BROWN_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.SPRUCE_RED_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.RED_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.SPRUCE_ORANGE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.ORANGE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.SPRUCE_YELLOW_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.YELLOW_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.SPRUCE_LIME_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.LIME_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.SPRUCE_GREEN_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.GREEN_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.SPRUCE_CYAN_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.CYAN_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.SPRUCE_LIGHT_BLUE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.LIGHT_BLUE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.SPRUCE_BLUE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.BLUE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.SPRUCE_PURPLE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.PURPLE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.SPRUCE_MAGENTA_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.MAGENTA_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.SPRUCE_PINK_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), TextureMapping.getBlockTexture(Blocks.SPRUCE_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.PINK_WOOL), blockModels));

        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.BIRCH_WHITE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.WHITE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.BIRCH_LIGHT_GRAY_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.LIGHT_GRAY_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.BIRCH_GRAY_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.GRAY_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.BIRCH_BLACK_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.BLACK_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.BIRCH_BROWN_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.BROWN_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.BIRCH_RED_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.RED_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.BIRCH_ORANGE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.ORANGE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.BIRCH_YELLOW_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.YELLOW_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.BIRCH_LIME_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.LIME_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.BIRCH_GREEN_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.GREEN_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.BIRCH_CYAN_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.CYAN_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.BIRCH_LIGHT_BLUE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.LIGHT_BLUE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.BIRCH_BLUE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.BLUE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.BIRCH_PURPLE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.PURPLE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.BIRCH_MAGENTA_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.MAGENTA_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.BIRCH_PINK_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), TextureMapping.getBlockTexture(Blocks.BIRCH_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.PINK_WOOL), blockModels));

        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.JUNGLE_WHITE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.WHITE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.JUNGLE_LIGHT_GRAY_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.LIGHT_GRAY_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.JUNGLE_GRAY_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.GRAY_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.JUNGLE_BLACK_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.BLACK_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.JUNGLE_BROWN_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.BROWN_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.JUNGLE_RED_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.RED_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.JUNGLE_ORANGE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.ORANGE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.JUNGLE_YELLOW_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.YELLOW_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.JUNGLE_LIME_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.LIME_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.JUNGLE_GREEN_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.GREEN_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.JUNGLE_CYAN_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.CYAN_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.JUNGLE_LIGHT_BLUE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.LIGHT_BLUE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.JUNGLE_BLUE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.BLUE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.JUNGLE_PURPLE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.PURPLE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.JUNGLE_MAGENTA_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.MAGENTA_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.JUNGLE_PINK_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), TextureMapping.getBlockTexture(Blocks.JUNGLE_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.PINK_WOOL), blockModels));

        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.ACACIA_WHITE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.WHITE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.ACACIA_LIGHT_GRAY_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.LIGHT_GRAY_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.ACACIA_GRAY_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.GRAY_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.ACACIA_BLACK_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.BLACK_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.ACACIA_BROWN_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.BROWN_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.ACACIA_RED_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.RED_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.ACACIA_ORANGE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.ORANGE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.ACACIA_YELLOW_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.YELLOW_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.ACACIA_LIME_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.LIME_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.ACACIA_GREEN_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.GREEN_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.ACACIA_CYAN_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.CYAN_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.ACACIA_LIGHT_BLUE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.LIGHT_BLUE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.ACACIA_BLUE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.BLUE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.ACACIA_PURPLE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.PURPLE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.ACACIA_MAGENTA_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.MAGENTA_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.ACACIA_PINK_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), TextureMapping.getBlockTexture(Blocks.ACACIA_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.PINK_WOOL), blockModels));

        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.CHERRY_WHITE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.WHITE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.CHERRY_LIGHT_GRAY_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.LIGHT_GRAY_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.CHERRY_GRAY_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.GRAY_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.CHERRY_BLACK_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.BLACK_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.CHERRY_BROWN_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.BROWN_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.CHERRY_RED_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.RED_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.CHERRY_ORANGE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.ORANGE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.CHERRY_YELLOW_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.YELLOW_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.CHERRY_LIME_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.LIME_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.CHERRY_GREEN_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.GREEN_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.CHERRY_CYAN_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.CYAN_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.CHERRY_LIGHT_BLUE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.LIGHT_BLUE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.CHERRY_BLUE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.BLUE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.CHERRY_PURPLE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.PURPLE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.CHERRY_MAGENTA_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.MAGENTA_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.CHERRY_PINK_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), TextureMapping.getBlockTexture(Blocks.CHERRY_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.PINK_WOOL), blockModels));

        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.DARK_OAK_WHITE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.WHITE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.DARK_OAK_LIGHT_GRAY_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.LIGHT_GRAY_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.DARK_OAK_GRAY_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.GRAY_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.DARK_OAK_BLACK_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.BLACK_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.DARK_OAK_BROWN_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.BROWN_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.DARK_OAK_RED_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.RED_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.DARK_OAK_ORANGE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.ORANGE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.DARK_OAK_YELLOW_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.YELLOW_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.DARK_OAK_LIME_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.LIME_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.DARK_OAK_GREEN_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.GREEN_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.DARK_OAK_CYAN_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.CYAN_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.DARK_OAK_LIGHT_BLUE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.LIGHT_BLUE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.DARK_OAK_BLUE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.BLUE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.DARK_OAK_PURPLE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.PURPLE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.DARK_OAK_MAGENTA_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.MAGENTA_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.DARK_OAK_PINK_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.DARK_OAK_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.PINK_WOOL), blockModels));

        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.PALE_OAK_WHITE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.WHITE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.PALE_OAK_LIGHT_GRAY_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.LIGHT_GRAY_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.PALE_OAK_GRAY_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.GRAY_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.PALE_OAK_BLACK_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.BLACK_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.PALE_OAK_BROWN_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.BROWN_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.PALE_OAK_RED_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.RED_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.PALE_OAK_ORANGE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.ORANGE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.PALE_OAK_YELLOW_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.YELLOW_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.PALE_OAK_LIME_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.LIME_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.PALE_OAK_GREEN_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.GREEN_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.PALE_OAK_CYAN_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.CYAN_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.PALE_OAK_LIGHT_BLUE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.LIGHT_BLUE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.PALE_OAK_BLUE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.BLUE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.PALE_OAK_PURPLE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.PURPLE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.PALE_OAK_MAGENTA_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.MAGENTA_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.PALE_OAK_PINK_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), TextureMapping.getBlockTexture(Blocks.PALE_OAK_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.PINK_WOOL), blockModels));

        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.BAMBOO_WHITE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.WHITE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.BAMBOO_LIGHT_GRAY_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.LIGHT_GRAY_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.BAMBOO_GRAY_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.GRAY_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.BAMBOO_BLACK_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.BLACK_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.BAMBOO_BROWN_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.BROWN_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.BAMBOO_RED_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.RED_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.BAMBOO_ORANGE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.ORANGE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.BAMBOO_YELLOW_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.YELLOW_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.BAMBOO_LIME_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.LIME_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.BAMBOO_GREEN_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.GREEN_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.BAMBOO_CYAN_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.CYAN_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.BAMBOO_LIGHT_BLUE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.LIGHT_BLUE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.BAMBOO_BLUE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.BLUE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.BAMBOO_PURPLE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.PURPLE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.BAMBOO_MAGENTA_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.MAGENTA_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.BAMBOO_PINK_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), TextureMapping.getBlockTexture(Blocks.BAMBOO_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.PINK_WOOL), blockModels));

        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.MANGROVE_WHITE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.WHITE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.MANGROVE_LIGHT_GRAY_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.LIGHT_GRAY_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.MANGROVE_GRAY_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.GRAY_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.MANGROVE_BLACK_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.BLACK_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.MANGROVE_BROWN_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.BROWN_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.MANGROVE_RED_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.RED_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.MANGROVE_ORANGE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.ORANGE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.MANGROVE_YELLOW_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.YELLOW_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.MANGROVE_LIME_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.LIME_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.MANGROVE_GREEN_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.GREEN_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.MANGROVE_CYAN_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.CYAN_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.MANGROVE_LIGHT_BLUE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.LIGHT_BLUE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.MANGROVE_BLUE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.BLUE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.MANGROVE_PURPLE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.PURPLE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.MANGROVE_MAGENTA_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.MAGENTA_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.MANGROVE_PINK_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), TextureMapping.getBlockTexture(Blocks.MANGROVE_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.PINK_WOOL), blockModels));

        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.CRIMSON_WHITE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.WHITE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.CRIMSON_LIGHT_GRAY_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.LIGHT_GRAY_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.CRIMSON_GRAY_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.GRAY_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.CRIMSON_BLACK_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.BLACK_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.CRIMSON_BROWN_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.BROWN_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.CRIMSON_RED_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.RED_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.CRIMSON_ORANGE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.ORANGE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.CRIMSON_YELLOW_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.YELLOW_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.CRIMSON_LIME_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.LIME_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.CRIMSON_GREEN_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.GREEN_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.CRIMSON_CYAN_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.CYAN_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.CRIMSON_LIGHT_BLUE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.LIGHT_BLUE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.CRIMSON_BLUE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.BLUE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.CRIMSON_PURPLE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.PURPLE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.CRIMSON_MAGENTA_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.MAGENTA_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.CRIMSON_PINK_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), TextureMapping.getBlockTexture(Blocks.CRIMSON_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.PINK_WOOL), blockModels));

        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.WARPED_WHITE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.WHITE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.WARPED_LIGHT_GRAY_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.LIGHT_GRAY_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.WARPED_GRAY_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.GRAY_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.WARPED_BLACK_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.BLACK_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.WARPED_BROWN_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.BROWN_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.WARPED_RED_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.RED_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.WARPED_ORANGE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.ORANGE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.WARPED_YELLOW_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.YELLOW_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.WARPED_LIME_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.LIME_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.WARPED_GREEN_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.GREEN_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.WARPED_CYAN_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.CYAN_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.WARPED_LIGHT_BLUE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.LIGHT_BLUE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.WARPED_BLUE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.BLUE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.WARPED_PURPLE_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.PURPLE_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.WARPED_MAGENTA_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.MAGENTA_WOOL), blockModels));
        blockModels.blockStateOutput.accept(createChairBlock(SFFBlocks.WARPED_PINK_WOOL_CHAIR.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), TextureMapping.getBlockTexture(Blocks.WARPED_TRAPDOOR), TextureMapping.getBlockTexture(Blocks.PINK_WOOL), blockModels));
    }

    private void createTables(BlockModelGenerators blockModels) {
        blockModels.blockStateOutput.accept(createTableBlock(SFFBlocks.OAK_TABLE.get(), TextureMapping.getBlockTexture(Blocks.OAK_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createTableBlock(SFFBlocks.SPRUCE_TABLE.get(), TextureMapping.getBlockTexture(Blocks.SPRUCE_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createTableBlock(SFFBlocks.BIRCH_TABLE.get(), TextureMapping.getBlockTexture(Blocks.BIRCH_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createTableBlock(SFFBlocks.JUNGLE_TABLE.get(), TextureMapping.getBlockTexture(Blocks.JUNGLE_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createTableBlock(SFFBlocks.ACACIA_TABLE.get(), TextureMapping.getBlockTexture(Blocks.ACACIA_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createTableBlock(SFFBlocks.CHERRY_TABLE.get(), TextureMapping.getBlockTexture(Blocks.CHERRY_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createTableBlock(SFFBlocks.DARK_OAK_TABLE.get(), TextureMapping.getBlockTexture(Blocks.DARK_OAK_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createTableBlock(SFFBlocks.PALE_OAK_TABLE.get(), TextureMapping.getBlockTexture(Blocks.PALE_OAK_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createTableBlock(SFFBlocks.BAMBOO_TABLE.get(), TextureMapping.getBlockTexture(Blocks.BAMBOO_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createTableBlock(SFFBlocks.MANGROVE_TABLE.get(), TextureMapping.getBlockTexture(Blocks.MANGROVE_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createTableBlock(SFFBlocks.CRIMSON_TABLE.get(), TextureMapping.getBlockTexture(Blocks.CRIMSON_PLANKS), blockModels));
        blockModels.blockStateOutput.accept(createTableBlock(SFFBlocks.WARPED_TABLE.get(), TextureMapping.getBlockTexture(Blocks.WARPED_PLANKS), blockModels));
    }

    private void createCurtains(BlockModelGenerators blockModels) {
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.WHITE_IRON_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.WHITE_WOOL), TextureMapping.getBlockTexture(Blocks.IRON_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.WHITE_GOLD_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.WHITE_WOOL), TextureMapping.getBlockTexture(Blocks.GOLD_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.WHITE_NETHERITE_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.WHITE_WOOL), TextureMapping.getBlockTexture(Blocks.NETHERITE_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.WHITE_COPPER_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.WHITE_WOOL), TextureMapping.getBlockTexture(Blocks.COPPER_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.LIGHT_GRAY_IRON_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.LIGHT_GRAY_WOOL), TextureMapping.getBlockTexture(Blocks.IRON_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.LIGHT_GRAY_GOLD_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.LIGHT_GRAY_WOOL), TextureMapping.getBlockTexture(Blocks.GOLD_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.LIGHT_GRAY_NETHERITE_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.LIGHT_GRAY_WOOL), TextureMapping.getBlockTexture(Blocks.NETHERITE_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.LIGHT_GRAY_COPPER_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.LIGHT_GRAY_WOOL), TextureMapping.getBlockTexture(Blocks.COPPER_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.GRAY_IRON_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.GRAY_WOOL), TextureMapping.getBlockTexture(Blocks.IRON_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.GRAY_GOLD_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.GRAY_WOOL), TextureMapping.getBlockTexture(Blocks.GOLD_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.GRAY_NETHERITE_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.GRAY_WOOL), TextureMapping.getBlockTexture(Blocks.NETHERITE_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.GRAY_COPPER_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.GRAY_WOOL), TextureMapping.getBlockTexture(Blocks.COPPER_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.BLACK_IRON_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.BLACK_WOOL), TextureMapping.getBlockTexture(Blocks.IRON_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.BLACK_GOLD_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.BLACK_WOOL), TextureMapping.getBlockTexture(Blocks.GOLD_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.BLACK_NETHERITE_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.BLACK_WOOL), TextureMapping.getBlockTexture(Blocks.NETHERITE_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.BLACK_COPPER_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.BLACK_WOOL), TextureMapping.getBlockTexture(Blocks.COPPER_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.BROWN_IRON_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.BROWN_WOOL), TextureMapping.getBlockTexture(Blocks.IRON_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.BROWN_GOLD_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.BROWN_WOOL), TextureMapping.getBlockTexture(Blocks.GOLD_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.BROWN_NETHERITE_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.BROWN_WOOL), TextureMapping.getBlockTexture(Blocks.NETHERITE_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.BROWN_COPPER_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.BROWN_WOOL), TextureMapping.getBlockTexture(Blocks.COPPER_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.RED_IRON_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.RED_WOOL), TextureMapping.getBlockTexture(Blocks.IRON_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.RED_GOLD_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.RED_WOOL), TextureMapping.getBlockTexture(Blocks.GOLD_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.RED_NETHERITE_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.RED_WOOL), TextureMapping.getBlockTexture(Blocks.NETHERITE_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.RED_COPPER_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.RED_WOOL), TextureMapping.getBlockTexture(Blocks.COPPER_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.ORANGE_IRON_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.ORANGE_WOOL), TextureMapping.getBlockTexture(Blocks.IRON_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.ORANGE_GOLD_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.ORANGE_WOOL), TextureMapping.getBlockTexture(Blocks.GOLD_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.ORANGE_NETHERITE_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.ORANGE_WOOL), TextureMapping.getBlockTexture(Blocks.NETHERITE_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.ORANGE_COPPER_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.ORANGE_WOOL), TextureMapping.getBlockTexture(Blocks.COPPER_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.YELLOW_IRON_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.YELLOW_WOOL), TextureMapping.getBlockTexture(Blocks.IRON_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.YELLOW_GOLD_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.YELLOW_WOOL), TextureMapping.getBlockTexture(Blocks.GOLD_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.YELLOW_NETHERITE_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.YELLOW_WOOL), TextureMapping.getBlockTexture(Blocks.NETHERITE_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.YELLOW_COPPER_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.YELLOW_WOOL), TextureMapping.getBlockTexture(Blocks.COPPER_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.LIME_IRON_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.LIME_WOOL), TextureMapping.getBlockTexture(Blocks.IRON_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.LIME_GOLD_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.LIME_WOOL), TextureMapping.getBlockTexture(Blocks.GOLD_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.LIME_NETHERITE_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.LIME_WOOL), TextureMapping.getBlockTexture(Blocks.NETHERITE_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.LIME_COPPER_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.LIME_WOOL), TextureMapping.getBlockTexture(Blocks.COPPER_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.GREEN_IRON_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.GREEN_WOOL), TextureMapping.getBlockTexture(Blocks.IRON_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.GREEN_GOLD_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.GREEN_WOOL), TextureMapping.getBlockTexture(Blocks.GOLD_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.GREEN_NETHERITE_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.GREEN_WOOL), TextureMapping.getBlockTexture(Blocks.NETHERITE_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.GREEN_COPPER_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.GREEN_WOOL), TextureMapping.getBlockTexture(Blocks.COPPER_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.CYAN_IRON_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.CYAN_WOOL), TextureMapping.getBlockTexture(Blocks.IRON_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.CYAN_GOLD_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.CYAN_WOOL), TextureMapping.getBlockTexture(Blocks.GOLD_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.CYAN_NETHERITE_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.CYAN_WOOL), TextureMapping.getBlockTexture(Blocks.NETHERITE_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.CYAN_COPPER_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.CYAN_WOOL), TextureMapping.getBlockTexture(Blocks.COPPER_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.LIGHT_BLUE_IRON_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.LIGHT_BLUE_WOOL), TextureMapping.getBlockTexture(Blocks.IRON_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.LIGHT_BLUE_GOLD_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.LIGHT_BLUE_WOOL), TextureMapping.getBlockTexture(Blocks.GOLD_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.LIGHT_BLUE_NETHERITE_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.LIGHT_BLUE_WOOL), TextureMapping.getBlockTexture(Blocks.NETHERITE_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.LIGHT_BLUE_COPPER_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.LIGHT_BLUE_WOOL), TextureMapping.getBlockTexture(Blocks.COPPER_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.BLUE_IRON_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.BLUE_WOOL), TextureMapping.getBlockTexture(Blocks.IRON_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.BLUE_GOLD_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.BLUE_WOOL), TextureMapping.getBlockTexture(Blocks.GOLD_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.BLUE_NETHERITE_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.BLUE_WOOL), TextureMapping.getBlockTexture(Blocks.NETHERITE_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.BLUE_COPPER_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.BLUE_WOOL), TextureMapping.getBlockTexture(Blocks.COPPER_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.PURPLE_IRON_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.PURPLE_WOOL), TextureMapping.getBlockTexture(Blocks.IRON_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.PURPLE_GOLD_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.PURPLE_WOOL), TextureMapping.getBlockTexture(Blocks.GOLD_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.PURPLE_NETHERITE_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.PURPLE_WOOL), TextureMapping.getBlockTexture(Blocks.NETHERITE_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.PURPLE_COPPER_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.PURPLE_WOOL), TextureMapping.getBlockTexture(Blocks.COPPER_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.MAGENTA_IRON_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.MAGENTA_WOOL), TextureMapping.getBlockTexture(Blocks.IRON_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.MAGENTA_GOLD_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.MAGENTA_WOOL), TextureMapping.getBlockTexture(Blocks.GOLD_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.MAGENTA_NETHERITE_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.MAGENTA_WOOL), TextureMapping.getBlockTexture(Blocks.NETHERITE_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.MAGENTA_COPPER_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.MAGENTA_WOOL), TextureMapping.getBlockTexture(Blocks.COPPER_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.PINK_IRON_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.PINK_WOOL), TextureMapping.getBlockTexture(Blocks.IRON_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.PINK_GOLD_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.PINK_WOOL), TextureMapping.getBlockTexture(Blocks.GOLD_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.PINK_NETHERITE_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.PINK_WOOL), TextureMapping.getBlockTexture(Blocks.NETHERITE_BLOCK), blockModels));
        blockModels.blockStateOutput.accept(createCurtainBlock(SFFBlocks.PINK_COPPER_CURTAINS.get(), TextureMapping.getBlockTexture(Blocks.PINK_WOOL), TextureMapping.getBlockTexture(Blocks.COPPER_BLOCK), blockModels));
    }

    private void createKitchenTiles(BlockModelGenerators blockModels) {
        blockModels.blockStateOutput.accept(createKitchenTiles(SFFBlocks.WHITE_LIGHT_GRAY_KITCHEN_TILES.get(), TextureMapping.getBlockTexture(Blocks.WHITE_CONCRETE), TextureMapping.getBlockTexture(Blocks.LIGHT_GRAY_CONCRETE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenTiles(SFFBlocks.WHITE_GRAY_KITCHEN_TILES.get(), TextureMapping.getBlockTexture(Blocks.WHITE_CONCRETE), TextureMapping.getBlockTexture(Blocks.GRAY_CONCRETE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenTiles(SFFBlocks.WHITE_BLACK_KITCHEN_TILES.get(), TextureMapping.getBlockTexture(Blocks.WHITE_CONCRETE), TextureMapping.getBlockTexture(Blocks.BLACK_CONCRETE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenTiles(SFFBlocks.WHITE_BROWN_KITCHEN_TILES.get(), TextureMapping.getBlockTexture(Blocks.WHITE_CONCRETE), TextureMapping.getBlockTexture(Blocks.BROWN_CONCRETE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenTiles(SFFBlocks.WHITE_RED_KITCHEN_TILES.get(), TextureMapping.getBlockTexture(Blocks.WHITE_CONCRETE), TextureMapping.getBlockTexture(Blocks.RED_CONCRETE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenTiles(SFFBlocks.WHITE_ORANGE_KITCHEN_TILES.get(), TextureMapping.getBlockTexture(Blocks.WHITE_CONCRETE), TextureMapping.getBlockTexture(Blocks.ORANGE_CONCRETE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenTiles(SFFBlocks.WHITE_YELLOW_KITCHEN_TILES.get(), TextureMapping.getBlockTexture(Blocks.WHITE_CONCRETE), TextureMapping.getBlockTexture(Blocks.YELLOW_CONCRETE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenTiles(SFFBlocks.WHITE_LIME_KITCHEN_TILES.get(), TextureMapping.getBlockTexture(Blocks.WHITE_CONCRETE), TextureMapping.getBlockTexture(Blocks.LIME_CONCRETE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenTiles(SFFBlocks.WHITE_GREEN_KITCHEN_TILES.get(), TextureMapping.getBlockTexture(Blocks.WHITE_CONCRETE), TextureMapping.getBlockTexture(Blocks.GREEN_CONCRETE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenTiles(SFFBlocks.WHITE_CYAN_KITCHEN_TILES.get(), TextureMapping.getBlockTexture(Blocks.WHITE_CONCRETE), TextureMapping.getBlockTexture(Blocks.CYAN_CONCRETE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenTiles(SFFBlocks.WHITE_LIGHT_BLUE_KITCHEN_TILES.get(), TextureMapping.getBlockTexture(Blocks.WHITE_CONCRETE), TextureMapping.getBlockTexture(Blocks.LIGHT_BLUE_CONCRETE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenTiles(SFFBlocks.WHITE_BLUE_KITCHEN_TILES.get(), TextureMapping.getBlockTexture(Blocks.WHITE_CONCRETE), TextureMapping.getBlockTexture(Blocks.BLUE_CONCRETE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenTiles(SFFBlocks.WHITE_PURPLE_KITCHEN_TILES.get(), TextureMapping.getBlockTexture(Blocks.WHITE_CONCRETE), TextureMapping.getBlockTexture(Blocks.PURPLE_CONCRETE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenTiles(SFFBlocks.WHITE_MAGENTA_KITCHEN_TILES.get(), TextureMapping.getBlockTexture(Blocks.WHITE_CONCRETE), TextureMapping.getBlockTexture(Blocks.MAGENTA_CONCRETE), blockModels));
        blockModels.blockStateOutput.accept(createKitchenTiles(SFFBlocks.WHITE_PINK_KITCHEN_TILES.get(), TextureMapping.getBlockTexture(Blocks.WHITE_CONCRETE), TextureMapping.getBlockTexture(Blocks.PINK_CONCRETE), blockModels));
    }

    private MultiVariantGenerator createCrate(Block block, ResourceLocation particle, ResourceLocation planks, ResourceLocation log, BlockModelGenerators blockModels) {
        ResourceLocation model = ModelTemplates.CRATE.create(block, new TextureMapping().put(TextureSlot.PARTICLE, particle).put(TextureSlots.PLANKS, planks).put(TextureSlots.LOG, log), blockModels.modelOutput);
        return MultiVariantGenerator.multiVariant(block, Variant.variant().with(VariantProperties.MODEL, model), Variant.variant().with(VariantProperties.MODEL, model).with(VariantProperties.Y_ROT, VariantProperties.Rotation.R90));
    }

    private MultiVariantGenerator createKitchenTiles(Block block, ResourceLocation tile_base, ResourceLocation tile_2, BlockModelGenerators blockModels) {
        return BlockModelGenerators.createSimpleBlock(block, ModelTemplates.KITCHEN_TILES.create(block, new TextureMapping().put(TextureSlot.PARTICLE, tile_base).put(TextureSlots.TILE_BASE, tile_base).put(TextureSlots.TILE_2, tile_2), blockModels.modelOutput));

    }

    private MultiVariantGenerator createKitchenCounter(Block block, ResourceLocation counter, ResourceLocation top, BlockModelGenerators blockModels) {
        ResourceLocation model = ModelTemplates.KITCHEN_COUNTER.create(block, new TextureMapping().put(TextureSlot.PARTICLE, counter).put(TextureSlots.COUNTER, counter).put(TextureSlots.TOP, top), blockModels.modelOutput);
        return MultiVariantGenerator.multiVariant(block, Variant.variant().with(VariantProperties.MODEL, model)).with(BlockModelGenerators.createHorizontalFacingDispatch());
    }

    private MultiVariantGenerator createKitchenCounterInnerCorner(Block block, ResourceLocation counter, ResourceLocation top, BlockModelGenerators blockModels) {
        ResourceLocation model = ModelTemplates.KITCHEN_COUNTER_INNER_CORNER.create(block, new TextureMapping().put(TextureSlot.PARTICLE, counter).put(TextureSlots.COUNTER, counter).put(TextureSlots.TOP, top), blockModels.modelOutput);
        return MultiVariantGenerator.multiVariant(block, Variant.variant().with(VariantProperties.MODEL, model)).with(BlockModelGenerators.createHorizontalFacingDispatch());
    }

    private MultiVariantGenerator createKitchenCounterOuterCorner(Block block, ResourceLocation counter, ResourceLocation top, BlockModelGenerators blockModels) {
        ResourceLocation model = ModelTemplates.KITCHEN_COUNTER_OUTER_CORNER.create(block, new TextureMapping().put(TextureSlot.PARTICLE, counter).put(TextureSlots.COUNTER, counter).put(TextureSlots.TOP, top), blockModels.modelOutput);
        return MultiVariantGenerator.multiVariant(block, Variant.variant().with(VariantProperties.MODEL, model)).with(BlockModelGenerators.createHorizontalFacingDispatch());
    }

    private MultiVariantGenerator createOpenKitchenCounter(Block block, ResourceLocation counter, ResourceLocation top, BlockModelGenerators blockModels) {
        ResourceLocation model = ModelTemplates.KITCHEN_COUNTER_OPEN.create(block, new TextureMapping().put(TextureSlot.PARTICLE, counter).put(TextureSlots.COUNTER, counter).put(TextureSlots.TOP, top), blockModels.modelOutput);
        return MultiVariantGenerator.multiVariant(block, Variant.variant().with(VariantProperties.MODEL, model)).with(BlockModelGenerators.createHorizontalFacingDispatch());
    }

    private MultiVariantGenerator createKitchenCounterDoor(Block block, ResourceLocation counter, ResourceLocation top, ResourceLocation door, BlockModelGenerators blockModels) {
        ResourceLocation closed = ModelTemplates.KITCHEN_COUNTER_DOOR.create(block, new TextureMapping().put(TextureSlot.PARTICLE, counter).put(TextureSlots.COUNTER, counter).put(TextureSlots.TOP, top).put(TextureSlots.DOOR, door), blockModels.modelOutput);
        ResourceLocation open = ModelTemplates.KITCHEN_COUNTER_DOOR_OPEN.create(block, new TextureMapping().put(TextureSlot.PARTICLE, counter).put(TextureSlots.COUNTER, counter).put(TextureSlots.TOP, top).put(TextureSlots.DOOR, door), blockModels.modelOutput);
        ResourceLocation closed_mirrored = ModelTemplates.KITCHEN_COUNTER_DOOR_MIRRORED.create(block, new TextureMapping().put(TextureSlot.PARTICLE, counter).put(TextureSlots.COUNTER, counter).put(TextureSlots.TOP, top).put(TextureSlots.DOOR, door), blockModels.modelOutput);
        ResourceLocation open_mirrored = ModelTemplates.KITCHEN_COUNTER_DOOR_MIRRORED_OPEN.create(block, new TextureMapping().put(TextureSlot.PARTICLE, counter).put(TextureSlots.COUNTER, counter).put(TextureSlots.TOP, top).put(TextureSlots.DOOR, door), blockModels.modelOutput);
        return MultiVariantGenerator.multiVariant(block, Variant.variant().with(VariantProperties.MODEL, closed)).with(
                PropertyDispatch.properties(KitchenCounterContainerDoorBlock.HINGE, KitchenCounterContainerDoorBlock.OPEN)
                        .select(DoorHingeSide.LEFT, false, Variant.variant().with(VariantProperties.MODEL, closed_mirrored))
                        .select(DoorHingeSide.LEFT, true, Variant.variant().with(VariantProperties.MODEL, open_mirrored))
                        .select(DoorHingeSide.RIGHT, false, Variant.variant().with(VariantProperties.MODEL, closed))
                        .select(DoorHingeSide.RIGHT, true, Variant.variant().with(VariantProperties.MODEL, open))
        ).with(BlockModelGenerators.createHorizontalFacingDispatch());
    }

    private MultiVariantGenerator createKitchenCounterGlassDoor(Block block, ResourceLocation counter, ResourceLocation top, ResourceLocation door, BlockModelGenerators blockModels) {
        ResourceLocation closed = ModelTemplates.KITCHEN_COUNTER_GLASS_DOOR.create(block, new TextureMapping().put(TextureSlot.PARTICLE, counter).put(TextureSlots.COUNTER, counter).put(TextureSlots.TOP, top).put(TextureSlots.DOOR, door).put(TextureSlots.GLASS, TextureMapping.getBlockTexture(Blocks.GLASS)), blockModels.modelOutput);
        ResourceLocation open = ModelTemplates.KITCHEN_COUNTER_GLASS_DOOR_OPEN.create(block, new TextureMapping().put(TextureSlot.PARTICLE, counter).put(TextureSlots.COUNTER, counter).put(TextureSlots.TOP, top).put(TextureSlots.DOOR, door).put(TextureSlots.GLASS, TextureMapping.getBlockTexture(Blocks.GLASS)), blockModels.modelOutput);
        ResourceLocation closed_mirrored = ModelTemplates.KITCHEN_COUNTER_GLASS_DOOR_MIRRORED.create(block, new TextureMapping().put(TextureSlot.PARTICLE, counter).put(TextureSlots.COUNTER, counter).put(TextureSlots.TOP, top).put(TextureSlots.DOOR, door).put(TextureSlots.GLASS, TextureMapping.getBlockTexture(Blocks.GLASS)), blockModels.modelOutput);
        ResourceLocation open_mirrored = ModelTemplates.KITCHEN_COUNTER_GLASS_DOOR_MIRRORED_OPEN.create(block, new TextureMapping().put(TextureSlot.PARTICLE, counter).put(TextureSlots.COUNTER, counter).put(TextureSlots.TOP, top).put(TextureSlots.DOOR, door).put(TextureSlots.GLASS, TextureMapping.getBlockTexture(Blocks.GLASS)), blockModels.modelOutput);
        return MultiVariantGenerator.multiVariant(block, Variant.variant().with(VariantProperties.MODEL, closed)).with(
                PropertyDispatch.properties(KitchenCounterContainerDoorBlock.HINGE, KitchenCounterContainerDoorBlock.OPEN)
                        .select(DoorHingeSide.LEFT, false, Variant.variant().with(VariantProperties.MODEL, closed_mirrored))
                        .select(DoorHingeSide.LEFT, true, Variant.variant().with(VariantProperties.MODEL, open_mirrored))
                        .select(DoorHingeSide.RIGHT, false, Variant.variant().with(VariantProperties.MODEL, closed))
                        .select(DoorHingeSide.RIGHT, true, Variant.variant().with(VariantProperties.MODEL, open))
        ).with(BlockModelGenerators.createHorizontalFacingDispatch());
    }

    private MultiVariantGenerator createKitchenCounterSmallDrawer(Block block, ResourceLocation counter, ResourceLocation top, ResourceLocation door, BlockModelGenerators blockModels) {
        ResourceLocation closed = ModelTemplates.KITCHEN_COUNTER_SMALL_DRAWER.create(block, new TextureMapping().put(TextureSlot.PARTICLE, counter).put(TextureSlots.COUNTER, counter).put(TextureSlots.TOP, top).put(TextureSlots.DOOR, door), blockModels.modelOutput);
        ResourceLocation open = ModelTemplates.KITCHEN_COUNTER_SMALL_DRAWER_OPEN.create(block, new TextureMapping().put(TextureSlot.PARTICLE, counter).put(TextureSlots.COUNTER, counter).put(TextureSlots.TOP, top).put(TextureSlots.DOOR, door), blockModels.modelOutput);
        return MultiVariantGenerator.multiVariant(block, Variant.variant().with(VariantProperties.MODEL, closed)).with(
                PropertyDispatch.property(KitchenCounterContainerDrawerBlock.OPEN)
                        .select(false, Variant.variant().with(VariantProperties.MODEL, closed))
                        .select(true, Variant.variant().with(VariantProperties.MODEL, open))
        ).with(BlockModelGenerators.createHorizontalFacingDispatch());
    }

    private MultiVariantGenerator createKitchenCounterBigDrawer(Block block, ResourceLocation counter, ResourceLocation top, ResourceLocation door, BlockModelGenerators blockModels) {
        ResourceLocation closed = ModelTemplates.KITCHEN_COUNTER_BIG_DRAWER.create(block, new TextureMapping().put(TextureSlot.PARTICLE, counter).put(TextureSlots.COUNTER, counter).put(TextureSlots.TOP, top).put(TextureSlots.DOOR, door), blockModels.modelOutput);
        ResourceLocation open = ModelTemplates.KITCHEN_COUNTER_BIG_DRAWER_OPEN.create(block, new TextureMapping().put(TextureSlot.PARTICLE, counter).put(TextureSlots.COUNTER, counter).put(TextureSlots.TOP, top).put(TextureSlots.DOOR, door), blockModels.modelOutput);
        return MultiVariantGenerator.multiVariant(block, Variant.variant().with(VariantProperties.MODEL, closed)).with(
                PropertyDispatch.property(KitchenCounterContainerDrawerBlock.OPEN)
                        .select(false, Variant.variant().with(VariantProperties.MODEL, closed))
                        .select(true, Variant.variant().with(VariantProperties.MODEL, open))
        ).with(BlockModelGenerators.createHorizontalFacingDispatch());
    }

    private MultiVariantGenerator createKitchenCounterSink(Block block, ResourceLocation counter, ResourceLocation top, BlockModelGenerators blockModels) {
        ResourceLocation empty = ModelTemplates.KITCHEN_COUNTER_SINK_EMPTY.create(block, new TextureMapping().put(TextureSlot.PARTICLE, counter).put(TextureSlots.COUNTER, counter).put(TextureSlots.TOP, top).put(TextureSlots.FAUCET, TextureMapping.getBlockTexture(Blocks.ANVIL)), blockModels.modelOutput);
        ResourceLocation empty_on = ModelTemplates.KITCHEN_COUNTER_SINK_EMPTY_ON.create(block, new TextureMapping().put(TextureSlot.PARTICLE, counter).put(TextureSlots.COUNTER, counter).put(TextureSlots.TOP, top).put(TextureSlots.FAUCET, TextureMapping.getBlockTexture(Blocks.ANVIL)).put(TextureSlots.STREAM, TextureMapping.getBlockTexture(Blocks.WATER).withSuffix("_flow")), blockModels.modelOutput);
        ResourceLocation level_1 = ModelTemplates.KITCHEN_COUNTER_SINK_LEVEL_1.create(block, new TextureMapping().put(TextureSlot.PARTICLE, counter).put(TextureSlots.COUNTER, counter).put(TextureSlots.TOP, top).put(TextureSlots.FAUCET, TextureMapping.getBlockTexture(Blocks.ANVIL)).put(TextureSlots.WATER, TextureMapping.getBlockTexture(Blocks.WATER).withSuffix("_still")), blockModels.modelOutput);
        ResourceLocation level_1_on = ModelTemplates.KITCHEN_COUNTER_SINK_LEVEL_1_ON.create(block, new TextureMapping().put(TextureSlot.PARTICLE, counter).put(TextureSlots.COUNTER, counter).put(TextureSlots.TOP, top).put(TextureSlots.FAUCET, TextureMapping.getBlockTexture(Blocks.ANVIL)).put(TextureSlots.WATER, TextureMapping.getBlockTexture(Blocks.WATER).withSuffix("_still")).put(TextureSlots.STREAM, TextureMapping.getBlockTexture(Blocks.WATER).withSuffix("_flow")), blockModels.modelOutput);
        ResourceLocation level_2 = ModelTemplates.KITCHEN_COUNTER_SINK_LEVEL_2.create(block, new TextureMapping().put(TextureSlot.PARTICLE, counter).put(TextureSlots.COUNTER, counter).put(TextureSlots.TOP, top).put(TextureSlots.FAUCET, TextureMapping.getBlockTexture(Blocks.ANVIL)).put(TextureSlots.WATER, TextureMapping.getBlockTexture(Blocks.WATER).withSuffix("_still")), blockModels.modelOutput);
        ResourceLocation level_2_on = ModelTemplates.KITCHEN_COUNTER_SINK_LEVEL_2_ON.create(block, new TextureMapping().put(TextureSlot.PARTICLE, counter).put(TextureSlots.COUNTER, counter).put(TextureSlots.TOP, top).put(TextureSlots.FAUCET, TextureMapping.getBlockTexture(Blocks.ANVIL)).put(TextureSlots.WATER, TextureMapping.getBlockTexture(Blocks.WATER).withSuffix("_still")).put(TextureSlots.STREAM, TextureMapping.getBlockTexture(Blocks.WATER).withSuffix("_flow")), blockModels.modelOutput);
        ResourceLocation level_3 = ModelTemplates.KITCHEN_COUNTER_SINK_LEVEL_3.create(block, new TextureMapping().put(TextureSlot.PARTICLE, counter).put(TextureSlots.COUNTER, counter).put(TextureSlots.TOP, top).put(TextureSlots.FAUCET, TextureMapping.getBlockTexture(Blocks.ANVIL)).put(TextureSlots.WATER, TextureMapping.getBlockTexture(Blocks.WATER).withSuffix("_still")), blockModels.modelOutput);
        ResourceLocation level_3_on = ModelTemplates.KITCHEN_COUNTER_SINK_LEVEL_3_ON.create(block, new TextureMapping().put(TextureSlot.PARTICLE, counter).put(TextureSlots.COUNTER, counter).put(TextureSlots.TOP, top).put(TextureSlots.FAUCET, TextureMapping.getBlockTexture(Blocks.ANVIL)).put(TextureSlots.WATER, TextureMapping.getBlockTexture(Blocks.WATER).withSuffix("_still")).put(TextureSlots.STREAM, TextureMapping.getBlockTexture(Blocks.WATER).withSuffix("_flow")), blockModels.modelOutput);
        return MultiVariantGenerator.multiVariant(block, Variant.variant().with(VariantProperties.MODEL, empty)).with(
                PropertyDispatch.properties(KitchenCounterSinkBlock.ON, KitchenCounterSinkBlock.LEVEL)
                        .select(true, 0, Variant.variant().with(VariantProperties.MODEL, empty_on))
                        .select(false, 0, Variant.variant().with(VariantProperties.MODEL, empty))
                        .select(true, 1, Variant.variant().with(VariantProperties.MODEL, level_1_on))
                        .select(false, 1, Variant.variant().with(VariantProperties.MODEL, level_1))
                        .select(true, 2, Variant.variant().with(VariantProperties.MODEL, level_2_on))
                        .select(false, 2, Variant.variant().with(VariantProperties.MODEL, level_2))
                        .select(true, 3, Variant.variant().with(VariantProperties.MODEL, level_3_on))
                        .select(false, 3, Variant.variant().with(VariantProperties.MODEL, level_3))
        ).with(BlockModelGenerators.createHorizontalFacingDispatch());
    }

    private MultiVariantGenerator createKitchenCounterSmoker(Block block, ResourceLocation counter, ResourceLocation top, ResourceLocation furnace, ResourceLocation furnace_lit, BlockModelGenerators blockModels) {
        ResourceLocation unlit = ModelTemplates.KITCHEN_COUNTER_SMOKER.create(block, new TextureMapping().put(TextureSlot.PARTICLE, counter).put(TextureSlots.COUNTER, counter).put(TextureSlots.TOP, top).put(TextureSlots.FURNACE, furnace), blockModels.modelOutput);
        ResourceLocation lit = ModelTemplates.KITCHEN_COUNTER_SMOKER_LIT.create(block, new TextureMapping().put(TextureSlot.PARTICLE, counter).put(TextureSlots.COUNTER, counter).put(TextureSlots.TOP, top).put(TextureSlots.FURNACE, furnace_lit), blockModels.modelOutput);
        return MultiVariantGenerator.multiVariant(block, Variant.variant().with(VariantProperties.MODEL, unlit)).with(
                PropertyDispatch.property(SmokerBlock.LIT)
                        .select(false, Variant.variant().with(VariantProperties.MODEL, unlit))
                        .select(true, Variant.variant().with(VariantProperties.MODEL, lit))
        ).with(BlockModelGenerators.createHorizontalFacingDispatch());
    }

    private MultiVariantGenerator createKitchenCabinet(Block block, ResourceLocation cabinet, BlockModelGenerators blockModels) {
        ResourceLocation model = ModelTemplates.KITCHEN_CABINET.create(block, new TextureMapping().put(TextureSlot.PARTICLE, cabinet).put(TextureSlots.CABINET, cabinet), blockModels.modelOutput);
        return MultiVariantGenerator.multiVariant(block, Variant.variant().with(VariantProperties.MODEL, model)).with(BlockModelGenerators.createHorizontalFacingDispatch());
    }

    private MultiVariantGenerator createKitchenCabinetInnerCorner(Block block, ResourceLocation cabinet, BlockModelGenerators blockModels) {
        ResourceLocation model = ModelTemplates.KITCHEN_CABINET_INNER_CORNER.create(block, new TextureMapping().put(TextureSlot.PARTICLE, cabinet).put(TextureSlots.CABINET, cabinet), blockModels.modelOutput);
        return MultiVariantGenerator.multiVariant(block, Variant.variant().with(VariantProperties.MODEL, model)).with(BlockModelGenerators.createHorizontalFacingDispatch());
    }

    private MultiVariantGenerator createKitchenCabinetOuterCorner(Block block, ResourceLocation cabinet, BlockModelGenerators blockModels) {
        ResourceLocation model = ModelTemplates.KITCHEN_CABINET_OUTER_CORNER.create(block, new TextureMapping().put(TextureSlot.PARTICLE, cabinet).put(TextureSlots.CABINET, cabinet), blockModels.modelOutput);
        return MultiVariantGenerator.multiVariant(block, Variant.variant().with(VariantProperties.MODEL, model)).with(BlockModelGenerators.createHorizontalFacingDispatch());
    }

    private MultiVariantGenerator createOpenKitchenCabinet(Block block, ResourceLocation cabinet, BlockModelGenerators blockModels) {
        ResourceLocation model = ModelTemplates.KITCHEN_CABINET_OPEN.create(block, new TextureMapping().put(TextureSlot.PARTICLE, cabinet).put(TextureSlots.CABINET, cabinet), blockModels.modelOutput);
        return MultiVariantGenerator.multiVariant(block, Variant.variant().with(VariantProperties.MODEL, model)).with(BlockModelGenerators.createHorizontalFacingDispatch());
    }

    private MultiVariantGenerator createKitchenCabinetDoor(Block block, ResourceLocation cabinet, ResourceLocation door, ResourceLocation handle, BlockModelGenerators blockModels) {
        ResourceLocation closed = ModelTemplates.KITCHEN_CABINET_DOOR.create(block, new TextureMapping().put(TextureSlot.PARTICLE, cabinet).put(TextureSlots.CABINET, cabinet).put(TextureSlots.DOOR, door).put(TextureSlots.HANDLE, handle), blockModels.modelOutput);
        ResourceLocation open = ModelTemplates.KITCHEN_CABINET_DOOR_OPEN.create(block, new TextureMapping().put(TextureSlot.PARTICLE, cabinet).put(TextureSlots.CABINET, cabinet).put(TextureSlots.DOOR, door).put(TextureSlots.HANDLE, handle), blockModels.modelOutput);
        return MultiVariantGenerator.multiVariant(block, Variant.variant().with(VariantProperties.MODEL, closed)).with(
                PropertyDispatch.property(KitchenCabinetContainerDoorBlock.OPEN)
                        .select(false, Variant.variant().with(VariantProperties.MODEL, closed))
                        .select(true, Variant.variant().with(VariantProperties.MODEL, open))
        ).with(BlockModelGenerators.createHorizontalFacingDispatch());
    }

    private MultiVariantGenerator createKitchenCabinetGlassDoor(Block block, ResourceLocation cabinet, ResourceLocation door, ResourceLocation handle, BlockModelGenerators blockModels) {
        ResourceLocation closed = ModelTemplates.KITCHEN_CABINET_GLASS_DOOR.create(block, new TextureMapping().put(TextureSlot.PARTICLE, cabinet).put(TextureSlots.CABINET, cabinet).put(TextureSlots.DOOR, door).put(TextureSlots.HANDLE, handle).put(TextureSlots.GLASS, TextureMapping.getBlockTexture(Blocks.GLASS)), blockModels.modelOutput);
        ResourceLocation open = ModelTemplates.KITCHEN_CABINET_GLASS_DOOR_OPEN.create(block, new TextureMapping().put(TextureSlot.PARTICLE, cabinet).put(TextureSlots.CABINET, cabinet).put(TextureSlots.DOOR, door).put(TextureSlots.HANDLE, handle).put(TextureSlots.GLASS, TextureMapping.getBlockTexture(Blocks.GLASS)), blockModels.modelOutput);
        return MultiVariantGenerator.multiVariant(block, Variant.variant().with(VariantProperties.MODEL, closed)).with(
                PropertyDispatch.property(KitchenCabinetContainerDoorBlock.OPEN)
                        .select(false, Variant.variant().with(VariantProperties.MODEL, closed))
                        .select(true, Variant.variant().with(VariantProperties.MODEL, open))
        ).with(BlockModelGenerators.createHorizontalFacingDispatch());
    }

    private MultiVariantGenerator createKitchenCabinetSidewaysDoor(Block block, ResourceLocation cabinet, ResourceLocation door, ResourceLocation handle, BlockModelGenerators blockModels) {
        ResourceLocation closed = ModelTemplates.KITCHEN_CABINET_DOOR_SIDEWAYS.create(block, new TextureMapping().put(TextureSlot.PARTICLE, cabinet).put(TextureSlots.CABINET, cabinet).put(TextureSlots.DOOR, door).put(TextureSlots.HANDLE, handle), blockModels.modelOutput);
        ResourceLocation open = ModelTemplates.KITCHEN_CABINET_DOOR_SIDEWAYS_OPEN.create(block, new TextureMapping().put(TextureSlot.PARTICLE, cabinet).put(TextureSlots.CABINET, cabinet).put(TextureSlots.DOOR, door).put(TextureSlots.HANDLE, handle), blockModels.modelOutput);
        ResourceLocation closed_mirrored = ModelTemplates.KITCHEN_CABINET_DOOR_SIDEWAYS_MIRRORED.create(block, new TextureMapping().put(TextureSlot.PARTICLE, cabinet).put(TextureSlots.CABINET, cabinet).put(TextureSlots.DOOR, door).put(TextureSlots.HANDLE, handle), blockModels.modelOutput);
        ResourceLocation open_mirrored = ModelTemplates.KITCHEN_CABINET_DOOR_SIDEWAYS_MIRRORED_OPEN.create(block, new TextureMapping().put(TextureSlot.PARTICLE, cabinet).put(TextureSlots.CABINET, cabinet).put(TextureSlots.DOOR, door).put(TextureSlots.HANDLE, handle), blockModels.modelOutput);
        return MultiVariantGenerator.multiVariant(block, Variant.variant().with(VariantProperties.MODEL, closed)).with(
                PropertyDispatch.properties(KitchenCabinetContainerSidewaysDoorBlock.HINGE, KitchenCabinetContainerSidewaysDoorBlock.OPEN)
                        .select(DoorHingeSide.LEFT, false, Variant.variant().with(VariantProperties.MODEL, closed_mirrored))
                        .select(DoorHingeSide.LEFT, true, Variant.variant().with(VariantProperties.MODEL, open_mirrored))
                        .select(DoorHingeSide.RIGHT, false, Variant.variant().with(VariantProperties.MODEL, closed))
                        .select(DoorHingeSide.RIGHT, true, Variant.variant().with(VariantProperties.MODEL, open))
        ).with(BlockModelGenerators.createHorizontalFacingDispatch());
    }

    private MultiVariantGenerator createKitchenCabinetSidewaysGlassDoor(Block block, ResourceLocation cabinet, ResourceLocation door, ResourceLocation handle, BlockModelGenerators blockModels) {
        ResourceLocation closed = ModelTemplates.KITCHEN_CABINET_GLASS_DOOR_SIDEWAYS.create(block, new TextureMapping().put(TextureSlot.PARTICLE, cabinet).put(TextureSlots.CABINET, cabinet).put(TextureSlots.DOOR, door).put(TextureSlots.HANDLE, handle).put(TextureSlots.GLASS, TextureMapping.getBlockTexture(Blocks.GLASS)), blockModels.modelOutput);
        ResourceLocation open = ModelTemplates.KITCHEN_CABINET_GLASS_DOOR_SIDEWAYS_OPEN.create(block, new TextureMapping().put(TextureSlot.PARTICLE, cabinet).put(TextureSlots.CABINET, cabinet).put(TextureSlots.DOOR, door).put(TextureSlots.HANDLE, handle).put(TextureSlots.GLASS, TextureMapping.getBlockTexture(Blocks.GLASS)), blockModels.modelOutput);
        ResourceLocation closed_mirrored = ModelTemplates.KITCHEN_CABINET_GLASS_DOOR_SIDEWAYS_MIRRORED.create(block, new TextureMapping().put(TextureSlot.PARTICLE, cabinet).put(TextureSlots.CABINET, cabinet).put(TextureSlots.DOOR, door).put(TextureSlots.HANDLE, handle).put(TextureSlots.GLASS, TextureMapping.getBlockTexture(Blocks.GLASS)), blockModels.modelOutput);
        ResourceLocation open_mirrored = ModelTemplates.KITCHEN_CABINET_GLASS_DOOR_SIDEWAYS_MIRRORED_OPEN.create(block, new TextureMapping().put(TextureSlot.PARTICLE, cabinet).put(TextureSlots.CABINET, cabinet).put(TextureSlots.DOOR, door).put(TextureSlots.HANDLE, handle).put(TextureSlots.GLASS, TextureMapping.getBlockTexture(Blocks.GLASS)), blockModels.modelOutput);
        return MultiVariantGenerator.multiVariant(block, Variant.variant().with(VariantProperties.MODEL, closed)).with(
                PropertyDispatch.properties(KitchenCabinetContainerSidewaysDoorBlock.HINGE, KitchenCabinetContainerSidewaysDoorBlock.OPEN)
                        .select(DoorHingeSide.LEFT, false, Variant.variant().with(VariantProperties.MODEL, closed_mirrored))
                        .select(DoorHingeSide.LEFT, true, Variant.variant().with(VariantProperties.MODEL, open_mirrored))
                        .select(DoorHingeSide.RIGHT, false, Variant.variant().with(VariantProperties.MODEL, closed))
                        .select(DoorHingeSide.RIGHT, true, Variant.variant().with(VariantProperties.MODEL, open))
        ).with(BlockModelGenerators.createHorizontalFacingDispatch());
    }

    private MultiVariantGenerator createKitchenCabinetShelf(Block block, ResourceLocation cabinet, ResourceLocation chain, BlockModelGenerators blockModels) {
        ResourceLocation single = ModelTemplates.KITCHEN_CABINET_SHELF_SINGLE.create(block, new TextureMapping().put(TextureSlot.PARTICLE, cabinet).put(TextureSlots.CABINET, cabinet).put(TextureSlots.CHAIN, chain), blockModels.modelOutput);
        ResourceLocation left = ModelTemplates.KITCHEN_CABINET_SHELF_LEFT.create(block, new TextureMapping().put(TextureSlot.PARTICLE, cabinet).put(TextureSlots.CABINET, cabinet).put(TextureSlots.CHAIN, chain), blockModels.modelOutput);
        ResourceLocation right = ModelTemplates.KITCHEN_CABINET_SHELF_RIGHT.create(block, new TextureMapping().put(TextureSlot.PARTICLE, cabinet).put(TextureSlots.CABINET, cabinet).put(TextureSlots.CHAIN, chain), blockModels.modelOutput);
        ResourceLocation middle = ModelTemplates.KITCHEN_CABINET_SHELF_MIDDLE.create(block, new TextureMapping().put(TextureSlot.PARTICLE, cabinet).put(TextureSlots.CABINET, cabinet).put(TextureSlots.CHAIN, chain), blockModels.modelOutput);
        return MultiVariantGenerator.multiVariant(block, Variant.variant().with(VariantProperties.MODEL, single)).with(
                PropertyDispatch.property(KitchenCabinetShelfBlock.SHAPE)
                        .select(ShelfShape.SINGLE, Variant.variant().with(VariantProperties.MODEL, single))
                        .select(ShelfShape.LEFT, Variant.variant().with(VariantProperties.MODEL, left))
                        .select(ShelfShape.RIGHT, Variant.variant().with(VariantProperties.MODEL, right))
                        .select(ShelfShape.MIDDLE, Variant.variant().with(VariantProperties.MODEL, middle))
        ).with(BlockModelGenerators.createHorizontalFacingDispatch());
    }

    private MultiVariantGenerator createFridge(Block block, ResourceLocation fridge, ResourceLocation bars, ResourceLocation handle, BlockModelGenerators blockModels) {
        ResourceLocation bottom = ModelTemplates.FRIDGE_BOTTOM.create(block, new TextureMapping().put(TextureSlot.PARTICLE, fridge).put(TextureSlots.FRIDGE, fridge).put(TextureSlots.BARS, bars).put(TextureSlots.HANDLE, handle), blockModels.modelOutput);
        ResourceLocation bottom_open = ModelTemplates.FRIDGE_BOTTOM_OPEN.create(block, new TextureMapping().put(TextureSlot.PARTICLE, fridge).put(TextureSlots.FRIDGE, fridge).put(TextureSlots.BARS, bars).put(TextureSlots.HANDLE, handle), blockModels.modelOutput);
        ResourceLocation bottom_mirrored = ModelTemplates.FRIDGE_BOTTOM_MIRRORED.create(block, new TextureMapping().put(TextureSlot.PARTICLE, fridge).put(TextureSlots.FRIDGE, fridge).put(TextureSlots.BARS, bars).put(TextureSlots.HANDLE, handle), blockModels.modelOutput);
        ResourceLocation bottom_mirrored_open = ModelTemplates.FRIDGE_BOTTOM_MIRRORED_OPEN.create(block, new TextureMapping().put(TextureSlot.PARTICLE, fridge).put(TextureSlots.FRIDGE, fridge).put(TextureSlots.BARS, bars).put(TextureSlots.HANDLE, handle), blockModels.modelOutput);
        ResourceLocation top = ModelTemplates.FRIDGE_TOP.create(block, new TextureMapping().put(TextureSlot.PARTICLE, fridge).put(TextureSlots.FRIDGE, fridge).put(TextureSlots.HANDLE, handle), blockModels.modelOutput);
        ResourceLocation top_open = ModelTemplates.FRIDGE_TOP_OPEN.create(block, new TextureMapping().put(TextureSlot.PARTICLE, fridge).put(TextureSlots.FRIDGE, fridge).put(TextureSlots.HANDLE, handle), blockModels.modelOutput);
        ResourceLocation top_mirrored = ModelTemplates.FRIDGE_TOP_MIRRORED.create(block, new TextureMapping().put(TextureSlot.PARTICLE, fridge).put(TextureSlots.FRIDGE, fridge).put(TextureSlots.HANDLE, handle), blockModels.modelOutput);
        ResourceLocation top_mirrored_open = ModelTemplates.FRIDGE_TOP_MIRRORED_OPEN.create(block, new TextureMapping().put(TextureSlot.PARTICLE, fridge).put(TextureSlots.FRIDGE, fridge).put(TextureSlots.HANDLE, handle), blockModels.modelOutput);
        return MultiVariantGenerator.multiVariant(block, Variant.variant().with(VariantProperties.MODEL, bottom)).with(
                PropertyDispatch.properties(KitchenFridgeBlock.HALF, KitchenFridgeBlock.HINGE, KitchenFridgeBlock.OPEN)
                        .select(DoubleBlockHalf.UPPER, DoorHingeSide.LEFT, false, Variant.variant().with(VariantProperties.MODEL, top_mirrored))
                        .select(DoubleBlockHalf.UPPER, DoorHingeSide.LEFT, true, Variant.variant().with(VariantProperties.MODEL, top_mirrored_open))
                        .select(DoubleBlockHalf.UPPER, DoorHingeSide.RIGHT, false, Variant.variant().with(VariantProperties.MODEL, top))
                        .select(DoubleBlockHalf.UPPER, DoorHingeSide.RIGHT, true, Variant.variant().with(VariantProperties.MODEL, top_open))
                        .select(DoubleBlockHalf.LOWER, DoorHingeSide.LEFT, false, Variant.variant().with(VariantProperties.MODEL, bottom_mirrored))
                        .select(DoubleBlockHalf.LOWER, DoorHingeSide.LEFT, true, Variant.variant().with(VariantProperties.MODEL, bottom_mirrored_open))
                        .select(DoubleBlockHalf.LOWER, DoorHingeSide.RIGHT, false, Variant.variant().with(VariantProperties.MODEL, bottom))
                        .select(DoubleBlockHalf.LOWER, DoorHingeSide.RIGHT, true, Variant.variant().with(VariantProperties.MODEL, bottom_open))
        ).with(BlockModelGenerators.createHorizontalFacingDispatch());
    }

    private MultiVariantGenerator createKnifeBlock(Block block, ResourceLocation blockTexture, ResourceLocation stand, BlockModelGenerators blockModels) {
        ResourceLocation model = ModelTemplates.KNIFE_BLOCK.create(block, new TextureMapping().put(TextureSlot.PARTICLE, blockTexture).put(TextureSlots.BLOCK, blockTexture).put(TextureSlots.STAND, stand).put(TextureSlots.HANDLE, TextureMapping.getBlockTexture(Blocks.ANVIL)).put(TextureSlots.KNIFE, TextureMapping.getBlockTexture(Blocks.IRON_BLOCK)), blockModels.modelOutput);
        return MultiVariantGenerator.multiVariant(block, Variant.variant().with(VariantProperties.MODEL, model)).with(BlockModelGenerators.createHorizontalFacingDispatch());
    }

    private MultiVariantGenerator createChairBlock(Block block, ResourceLocation chair, ResourceLocation decoration, ResourceLocation wool, BlockModelGenerators blockModels) {
        ResourceLocation model = ModelTemplates.CHAIR.create(block, new TextureMapping().put(TextureSlot.PARTICLE, chair).put(TextureSlots.CHAIR, chair).put(TextureSlots.DECORATION, decoration).put(TextureSlots.WOOL, wool), blockModels.modelOutput);
        return MultiVariantGenerator.multiVariant(block, Variant.variant().with(VariantProperties.MODEL, model)).with(BlockModelGenerators.createHorizontalFacingDispatch());
    }

    private MultiVariantGenerator createTableBlock(Block block, ResourceLocation planks, BlockModelGenerators blockModels) {
        ResourceLocation single = ModelTemplates.TABLE_SINGLE.create(block, new TextureMapping().put(TextureSlot.PARTICLE, planks).put(TextureSlots.PLANKS, planks), blockModels.modelOutput);
        ResourceLocation middle = ModelTemplates.TABLE_MIDDLE.create(block, new TextureMapping().put(TextureSlot.PARTICLE, planks).put(TextureSlots.PLANKS, planks), blockModels.modelOutput);
        ResourceLocation north = ModelTemplates.TABLE_NORTH.create(block, new TextureMapping().put(TextureSlot.PARTICLE, planks).put(TextureSlots.PLANKS, planks), blockModels.modelOutput);
        ResourceLocation east = ModelTemplates.TABLE_EAST.create(block, new TextureMapping().put(TextureSlot.PARTICLE, planks).put(TextureSlots.PLANKS, planks), blockModels.modelOutput);
        ResourceLocation south = ModelTemplates.TABLE_SOUTH.create(block, new TextureMapping().put(TextureSlot.PARTICLE, planks).put(TextureSlots.PLANKS, planks), blockModels.modelOutput);
        ResourceLocation west = ModelTemplates.TABLE_WEST.create(block, new TextureMapping().put(TextureSlot.PARTICLE, planks).put(TextureSlots.PLANKS, planks), blockModels.modelOutput);
        ResourceLocation north_east = ModelTemplates.TABLE_NORTH_EAST.create(block, new TextureMapping().put(TextureSlot.PARTICLE, planks).put(TextureSlots.PLANKS, planks), blockModels.modelOutput);
        ResourceLocation north_west = ModelTemplates.TABLE_NORTH_WEST.create(block, new TextureMapping().put(TextureSlot.PARTICLE, planks).put(TextureSlots.PLANKS, planks), blockModels.modelOutput);
        ResourceLocation south_east = ModelTemplates.TABLE_SOUTH_EAST.create(block, new TextureMapping().put(TextureSlot.PARTICLE, planks).put(TextureSlots.PLANKS, planks), blockModels.modelOutput);
        ResourceLocation south_west = ModelTemplates.TABLE_SOUTH_WEST.create(block, new TextureMapping().put(TextureSlot.PARTICLE, planks).put(TextureSlots.PLANKS, planks), blockModels.modelOutput);
        return MultiVariantGenerator.multiVariant(block, Variant.variant().with(VariantProperties.MODEL, single)).with(
                PropertyDispatch.properties(TableBlock.NORTH, TableBlock.EAST, TableBlock.SOUTH, TableBlock.WEST)
                        .select(false, false, false, false, Variant.variant().with(VariantProperties.MODEL, single))
                        .select(true, true, true, true, Variant.variant().with(VariantProperties.MODEL, middle))
                        .select(true, false, true, false, Variant.variant().with(VariantProperties.MODEL, middle))
                        .select(false, true, false, true, Variant.variant().with(VariantProperties.MODEL, middle))
                        .select(true, false, false, false, Variant.variant().with(VariantProperties.MODEL, south))
                        .select(false, true, false, false, Variant.variant().with(VariantProperties.MODEL, west))
                        .select(false, false, true, false, Variant.variant().with(VariantProperties.MODEL, north))
                        .select(false, false, false, true, Variant.variant().with(VariantProperties.MODEL, east))
                        .select(true, true, false, false, Variant.variant().with(VariantProperties.MODEL, south_west))
                        .select(false, true, true, false, Variant.variant().with(VariantProperties.MODEL, north_west))
                        .select(false, false, true, true, Variant.variant().with(VariantProperties.MODEL, north_east))
                        .select(true, false, false, true, Variant.variant().with(VariantProperties.MODEL, south_east))
                        .select(true, true, true, false, Variant.variant().with(VariantProperties.MODEL, middle))
                        .select(false, true, true, true, Variant.variant().with(VariantProperties.MODEL, middle))
                        .select(true, false, true, true, Variant.variant().with(VariantProperties.MODEL, middle))
                        .select(true, true, false, true, Variant.variant().with(VariantProperties.MODEL, middle))
        );
    }

    private MultiVariantGenerator createCurtainBlock(Block block, ResourceLocation wool, ResourceLocation curtain_rod, BlockModelGenerators blockModels) {
        ResourceLocation small_closed = ModelTemplates.CURTAIN_SMALL_CLOSED.create(block, new TextureMapping().put(TextureSlot.PARTICLE, wool).put(TextureSlots.WOOL, wool).put(TextureSlots.CURTAIN_ROD, curtain_rod), blockModels.modelOutput);
        ResourceLocation small_single_open = ModelTemplates.CURTAIN_SMALL_SINGLE_OPEN.create(block, new TextureMapping().put(TextureSlot.PARTICLE, wool).put(TextureSlots.WOOL, wool).put(TextureSlots.CURTAIN_ROD, curtain_rod), blockModels.modelOutput);
        ResourceLocation small_left_open = ModelTemplates.CURTAIN_SMALL_LEFT_OPEN.create(block, new TextureMapping().put(TextureSlot.PARTICLE, wool).put(TextureSlots.WOOL, wool).put(TextureSlots.CURTAIN_ROD, curtain_rod), blockModels.modelOutput);
        ResourceLocation small_right_open = ModelTemplates.CURTAIN_SMALL_RIGHT_OPEN.create(block, new TextureMapping().put(TextureSlot.PARTICLE, wool).put(TextureSlots.WOOL, wool).put(TextureSlots.CURTAIN_ROD, curtain_rod), blockModels.modelOutput);
        ResourceLocation big_top_middle_open = ModelTemplates.CURTAIN_BIG_TOP_MIDDLE_OPEN.create(block, new TextureMapping().put(TextureSlot.PARTICLE, wool).put(TextureSlots.WOOL, wool).put(TextureSlots.CURTAIN_ROD, curtain_rod), blockModels.modelOutput);
        ResourceLocation big_top_closed = ModelTemplates.CURTAIN_BIG_TOP_CLOSED.create(block, new TextureMapping().put(TextureSlot.PARTICLE, wool).put(TextureSlots.WOOL, wool).put(TextureSlots.CURTAIN_ROD, curtain_rod), blockModels.modelOutput);
        ResourceLocation big_bottom_closed = ModelTemplates.CURTAIN_BIG_BOTTOM_CLOSED.create(block, new TextureMapping().put(TextureSlot.PARTICLE, wool).put(TextureSlots.WOOL, wool).put(TextureSlots.CURTAIN_ROD, curtain_rod), blockModels.modelOutput);
        ResourceLocation big_top_single_open = ModelTemplates.CURTAIN_BIG_TOP_SINGLE_OPEN.create(block, new TextureMapping().put(TextureSlot.PARTICLE, wool).put(TextureSlots.WOOL, wool).put(TextureSlots.CURTAIN_ROD, curtain_rod), blockModels.modelOutput);
        ResourceLocation big_top_right_open = ModelTemplates.CURTAIN_BIG_TOP_RIGHT_OPEN.create(block, new TextureMapping().put(TextureSlot.PARTICLE, wool).put(TextureSlots.WOOL, wool).put(TextureSlots.CURTAIN_ROD, curtain_rod), blockModels.modelOutput);
        ResourceLocation big_top_left_open = ModelTemplates.CURTAIN_BIG_TOP_LEFT_OPEN.create(block, new TextureMapping().put(TextureSlot.PARTICLE, wool).put(TextureSlots.WOOL, wool).put(TextureSlots.CURTAIN_ROD, curtain_rod), blockModels.modelOutput);
        ResourceLocation big_bottom_single_open = ModelTemplates.CURTAIN_BIG_BOTTOM_SINGLE_OPEN.create(block, new TextureMapping().put(TextureSlot.PARTICLE, wool).put(TextureSlots.WOOL, wool).put(TextureSlots.CURTAIN_ROD, curtain_rod), blockModels.modelOutput);
        ResourceLocation big_bottom_right_open = ModelTemplates.CURTAIN_BIG_BOTTOM_RIGHT_OPEN.create(block, new TextureMapping().put(TextureSlot.PARTICLE, wool).put(TextureSlots.WOOL, wool).put(TextureSlots.CURTAIN_ROD, curtain_rod), blockModels.modelOutput);
        ResourceLocation big_bottom_left_open = ModelTemplates.CURTAIN_BIG_BOTTOM_LEFT_OPEN.create(block, new TextureMapping().put(TextureSlot.PARTICLE, wool).put(TextureSlots.WOOL, wool).put(TextureSlots.CURTAIN_ROD, curtain_rod), blockModels.modelOutput);
        ResourceLocation big_bottom_middle_open = ModelTemplates.CURTAIN_BIG_BOTTOM_MIDDLE_OPEN.create(block, new TextureMapping().put(TextureSlot.PARTICLE, wool).put(TextureSlots.WOOL, wool).put(TextureSlots.CURTAIN_ROD, curtain_rod), blockModels.modelOutput);
        return MultiVariantGenerator.multiVariant(block, Variant.variant().with(VariantProperties.MODEL, small_closed)).with(
                PropertyDispatch.properties(CurtainBlock.CURTAIN_SHAPE, CurtainBlock.LEFT, CurtainBlock.RIGHT, CurtainBlock.OPEN)
                        .select(CurtainShape.SINGLE, false, false, false, Variant.variant().with(VariantProperties.MODEL, small_closed))
                        .select(CurtainShape.SINGLE, true, false, false, Variant.variant().with(VariantProperties.MODEL, small_closed))
                        .select(CurtainShape.SINGLE, false, true, false, Variant.variant().with(VariantProperties.MODEL, small_closed))
                        .select(CurtainShape.SINGLE, true, true, false, Variant.variant().with(VariantProperties.MODEL, small_closed))
                        .select(CurtainShape.SINGLE, false, false, true, Variant.variant().with(VariantProperties.MODEL, small_single_open))
                        .select(CurtainShape.SINGLE, false, true, true, Variant.variant().with(VariantProperties.MODEL, small_right_open))
                        .select(CurtainShape.SINGLE, true, false, true, Variant.variant().with(VariantProperties.MODEL, small_left_open))
                        .select(CurtainShape.SINGLE, true, true, true, Variant.variant().with(VariantProperties.MODEL, big_top_middle_open))

                        .select(CurtainShape.TOP, false, false, false, Variant.variant().with(VariantProperties.MODEL, big_top_closed))
                        .select(CurtainShape.TOP, true, false, false, Variant.variant().with(VariantProperties.MODEL, big_top_closed))
                        .select(CurtainShape.TOP, false, true, false, Variant.variant().with(VariantProperties.MODEL, big_top_closed))
                        .select(CurtainShape.TOP, true, true, false, Variant.variant().with(VariantProperties.MODEL, big_top_closed))
                        .select(CurtainShape.TOP, false, false, true, Variant.variant().with(VariantProperties.MODEL, big_top_single_open))
                        .select(CurtainShape.TOP, true, false, true, Variant.variant().with(VariantProperties.MODEL, big_top_left_open))
                        .select(CurtainShape.TOP, false, true, true, Variant.variant().with(VariantProperties.MODEL, big_top_right_open))
                        .select(CurtainShape.TOP, true, true, true, Variant.variant().with(VariantProperties.MODEL, big_top_middle_open))

                        .select(CurtainShape.BOTTOM, false, false, false, Variant.variant().with(VariantProperties.MODEL, big_bottom_closed))
                        .select(CurtainShape.BOTTOM, true, false, false, Variant.variant().with(VariantProperties.MODEL, big_bottom_closed))
                        .select(CurtainShape.BOTTOM, false, true, false, Variant.variant().with(VariantProperties.MODEL, big_bottom_closed))
                        .select(CurtainShape.BOTTOM, true, true, false, Variant.variant().with(VariantProperties.MODEL, big_bottom_closed))
                        .select(CurtainShape.BOTTOM, false, false, true, Variant.variant().with(VariantProperties.MODEL, big_bottom_single_open))
                        .select(CurtainShape.BOTTOM, true, false, true, Variant.variant().with(VariantProperties.MODEL, big_bottom_left_open))
                        .select(CurtainShape.BOTTOM, false, true, true, Variant.variant().with(VariantProperties.MODEL, big_bottom_right_open))
                        .select(CurtainShape.BOTTOM, true, true, true, Variant.variant().with(VariantProperties.MODEL, big_bottom_middle_open))
        ).with(BlockModelGenerators.createHorizontalFacingDispatch());
    }

    private void registerBasicBlockModel(ItemModelOutput output, Block block, String suffix) {
        output.accept(block.asItem(), ItemModelUtils.plainModel(ModelLocationUtils.getModelLocation(block).withSuffix(suffix)));
    }

    private void registerBasicBlockModel(ItemModelOutput output, Block block) {
        output.accept(block.asItem(), ItemModelUtils.plainModel(ModelLocationUtils.getModelLocation(block)));
    }

    @Override
    protected Stream<? extends Holder<Block>> getKnownBlocks() {
        return BuiltInRegistries.BLOCK.listElements().filter((holder) -> {
            return false;
        });
    }

    @Override
    protected Stream<? extends Holder<Item>> getKnownItems() {
        return BuiltInRegistries.ITEM.listElements().filter((holder) -> {
            return false;
        });
    }

    public static class TextureSlots {
        public static final TextureSlot BLOCK = TextureSlot.create("block");
        public static final TextureSlot STAND = TextureSlot.create("stand");
        public static final TextureSlot PLANKS = TextureSlot.create("planks");
        public static final TextureSlot CHAIR = TextureSlot.create("chair");
        public static final TextureSlot LOG = TextureSlot.create("log");
        public static final TextureSlot COUNTER = TextureSlot.create("counter");
        public static final TextureSlot CABINET = TextureSlot.create("cabinet");
        public static final TextureSlot FRIDGE = TextureSlot.create("fridge");
        public static final TextureSlot TOP = TextureSlot.create("top");
        public static final TextureSlot WOOL = TextureSlot.create("wool");
        public static final TextureSlot CURTAIN_ROD = TextureSlot.create("curtain_rod");
        public static final TextureSlot DECORATION = TextureSlot.create("decoration");
        public static final TextureSlot DOOR = TextureSlot.create("door");
        public static final TextureSlot BARS = TextureSlot.create("bars");
        public static final TextureSlot HANDLE = TextureSlot.create("handle");
        public static final TextureSlot KNIFE = TextureSlot.create("knife");
        public static final TextureSlot GLASS = TextureSlot.create("glass");
        public static final TextureSlot FAUCET = TextureSlot.create("faucet");
        public static final TextureSlot CHAIN = TextureSlot.create("chain");
        public static final TextureSlot WATER = TextureSlot.create("water");
        public static final TextureSlot STREAM = TextureSlot.create("stream");
        public static final TextureSlot FURNACE = TextureSlot.create("furnace");
        public static final TextureSlot TILE_BASE = TextureSlot.create("tile_base");
        public static final TextureSlot TILE_2 = TextureSlot.create("tile_2");
    }

    public static class ModelTemplates {
        public static final ModelTemplate CRATE = new ModelTemplate(Optional.of(FabulousFurniture.prefix("crate_template").withPrefix("block/template/")), Optional.empty(), TextureSlot.PARTICLE, TextureSlots.PLANKS, TextureSlots.LOG);
        public static final ModelTemplate KITCHEN_COUNTER = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_counter_template").withPrefix("block/template/")), Optional.empty(), TextureSlot.PARTICLE, TextureSlots.COUNTER, TextureSlots.TOP);
        public static final ModelTemplate KITCHEN_COUNTER_INNER_CORNER = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_counter_inner_corner_template").withPrefix("block/template/")), Optional.empty(), TextureSlot.PARTICLE, TextureSlots.COUNTER, TextureSlots.TOP);
        public static final ModelTemplate KITCHEN_COUNTER_OUTER_CORNER = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_counter_outer_corner_template").withPrefix("block/template/")), Optional.empty(), TextureSlot.PARTICLE, TextureSlots.COUNTER, TextureSlots.TOP);
        public static final ModelTemplate KITCHEN_COUNTER_OPEN = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_counter_open_template").withPrefix("block/template/")), Optional.empty(), TextureSlot.PARTICLE, TextureSlots.COUNTER, TextureSlots.TOP);
        public static final ModelTemplate KITCHEN_COUNTER_DOOR = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_counter_door_template").withPrefix("block/template/")), Optional.empty(), TextureSlot.PARTICLE, TextureSlots.COUNTER, TextureSlots.TOP, TextureSlots.DOOR);
        public static final ModelTemplate KITCHEN_COUNTER_DOOR_OPEN = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_counter_door_open_template").withPrefix("block/template/")), Optional.of("_open"), TextureSlot.PARTICLE, TextureSlots.COUNTER, TextureSlots.TOP, TextureSlots.DOOR);
        public static final ModelTemplate KITCHEN_COUNTER_DOOR_MIRRORED = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_counter_door_mirrored_template").withPrefix("block/template/")), Optional.of("_mirrored"), TextureSlot.PARTICLE, TextureSlots.COUNTER, TextureSlots.TOP, TextureSlots.DOOR);
        public static final ModelTemplate KITCHEN_COUNTER_DOOR_MIRRORED_OPEN = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_counter_door_mirrored_open_template").withPrefix("block/template/")), Optional.of("_mirrored_open"), TextureSlot.PARTICLE, TextureSlots.COUNTER, TextureSlots.TOP, TextureSlots.DOOR);
        public static final ModelTemplate KITCHEN_COUNTER_GLASS_DOOR = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_counter_glass_door_template").withPrefix("block/template/")), Optional.empty(), TextureSlot.PARTICLE, TextureSlots.COUNTER, TextureSlots.TOP, TextureSlots.DOOR, TextureSlots.GLASS);
        public static final ModelTemplate KITCHEN_COUNTER_GLASS_DOOR_OPEN = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_counter_glass_door_open_template").withPrefix("block/template/")), Optional.of("_open"), TextureSlot.PARTICLE, TextureSlots.COUNTER, TextureSlots.TOP, TextureSlots.DOOR, TextureSlots.GLASS);
        public static final ModelTemplate KITCHEN_COUNTER_GLASS_DOOR_MIRRORED = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_counter_glass_door_mirrored_template").withPrefix("block/template/")), Optional.of("_mirrored"), TextureSlot.PARTICLE, TextureSlots.COUNTER, TextureSlots.TOP, TextureSlots.DOOR, TextureSlots.GLASS);
        public static final ModelTemplate KITCHEN_COUNTER_GLASS_DOOR_MIRRORED_OPEN = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_counter_glass_door_mirrored_open_template").withPrefix("block/template/")), Optional.of("_mirrored_open"), TextureSlot.PARTICLE, TextureSlots.COUNTER, TextureSlots.TOP, TextureSlots.DOOR, TextureSlots.GLASS);
        public static final ModelTemplate KITCHEN_COUNTER_SMALL_DRAWER = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_counter_small_drawer_template").withPrefix("block/template/")), Optional.empty(), TextureSlot.PARTICLE, TextureSlots.COUNTER, TextureSlots.TOP, TextureSlots.DOOR);
        public static final ModelTemplate KITCHEN_COUNTER_SMALL_DRAWER_OPEN = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_counter_small_drawer_open_template").withPrefix("block/template/")), Optional.of("_open"), TextureSlot.PARTICLE, TextureSlots.COUNTER, TextureSlots.TOP, TextureSlots.DOOR);
        public static final ModelTemplate KITCHEN_COUNTER_BIG_DRAWER = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_counter_big_drawer_template").withPrefix("block/template/")), Optional.empty(), TextureSlot.PARTICLE, TextureSlots.COUNTER, TextureSlots.TOP, TextureSlots.DOOR);
        public static final ModelTemplate KITCHEN_COUNTER_BIG_DRAWER_OPEN = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_counter_big_drawer_open_template").withPrefix("block/template/")), Optional.of("_open"), TextureSlot.PARTICLE, TextureSlots.COUNTER, TextureSlots.TOP, TextureSlots.DOOR);
        public static final ModelTemplate KITCHEN_COUNTER_SINK_EMPTY = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_counter_sink_empty_template").withPrefix("block/template/")), Optional.empty(), TextureSlot.PARTICLE, TextureSlots.COUNTER, TextureSlots.TOP, TextureSlots.FAUCET);
        public static final ModelTemplate KITCHEN_COUNTER_SINK_EMPTY_ON = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_counter_sink_empty_on_template").withPrefix("block/template/")), Optional.of("_on"), TextureSlot.PARTICLE, TextureSlots.COUNTER, TextureSlots.TOP, TextureSlots.FAUCET, TextureSlots.STREAM);
        public static final ModelTemplate KITCHEN_COUNTER_SINK_LEVEL_1 = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_counter_sink_level_1_template").withPrefix("block/template/")), Optional.of("_level_1"), TextureSlot.PARTICLE, TextureSlots.COUNTER, TextureSlots.TOP, TextureSlots.FAUCET, TextureSlots.WATER);
        public static final ModelTemplate KITCHEN_COUNTER_SINK_LEVEL_1_ON = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_counter_sink_level_1_on_template").withPrefix("block/template/")), Optional.of("_level_1_on"), TextureSlot.PARTICLE, TextureSlots.COUNTER, TextureSlots.TOP, TextureSlots.FAUCET, TextureSlots.WATER, TextureSlots.STREAM);
        public static final ModelTemplate KITCHEN_COUNTER_SINK_LEVEL_2 = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_counter_sink_level_2_template").withPrefix("block/template/")), Optional.of("_level_2"), TextureSlot.PARTICLE, TextureSlots.COUNTER, TextureSlots.TOP, TextureSlots.FAUCET, TextureSlots.WATER);
        public static final ModelTemplate KITCHEN_COUNTER_SINK_LEVEL_2_ON = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_counter_sink_level_2_on_template").withPrefix("block/template/")), Optional.of("_level_2_on"), TextureSlot.PARTICLE, TextureSlots.COUNTER, TextureSlots.TOP, TextureSlots.FAUCET, TextureSlots.WATER, TextureSlots.STREAM);
        public static final ModelTemplate KITCHEN_COUNTER_SINK_LEVEL_3 = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_counter_sink_level_3_template").withPrefix("block/template/")), Optional.of("_level_3"), TextureSlot.PARTICLE, TextureSlots.COUNTER, TextureSlots.TOP, TextureSlots.FAUCET, TextureSlots.WATER);
        public static final ModelTemplate KITCHEN_COUNTER_SINK_LEVEL_3_ON = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_counter_sink_level_3_on_template").withPrefix("block/template/")), Optional.of("_level_3_on"), TextureSlot.PARTICLE, TextureSlots.COUNTER, TextureSlots.TOP, TextureSlots.FAUCET, TextureSlots.WATER, TextureSlots.STREAM);
        public static final ModelTemplate KITCHEN_COUNTER_SMOKER = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_counter_smoker_template").withPrefix("block/template/")), Optional.empty(), TextureSlot.PARTICLE, TextureSlots.COUNTER, TextureSlots.TOP, TextureSlots.FURNACE);
        public static final ModelTemplate KITCHEN_COUNTER_SMOKER_LIT = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_counter_smoker_lit_template").withPrefix("block/template/")), Optional.of("_lit"), TextureSlot.PARTICLE, TextureSlots.COUNTER, TextureSlots.TOP, TextureSlots.FURNACE);

        public static final ModelTemplate KITCHEN_CABINET = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_cabinet_template").withPrefix("block/template/")), Optional.empty(), TextureSlot.PARTICLE, TextureSlots.CABINET);
        public static final ModelTemplate KITCHEN_CABINET_INNER_CORNER = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_cabinet_inner_corner_template").withPrefix("block/template/")), Optional.empty(), TextureSlot.PARTICLE, TextureSlots.CABINET);
        public static final ModelTemplate KITCHEN_CABINET_OUTER_CORNER = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_cabinet_outer_corner_template").withPrefix("block/template/")), Optional.empty(), TextureSlot.PARTICLE, TextureSlots.CABINET);
        public static final ModelTemplate KITCHEN_CABINET_OPEN = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_cabinet_open_template").withPrefix("block/template/")), Optional.empty(), TextureSlot.PARTICLE, TextureSlots.CABINET);
        public static final ModelTemplate KITCHEN_CABINET_DOOR = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_cabinet_door_template").withPrefix("block/template/")), Optional.empty(), TextureSlot.PARTICLE, TextureSlots.CABINET, TextureSlots.DOOR, TextureSlots.HANDLE);
        public static final ModelTemplate KITCHEN_CABINET_DOOR_OPEN = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_cabinet_door_open_template").withPrefix("block/template/")), Optional.of("_open"), TextureSlot.PARTICLE, TextureSlots.CABINET, TextureSlots.DOOR, TextureSlots.HANDLE);
        public static final ModelTemplate KITCHEN_CABINET_GLASS_DOOR = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_cabinet_glass_door_template").withPrefix("block/template/")), Optional.empty(), TextureSlot.PARTICLE, TextureSlots.CABINET, TextureSlots.DOOR, TextureSlots.HANDLE, TextureSlots.GLASS);
        public static final ModelTemplate KITCHEN_CABINET_GLASS_DOOR_OPEN = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_cabinet_glass_door_open_template").withPrefix("block/template/")), Optional.of("_open"), TextureSlot.PARTICLE, TextureSlots.CABINET, TextureSlots.DOOR, TextureSlots.HANDLE, TextureSlots.GLASS);
        public static final ModelTemplate KITCHEN_CABINET_DOOR_SIDEWAYS = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_cabinet_sideways_door_template").withPrefix("block/template/")), Optional.empty(), TextureSlot.PARTICLE, TextureSlots.CABINET, TextureSlots.DOOR, TextureSlots.HANDLE);
        public static final ModelTemplate KITCHEN_CABINET_DOOR_SIDEWAYS_OPEN = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_cabinet_sideways_door_open_template").withPrefix("block/template/")), Optional.of("_open"), TextureSlot.PARTICLE, TextureSlots.CABINET, TextureSlots.DOOR, TextureSlots.HANDLE);
        public static final ModelTemplate KITCHEN_CABINET_DOOR_SIDEWAYS_MIRRORED = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_cabinet_sideways_door_mirrored_template").withPrefix("block/template/")), Optional.of("_mirrored"), TextureSlot.PARTICLE, TextureSlots.CABINET, TextureSlots.DOOR, TextureSlots.HANDLE);
        public static final ModelTemplate KITCHEN_CABINET_DOOR_SIDEWAYS_MIRRORED_OPEN = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_cabinet_sideways_door_mirrored_open_template").withPrefix("block/template/")), Optional.of("_mirrored_open"), TextureSlot.PARTICLE, TextureSlots.CABINET, TextureSlots.DOOR, TextureSlots.HANDLE);
        public static final ModelTemplate KITCHEN_CABINET_GLASS_DOOR_SIDEWAYS = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_cabinet_sideways_glass_door_template").withPrefix("block/template/")), Optional.empty(), TextureSlot.PARTICLE, TextureSlots.CABINET, TextureSlots.DOOR, TextureSlots.HANDLE, TextureSlots.GLASS);
        public static final ModelTemplate KITCHEN_CABINET_GLASS_DOOR_SIDEWAYS_OPEN = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_cabinet_sideways_glass_door_open_template").withPrefix("block/template/")), Optional.of("_open"), TextureSlot.PARTICLE, TextureSlots.CABINET, TextureSlots.DOOR, TextureSlots.HANDLE, TextureSlots.GLASS);
        public static final ModelTemplate KITCHEN_CABINET_GLASS_DOOR_SIDEWAYS_MIRRORED = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_cabinet_sideways_glass_door_mirrored_template").withPrefix("block/template/")), Optional.of("_mirrored"), TextureSlot.PARTICLE, TextureSlots.CABINET, TextureSlots.DOOR, TextureSlots.HANDLE, TextureSlots.GLASS);
        public static final ModelTemplate KITCHEN_CABINET_GLASS_DOOR_SIDEWAYS_MIRRORED_OPEN = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_cabinet_sideways_glass_door_mirrored_open_template").withPrefix("block/template/")), Optional.of("_mirrored_open"), TextureSlot.PARTICLE, TextureSlots.CABINET, TextureSlots.DOOR, TextureSlots.HANDLE, TextureSlots.GLASS);
        public static final ModelTemplate KITCHEN_CABINET_SHELF_SINGLE = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_cabinet_shelf_single_template").withPrefix("block/template/")), Optional.of("_single"), TextureSlot.PARTICLE, TextureSlots.PLANKS, TextureSlots.CHAIN);
        public static final ModelTemplate KITCHEN_CABINET_SHELF_RIGHT = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_cabinet_shelf_right_template").withPrefix("block/template/")), Optional.of("_right"), TextureSlot.PARTICLE, TextureSlots.PLANKS, TextureSlots.CHAIN);
        public static final ModelTemplate KITCHEN_CABINET_SHELF_LEFT = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_cabinet_shelf_left_template").withPrefix("block/template/")), Optional.of("_left"), TextureSlot.PARTICLE, TextureSlots.PLANKS, TextureSlots.CHAIN);
        public static final ModelTemplate KITCHEN_CABINET_SHELF_MIDDLE = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_cabinet_shelf_middle_template").withPrefix("block/template/")), Optional.of("_middle"), TextureSlot.PARTICLE, TextureSlots.PLANKS);

        public static final ModelTemplate FRIDGE_BOTTOM = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_fridge_bottom_template").withPrefix("block/template/")), Optional.of("_bottom"), TextureSlot.PARTICLE, TextureSlots.FRIDGE, TextureSlots.BARS, TextureSlots.HANDLE);
        public static final ModelTemplate FRIDGE_BOTTOM_OPEN = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_fridge_bottom_open_template").withPrefix("block/template/")), Optional.of("_bottom_open"), TextureSlot.PARTICLE, TextureSlots.FRIDGE, TextureSlots.BARS, TextureSlots.HANDLE);
        public static final ModelTemplate FRIDGE_BOTTOM_MIRRORED = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_fridge_bottom_mirrored_template").withPrefix("block/template/")), Optional.of("_bottom_mirrored"), TextureSlot.PARTICLE, TextureSlots.FRIDGE, TextureSlots.BARS, TextureSlots.HANDLE);
        public static final ModelTemplate FRIDGE_BOTTOM_MIRRORED_OPEN = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_fridge_bottom_mirrored_open_template").withPrefix("block/template/")), Optional.of("_bottom_mirrored_open"), TextureSlot.PARTICLE, TextureSlots.FRIDGE, TextureSlots.BARS, TextureSlots.HANDLE);
        public static final ModelTemplate FRIDGE_TOP = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_fridge_top_template").withPrefix("block/template/")), Optional.of("_top"), TextureSlot.PARTICLE, TextureSlots.FRIDGE, TextureSlots.HANDLE);
        public static final ModelTemplate FRIDGE_TOP_OPEN = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_fridge_top_open_template").withPrefix("block/template/")), Optional.of("_top_open"), TextureSlot.PARTICLE, TextureSlots.FRIDGE, TextureSlots.HANDLE);
        public static final ModelTemplate FRIDGE_TOP_MIRRORED = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_fridge_top_mirrored_template").withPrefix("block/template/")), Optional.of("_top_mirrored"), TextureSlot.PARTICLE, TextureSlots.FRIDGE, TextureSlots.HANDLE);
        public static final ModelTemplate FRIDGE_TOP_MIRRORED_OPEN = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_fridge_top_mirrored_open_template").withPrefix("block/template/")), Optional.of("_top_mirrored_open"), TextureSlot.PARTICLE, TextureSlots.FRIDGE, TextureSlots.HANDLE);

        public static final ModelTemplate KNIFE_BLOCK = new ModelTemplate(Optional.of(FabulousFurniture.prefix("knife_block_template").withPrefix("block/template/")), Optional.empty(), TextureSlot.PARTICLE, TextureSlots.BLOCK, TextureSlots.STAND, TextureSlots.HANDLE, TextureSlots.KNIFE);

        public static final ModelTemplate CHAIR = new ModelTemplate(Optional.of(FabulousFurniture.prefix("wooden_chair_template").withPrefix("block/template/")), Optional.empty(), TextureSlot.PARTICLE, TextureSlots.CHAIR, TextureSlots.DECORATION, TextureSlots.WOOL);
        public static final ModelTemplate TABLE_SINGLE = new ModelTemplate(Optional.of(FabulousFurniture.prefix("wooden_table_single_template").withPrefix("block/template/")), Optional.of("_single"), TextureSlot.PARTICLE, TextureSlots.PLANKS);
        public static final ModelTemplate TABLE_MIDDLE = new ModelTemplate(Optional.of(FabulousFurniture.prefix("wooden_table_middle_template").withPrefix("block/template/")), Optional.of("_middle"), TextureSlot.PARTICLE, TextureSlots.PLANKS);
        public static final ModelTemplate TABLE_NORTH = new ModelTemplate(Optional.of(FabulousFurniture.prefix("wooden_table_north_template").withPrefix("block/template/")), Optional.of("_north"), TextureSlot.PARTICLE, TextureSlots.PLANKS);
        public static final ModelTemplate TABLE_EAST = new ModelTemplate(Optional.of(FabulousFurniture.prefix("wooden_table_east_template").withPrefix("block/template/")), Optional.of("_east"), TextureSlot.PARTICLE, TextureSlots.PLANKS);
        public static final ModelTemplate TABLE_SOUTH = new ModelTemplate(Optional.of(FabulousFurniture.prefix("wooden_table_south_template").withPrefix("block/template/")), Optional.of("_south"), TextureSlot.PARTICLE, TextureSlots.PLANKS);
        public static final ModelTemplate TABLE_WEST = new ModelTemplate(Optional.of(FabulousFurniture.prefix("wooden_table_west_template").withPrefix("block/template/")), Optional.of("_west"), TextureSlot.PARTICLE, TextureSlots.PLANKS);
        public static final ModelTemplate TABLE_NORTH_EAST = new ModelTemplate(Optional.of(FabulousFurniture.prefix("wooden_table_north_east_template").withPrefix("block/template/")), Optional.of("_north_east"), TextureSlot.PARTICLE, TextureSlots.PLANKS);
        public static final ModelTemplate TABLE_NORTH_WEST = new ModelTemplate(Optional.of(FabulousFurniture.prefix("wooden_table_north_west_template").withPrefix("block/template/")), Optional.of("_north_west"), TextureSlot.PARTICLE, TextureSlots.PLANKS);
        public static final ModelTemplate TABLE_SOUTH_EAST = new ModelTemplate(Optional.of(FabulousFurniture.prefix("wooden_table_south_east_template").withPrefix("block/template/")), Optional.of("_south_east"), TextureSlot.PARTICLE, TextureSlots.PLANKS);
        public static final ModelTemplate TABLE_SOUTH_WEST = new ModelTemplate(Optional.of(FabulousFurniture.prefix("wooden_table_south_west_template").withPrefix("block/template/")), Optional.of("_south_west"), TextureSlot.PARTICLE, TextureSlots.PLANKS);

        public static final ModelTemplate CURTAIN_SMALL_CLOSED = new ModelTemplate(Optional.of(FabulousFurniture.prefix("curtains_small_closed_template").withPrefix("block/template/")), Optional.of("_small_closed"), TextureSlot.PARTICLE, TextureSlots.WOOL, TextureSlots.CURTAIN_ROD);
        public static final ModelTemplate CURTAIN_SMALL_SINGLE_OPEN = new ModelTemplate(Optional.of(FabulousFurniture.prefix("curtains_small_single_open_template").withPrefix("block/template/")), Optional.of("_small_single_open"), TextureSlot.PARTICLE, TextureSlots.WOOL, TextureSlots.CURTAIN_ROD);
        public static final ModelTemplate CURTAIN_SMALL_LEFT_OPEN = new ModelTemplate(Optional.of(FabulousFurniture.prefix("curtains_small_left_open_template").withPrefix("block/template/")), Optional.of("_small_left_open"), TextureSlot.PARTICLE, TextureSlots.WOOL, TextureSlots.CURTAIN_ROD);
        public static final ModelTemplate CURTAIN_SMALL_RIGHT_OPEN = new ModelTemplate(Optional.of(FabulousFurniture.prefix("curtains_small_right_open_template").withPrefix("block/template/")), Optional.of("_small_right_open"), TextureSlot.PARTICLE, TextureSlots.WOOL, TextureSlots.CURTAIN_ROD);
        public static final ModelTemplate CURTAIN_BIG_BOTTOM_CLOSED = new ModelTemplate(Optional.of(FabulousFurniture.prefix("curtains_big_bottom_closed_template").withPrefix("block/template/")), Optional.of("_big_bottom_closed"), TextureSlot.PARTICLE, TextureSlots.WOOL, TextureSlots.CURTAIN_ROD);
        public static final ModelTemplate CURTAIN_BIG_TOP_CLOSED = new ModelTemplate(Optional.of(FabulousFurniture.prefix("curtains_big_top_closed_template").withPrefix("block/template/")), Optional.of("_big_top_closed"), TextureSlot.PARTICLE, TextureSlots.WOOL, TextureSlots.CURTAIN_ROD);
        public static final ModelTemplate CURTAIN_BIG_TOP_SINGLE_OPEN = new ModelTemplate(Optional.of(FabulousFurniture.prefix("curtains_big_top_single_open_template").withPrefix("block/template/")), Optional.of("_big_top_single_open"), TextureSlot.PARTICLE, TextureSlots.WOOL, TextureSlots.CURTAIN_ROD);
        public static final ModelTemplate CURTAIN_BIG_BOTTOM_SINGLE_OPEN = new ModelTemplate(Optional.of(FabulousFurniture.prefix("curtains_big_bottom_single_open_template").withPrefix("block/template/")), Optional.of("_big_bottom_single_open"), TextureSlot.PARTICLE, TextureSlots.WOOL, TextureSlots.CURTAIN_ROD);
        public static final ModelTemplate CURTAIN_BIG_BOTTOM_LEFT_OPEN = new ModelTemplate(Optional.of(FabulousFurniture.prefix("curtains_big_bottom_left_open_template").withPrefix("block/template/")), Optional.of("_big_bottom_left_open"), TextureSlot.PARTICLE, TextureSlots.WOOL, TextureSlots.CURTAIN_ROD);
        public static final ModelTemplate CURTAIN_BIG_BOTTOM_RIGHT_OPEN = new ModelTemplate(Optional.of(FabulousFurniture.prefix("curtains_big_bottom_right_open_template").withPrefix("block/template/")), Optional.of("_big_bottom_right_open"), TextureSlot.PARTICLE, TextureSlots.WOOL, TextureSlots.CURTAIN_ROD);
        public static final ModelTemplate CURTAIN_BIG_BOTTOM_MIDDLE_OPEN = new ModelTemplate(Optional.of(FabulousFurniture.prefix("curtains_big_bottom_middle_open_template").withPrefix("block/template/")), Optional.of("_big_bottom_middle_open"), TextureSlot.PARTICLE, TextureSlots.WOOL, TextureSlots.CURTAIN_ROD);
        public static final ModelTemplate CURTAIN_BIG_TOP_LEFT_OPEN = new ModelTemplate(Optional.of(FabulousFurniture.prefix("curtains_big_top_left_open_template").withPrefix("block/template/")), Optional.of("_big_top_left_open"), TextureSlot.PARTICLE, TextureSlots.WOOL, TextureSlots.CURTAIN_ROD);
        public static final ModelTemplate CURTAIN_BIG_TOP_RIGHT_OPEN = new ModelTemplate(Optional.of(FabulousFurniture.prefix("curtains_big_top_right_open_template").withPrefix("block/template/")), Optional.of("_big_top_right_open"), TextureSlot.PARTICLE, TextureSlots.WOOL, TextureSlots.CURTAIN_ROD);
        public static final ModelTemplate CURTAIN_BIG_TOP_MIDDLE_OPEN = new ModelTemplate(Optional.of(FabulousFurniture.prefix("curtains_big_top_middle_open_template").withPrefix("block/template/")), Optional.of("_big_top_middle_open"), TextureSlot.PARTICLE, TextureSlots.WOOL, TextureSlots.CURTAIN_ROD);

        public static final ModelTemplate KITCHEN_TILES = new ModelTemplate(Optional.of(FabulousFurniture.prefix("kitchen_tiles_template").withPrefix("block/template/")), Optional.empty(), TextureSlot.PARTICLE, TextureSlots.TILE_BASE, TextureSlots.TILE_2);
    }
}